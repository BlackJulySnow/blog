{"meta":{"version":1,"warehouse":"4.0.1"},"models":{"Asset":[{"_id":"themes/landscape/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/js/script.js","path":"js/script.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/keep/source/css/font-awesome.min.css","path":"css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/keep/source/css/style.styl","path":"css/style.styl","modified":1,"renderable":1},{"_id":"themes/keep/source/images/avatar.svg","path":"images/avatar.svg","modified":0,"renderable":1},{"_id":"themes/keep/source/images/bg.svg","path":"images/bg.svg","modified":0,"renderable":1},{"_id":"themes/keep/source/images/loading.svg","path":"images/loading.svg","modified":0,"renderable":1},{"_id":"themes/keep/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/keep/source/images/upyun.png","path":"images/upyun.png","modified":0,"renderable":1},{"_id":"themes/keep/source/js/back2top.js","path":"js/back2top.js","modified":0,"renderable":1},{"_id":"themes/keep/source/js/code-copy.js","path":"js/code-copy.js","modified":0,"renderable":1},{"_id":"themes/keep/source/js/dark-light-toggle.js","path":"js/dark-light-toggle.js","modified":0,"renderable":1},{"_id":"themes/keep/source/js/header-shrink.js","path":"js/header-shrink.js","modified":0,"renderable":1},{"_id":"themes/keep/source/js/lazyload.js","path":"js/lazyload.js","modified":0,"renderable":1},{"_id":"themes/keep/source/js/left-side-toggle.js","path":"js/left-side-toggle.js","modified":0,"renderable":1},{"_id":"themes/keep/source/js/local-search.js","path":"js/local-search.js","modified":0,"renderable":1},{"_id":"themes/keep/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/keep/source/js/toc.js","path":"js/toc.js","modified":0,"renderable":1},{"_id":"themes/keep/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-brands-400.eot","path":"webfonts/fa-brands-400.eot","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-brands-400.svg","path":"webfonts/fa-brands-400.svg","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-brands-400.ttf","path":"webfonts/fa-brands-400.ttf","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-brands-400.woff","path":"webfonts/fa-brands-400.woff","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-brands-400.woff2","path":"webfonts/fa-brands-400.woff2","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-regular-400.eot","path":"webfonts/fa-regular-400.eot","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-regular-400.svg","path":"webfonts/fa-regular-400.svg","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-regular-400.ttf","path":"webfonts/fa-regular-400.ttf","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-regular-400.woff","path":"webfonts/fa-regular-400.woff","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-regular-400.woff2","path":"webfonts/fa-regular-400.woff2","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-solid-900.eot","path":"webfonts/fa-solid-900.eot","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-solid-900.svg","path":"webfonts/fa-solid-900.svg","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-solid-900.ttf","path":"webfonts/fa-solid-900.ttf","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-solid-900.woff","path":"webfonts/fa-solid-900.woff","modified":0,"renderable":1},{"_id":"themes/keep/source/webfonts/fa-solid-900.woff2","path":"webfonts/fa-solid-900.woff2","modified":0,"renderable":1},{"_id":"themes/keep/source/css/common/animated.styl","path":"css/common/animated.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/common/basic.styl","path":"css/common/basic.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/common/keep-theme.styl","path":"css/common/keep-theme.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/common/markdown.styl","path":"css/common/markdown.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/common/variables.styl","path":"css/common/variables.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/layout/archive-content.styl","path":"css/layout/archive-content.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/layout/article-content.styl","path":"css/layout/article-content.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/layout/category-content.styl","path":"css/layout/category-content.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/layout/category-list.styl","path":"css/layout/category-list.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/layout/home-content.styl","path":"css/layout/home-content.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/layout/page.styl","path":"css/layout/page.styl","modified":1,"renderable":1},{"_id":"themes/keep/source/css/layout/tag-content.styl","path":"css/layout/tag-content.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/js/libs/anime.min.js","path":"js/libs/anime.min.js","modified":0,"renderable":1},{"_id":"themes/keep/source/js/libs/pjax.min.js","path":"js/libs/pjax.min.js","modified":0,"renderable":1},{"_id":"themes/keep/source/css/common/codeblock/code-theme.styl","path":"css/common/codeblock/code-theme.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/common/codeblock/copy-code.styl","path":"css/common/codeblock/copy-code.styl","modified":0,"renderable":1},{"_id":"themes/keep/source/css/common/codeblock/highlight.styl","path":"css/common/codeblock/highlight.styl","modified":0,"renderable":1},{"_id":"source/images/favicon.ico","path":"images/favicon.ico","modified":0,"renderable":0},{"_id":"source/images/acm.png","path":"images/acm.png","modified":0,"renderable":0},{"_id":"source/images/pasted-0.png","path":"images/pasted-0.png","modified":0,"renderable":0},{"_id":"source/images/pasted-1.png","path":"images/pasted-1.png","modified":0,"renderable":0},{"_id":"source/images/pasted-2.png","path":"images/pasted-2.png","modified":0,"renderable":0},{"_id":"source/images/pasted-3.png","path":"images/pasted-3.png","modified":0,"renderable":0}],"Cache":[{"_id":"source/_posts/hello-world.md","hash":"7d98d6592de80fdcd2949bd7401cec12afd98cdf","modified":1654488278205},{"_id":"themes/landscape/.npmignore","hash":"58d26d4b5f2f94c2d02a4e4a448088e4a2527c77","modified":1654488278197},{"_id":"themes/landscape/Gruntfile.js","hash":"71adaeaac1f3cc56e36c49d549b8d8a72235c9b9","modified":1654488278197},{"_id":"themes/landscape/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1654488278197},{"_id":"themes/landscape/README.md","hash":"37fae88639ef60d63bd0de22314d7cc4c5d94b07","modified":1654488278197},{"_id":"themes/landscape/_config.yml","hash":"79ac6b9ed6a4de5a21ea53fc3f5a3de92e2475ff","modified":1654488278197},{"_id":"themes/landscape/package.json","hash":"544f21a0b2c7034998b36ae94dba6e3e0f39f228","modified":1654488278197},{"_id":"themes/landscape/languages/de.yml","hash":"3ebf0775abbee928c8d7bda943c191d166ded0d3","modified":1654488278197},{"_id":"themes/landscape/languages/default.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1654488278201},{"_id":"themes/landscape/languages/es.yml","hash":"76edb1171b86532ef12cfd15f5f2c1ac3949f061","modified":1654488278201},{"_id":"themes/landscape/languages/fr.yml","hash":"415e1c580ced8e4ce20b3b0aeedc3610341c76fb","modified":1654488278205},{"_id":"themes/landscape/languages/ja.yml","hash":"a73e1b9c80fd6e930e2628b393bfe3fb716a21a9","modified":1654488278201},{"_id":"themes/landscape/languages/ko.yml","hash":"881d6a0a101706e0452af81c580218e0bfddd9cf","modified":1654488278201},{"_id":"themes/landscape/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1654488278201},{"_id":"themes/landscape/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1654488278201},{"_id":"themes/landscape/languages/pt.yml","hash":"57d07b75d434fbfc33b0ddb543021cb5f53318a8","modified":1654488278201},{"_id":"themes/landscape/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1654488278205},{"_id":"themes/landscape/languages/zh-CN.yml","hash":"ca40697097ab0b3672a80b455d3f4081292d1eed","modified":1654488278205},{"_id":"themes/landscape/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1654488278205},{"_id":"themes/landscape/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1654488278197},{"_id":"themes/landscape/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1654488278205},{"_id":"themes/landscape/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1654488278205},{"_id":"themes/landscape/layout/layout.ejs","hash":"f155824ca6130080bb057fa3e868a743c69c4cf5","modified":1654488278205},{"_id":"themes/landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1654488278205},{"_id":"themes/landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1654488278205},{"_id":"themes/landscape/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1654488278205},{"_id":"themes/landscape/scripts/fancybox.js","hash":"aa411cd072399df1ddc8e2181a3204678a5177d9","modified":1654488278201},{"_id":"themes/landscape/layout/_partial/after-footer.ejs","hash":"d0d753d39038284d52b10e5075979cc97db9cd20","modified":1654488278205},{"_id":"themes/landscape/layout/_partial/archive-post.ejs","hash":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":1654488278209},{"_id":"themes/landscape/layout/_partial/archive.ejs","hash":"950ddd91db8718153b329b96dc14439ab8463ba5","modified":1654488278209},{"_id":"themes/landscape/layout/_partial/article.ejs","hash":"c4c835615d96a950d51fa2c3b5d64d0596534fed","modified":1654488278209},{"_id":"themes/landscape/layout/_partial/footer.ejs","hash":"93518893cf91287e797ebac543c560e2a63b8d0e","modified":1654488278209},{"_id":"themes/landscape/layout/_partial/gauges-analytics.ejs","hash":"aad6312ac197d6c5aaf2104ac863d7eba46b772a","modified":1654488278209},{"_id":"themes/landscape/layout/_partial/google-analytics.ejs","hash":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":1654488278209},{"_id":"themes/landscape/layout/_partial/head.ejs","hash":"5abf77aec957d9445fc71a8310252f0013c84578","modified":1654488278209},{"_id":"themes/landscape/layout/_partial/header.ejs","hash":"7e749050be126eadbc42decfbea75124ae430413","modified":1654488278213},{"_id":"themes/landscape/layout/_partial/mobile-nav.ejs","hash":"e952a532dfc583930a666b9d4479c32d4a84b44e","modified":1654488278213},{"_id":"themes/landscape/layout/_partial/sidebar.ejs","hash":"930da35cc2d447a92e5ee8f835735e6fd2232469","modified":1654488278213},{"_id":"themes/landscape/layout/_widget/archive.ejs","hash":"beb4a86fcc82a9bdda9289b59db5a1988918bec3","modified":1654488278205},{"_id":"themes/landscape/layout/_widget/category.ejs","hash":"dd1e5af3c6af3f5d6c85dfd5ca1766faed6a0b05","modified":1654488278209},{"_id":"themes/landscape/layout/_widget/recent_posts.ejs","hash":"0d4f064733f8b9e45c0ce131fe4a689d570c883a","modified":1654488278209},{"_id":"themes/landscape/layout/_widget/tag.ejs","hash":"2de380865df9ab5f577f7d3bcadf44261eb5faae","modified":1654488278209},{"_id":"themes/landscape/layout/_widget/tagcloud.ejs","hash":"b4a2079101643f63993dcdb32925c9b071763b46","modified":1654488278209},{"_id":"themes/landscape/source/css/_extend.styl","hash":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":1654488278213},{"_id":"themes/landscape/source/css/_variables.styl","hash":"628e307579ea46b5928424313993f17b8d729e92","modified":1654488278217},{"_id":"themes/landscape/source/css/style.styl","hash":"a70d9c44dac348d742702f6ba87e5bb3084d65db","modified":1654488278217},{"_id":"themes/landscape/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1654488278217},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1654488278217},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1654488278217},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1654488278217},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1654488278217},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1654488278217},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1654488278217},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1654488278217},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1654488278217},{"_id":"themes/landscape/source/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1654488278213},{"_id":"themes/landscape/layout/_partial/post/category.ejs","hash":"c6bcd0e04271ffca81da25bcff5adf3d46f02fc0","modified":1654488278213},{"_id":"themes/landscape/layout/_partial/post/date.ejs","hash":"6197802873157656e3077c5099a7dda3d3b01c29","modified":1654488278213},{"_id":"themes/landscape/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1654488278213},{"_id":"themes/landscape/layout/_partial/post/nav.ejs","hash":"16a904de7bceccbb36b4267565f2215704db2880","modified":1654488278213},{"_id":"themes/landscape/layout/_partial/post/tag.ejs","hash":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":1654488278213},{"_id":"themes/landscape/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1654488278213},{"_id":"themes/landscape/source/css/_partial/archive.styl","hash":"db15f5677dc68f1730e82190bab69c24611ca292","modified":1654488278217},{"_id":"themes/landscape/source/css/_partial/article.styl","hash":"10685f8787a79f79c9a26c2f943253450c498e3e","modified":1654488278221},{"_id":"themes/landscape/source/css/_partial/comment.styl","hash":"79d280d8d203abb3bd933ca9b8e38c78ec684987","modified":1654488278221},{"_id":"themes/landscape/source/css/_partial/footer.styl","hash":"e35a060b8512031048919709a8e7b1ec0e40bc1b","modified":1654488278221},{"_id":"themes/landscape/source/css/_partial/header.styl","hash":"85ab11e082f4dd86dde72bed653d57ec5381f30c","modified":1654488278221},{"_id":"themes/landscape/source/css/_partial/highlight.styl","hash":"bf4e7be1968dad495b04e83c95eac14c4d0ad7c0","modified":1654488278221},{"_id":"themes/landscape/source/css/_partial/mobile.styl","hash":"a399cf9e1e1cec3e4269066e2948d7ae5854d745","modified":1654488278221},{"_id":"themes/landscape/source/css/_partial/sidebar-aside.styl","hash":"890349df5145abf46ce7712010c89237900b3713","modified":1654488278221},{"_id":"themes/landscape/source/css/_partial/sidebar-bottom.styl","hash":"8fd4f30d319542babfd31f087ddbac550f000a8a","modified":1654488278221},{"_id":"themes/landscape/source/css/_partial/sidebar.styl","hash":"404ec059dc674a48b9ab89cd83f258dec4dcb24d","modified":1654488278221},{"_id":"themes/landscape/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":1654488278221},{"_id":"themes/landscape/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1654488278217},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1654488278217},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1654488278221},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1654488278221},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1654488278217},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1654488278225},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1654488278225},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1654488278225},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1654488278225},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1654488278225},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1654488278221},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1654488278221},{"_id":"themes/landscape/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1654488278221},{"_id":"source/_posts/My-New-Post.md","hash":"822cd3afad389cd54ec3910634772fdf0efd4a91","modified":1654589303000},{"_id":"themes/keep/.editorconfig","hash":"a1c91f0a086bf92fddb02ccf23578ec2b51c099c","modified":1654494481017},{"_id":"themes/keep/.gitignore","hash":"b49daa26b8121cc0c7074d61b377c8e7e0880d03","modified":1654494481017},{"_id":"themes/keep/.npmignore","hash":"79596a6faba67852ff4d0426602141426f48639f","modified":1654494481017},{"_id":"themes/keep/LICENSE","hash":"31a3d460bb3c7d98845187c716a30db81c44b615","modified":1654494481017},{"_id":"themes/keep/README.md","hash":"d98baf3223795c0c2faea57c471fc2af9336cef1","modified":1654494481017},{"_id":"themes/keep/README_zh-CN.md","hash":"77e024325df8ab87114408cc31c8624edb0f5022","modified":1654494481017},{"_id":"themes/keep/README_zh-TW.md","hash":"106577079fbd01a52ddb7d65fe25bf4c7f9942cd","modified":1654494481017},{"_id":"themes/keep/_config.yml","hash":"9c08f8c3efd4c12a1c0bb0b546fac6ba9eb21207","modified":1654505301448},{"_id":"themes/keep/package.json","hash":"cc05ba956ac3c672e111fed4d7d2e284d0fb9eeb","modified":1654494481017},{"_id":"themes/keep/.github/FUNDING.yml","hash":"5fae5cd239ca99c452110a009613055ec77f3902","modified":1654494481017},{"_id":"themes/keep/languages/en.yml","hash":"e4f42cfda0ed6ea1715d28fd4b1bba6f89b8cdb0","modified":1654494481017},{"_id":"themes/keep/languages/zh-CN.yml","hash":"a4bc8e834989b17d77b70080a63a0d840847ba27","modified":1654494481017},{"_id":"themes/keep/languages/zh-TW.yml","hash":"c6be2adec90f8c5d0a93a9f8d7bfb5fac0af4786","modified":1654494481017},{"_id":"themes/keep/layout/archive-content.ejs","hash":"cfa8f29b8863534f407136ea3deb18a4b2ff722c","modified":1654494481017},{"_id":"themes/keep/layout/archive.ejs","hash":"8456f112fc12bbb1c83cd190d0ce83ee474bd297","modified":1654494481017},{"_id":"themes/keep/layout/article-content.ejs","hash":"1a5f94c8a27ef232ccf62e886a9dde56da3065bc","modified":1654494481017},{"_id":"themes/keep/layout/category-content.ejs","hash":"aef0c90a395f909be7d2c358eb41d5558a10406f","modified":1654494481017},{"_id":"themes/keep/layout/category-list.ejs","hash":"a9390b25238332417fd554d32563a4d9999db90f","modified":1654494481017},{"_id":"themes/keep/layout/category.ejs","hash":"8456f112fc12bbb1c83cd190d0ce83ee474bd297","modified":1654494481017},{"_id":"themes/keep/layout/home-content.ejs","hash":"79e16c3baa6569afbc07ac6a5d2e3f37b273016a","modified":1654494481017},{"_id":"themes/keep/layout/index.ejs","hash":"f5fee4e079a9c2c23059ebde4cd89ec723e310c6","modified":1654494481017},{"_id":"themes/keep/layout/layout.ejs","hash":"da9dbeba541ad19fed35c41fe187f4016e41f0db","modified":1654494481017},{"_id":"themes/keep/layout/page.ejs","hash":"3bc3623ba04049466bdfa9ab5f0b9014a21437f9","modified":1654862121949},{"_id":"themes/keep/layout/tag-content.ejs","hash":"ce4c8192a4ccd6a626af412a7ba258d1edbc0b95","modified":1654494481017},{"_id":"themes/keep/layout/tag.ejs","hash":"8456f112fc12bbb1c83cd190d0ce83ee474bd297","modified":1654494481017},{"_id":"themes/keep/layout/tags.ejs","hash":"8456f112fc12bbb1c83cd190d0ce83ee474bd297","modified":1654494481017},{"_id":"themes/keep/scripts/use-source-data.js","hash":"21f6a49e47b7e4d792d67503079ea5b509f18311","modified":1654494481021},{"_id":"themes/keep/layout/_partial/archive-list.ejs","hash":"7c33e49286d54824cd8f3483e30de5579951edc6","modified":1654494481017},{"_id":"themes/keep/layout/_partial/article-copyright-info.ejs","hash":"77e13720374efb902ee3d4d04d13b62de033a3ae","modified":1654494481017},{"_id":"themes/keep/layout/_partial/article-meta-info.ejs","hash":"647736023e7611917d893c33937d7260d3d5b38b","modified":1654494481017},{"_id":"themes/keep/layout/_partial/first-screen.ejs","hash":"106683de71f01b368c6f0c5417952b54fcdc9611","modified":1654494481017},{"_id":"themes/keep/layout/_partial/footer.ejs","hash":"9933e83e6e1022f4c27722f94a8b1540414b2570","modified":1654494481017},{"_id":"themes/keep/layout/_partial/friends-link.ejs","hash":"fe35aa6dabeb31bc677270062eed569f37472c2c","modified":1654494481017},{"_id":"themes/keep/layout/_partial/head.ejs","hash":"4c68f6750fc179368ca5556d80fb1781ba984ff8","modified":1654494481017},{"_id":"themes/keep/layout/_partial/header.ejs","hash":"627dfa9519ff614d6a79dac942a7b61fa5bfac8c","modified":1654494481017},{"_id":"themes/keep/layout/_partial/home-article-meta-info.ejs","hash":"0aceb1c7c29b65bd5fc2d79a285a564da8c09b63","modified":1654494481017},{"_id":"themes/keep/layout/_partial/image-viewer.ejs","hash":"beb3dec5e08856a29d585fe0eb94a8a6ddade4dd","modified":1654494481017},{"_id":"themes/keep/layout/_partial/local-search.ejs","hash":"6fbcc0a14467da8362a2eaa490d84acb1336d21b","modified":1654494481017},{"_id":"themes/keep/layout/_partial/page-template.ejs","hash":"8fd596f871326b03e707d7defcc96f639cdd628e","modified":1654494481017},{"_id":"themes/keep/layout/_partial/paginator.ejs","hash":"cfd4d9a30bd20ee0750b79226cb94562439013bf","modified":1654494481017},{"_id":"themes/keep/layout/_partial/post-tools.ejs","hash":"e8a303fa393a1716c5ff1f731923781eb12322ab","modified":1654494481017},{"_id":"themes/keep/layout/_partial/progress-bar.ejs","hash":"44af04816b86546e0260e73c2df61353e7404208","modified":1654494481017},{"_id":"themes/keep/layout/_partial/scripts.ejs","hash":"ad75de7966c4d9d923c9ac8cfbfe26b38fbe7aed","modified":1654494481017},{"_id":"themes/keep/layout/_partial/side-tools.ejs","hash":"e55d2034d7e2b8b0c1bd5ac7fdc56ffb8bbd4e60","modified":1654494481017},{"_id":"themes/keep/layout/_partial/tagcloud.ejs","hash":"5968618b53a029922f2255b0c76bf8a9f11712ff","modified":1654494481017},{"_id":"themes/keep/layout/_partial/toc.ejs","hash":"aefc9db612c0fceb4a02fdbed9fa47a6c4e144b5","modified":1654494481017},{"_id":"themes/keep/scripts/filters/lazyload-handle.js","hash":"7a8fd4996b9720c8d4cdb3042bfe5a1008f7c5fd","modified":1654494481021},{"_id":"themes/keep/scripts/filters/link-handle.js","hash":"b39cfa42d156b7ad4d4e8246b6f934cd51d8db55","modified":1654494481021},{"_id":"themes/keep/scripts/helpers/export-config.js","hash":"e7c5417a1cd61f0b7c3f97030d4a77419c41b8a5","modified":1654494481021},{"_id":"themes/keep/scripts/helpers/helper.js","hash":"41517e3f4c1cd567e2ae14acb344818a9552fac4","modified":1654494481021},{"_id":"themes/keep/source/css/font-awesome.min.css","hash":"c508528feb9fd540454f838653cd4863b290df2e","modified":1654494481021},{"_id":"themes/keep/source/css/style.styl","hash":"9fc87d9ef840cbf8831c4db11fa39af0a6c822a2","modified":1654865505946},{"_id":"themes/keep/source/images/avatar.svg","hash":"aba8367cd7550e75279f707671d7146813c2a776","modified":1654494481021},{"_id":"themes/keep/source/images/bg.svg","hash":"f3106cd334dc2ceef885c19012bf59a48498af42","modified":1654494481021},{"_id":"themes/keep/source/images/loading.svg","hash":"eedfa204e08a60ca5c80c620cfe9a3eaa6201585","modified":1654494481021},{"_id":"themes/keep/source/images/logo.svg","hash":"b618728f9964a5698b1dc2548db35b3d06dd115f","modified":1654494481021},{"_id":"themes/keep/source/images/upyun.png","hash":"f014175dd78c3ed5249e69c91603e20a3efcd330","modified":1654494481021},{"_id":"themes/keep/source/js/back2top.js","hash":"fc8e85f6704e39ae3a613bbec5dd51d449be8010","modified":1654494481021},{"_id":"themes/keep/source/js/code-copy.js","hash":"3fdabac26f6406a4592336f1f444ec966201b5d9","modified":1654494481021},{"_id":"themes/keep/source/js/dark-light-toggle.js","hash":"223e6f1d4e6e70956e4661b58c430e1c68def125","modified":1654494481021},{"_id":"themes/keep/source/js/header-shrink.js","hash":"167b9b6a9ed63c6cf4081cb3c201dd16bbbfb9ad","modified":1654494481021},{"_id":"themes/keep/source/js/lazyload.js","hash":"95aad532f17d7a8119979fc61ade9e626308a2af","modified":1654494481021},{"_id":"themes/keep/source/js/left-side-toggle.js","hash":"618f7cfc45db4d82b2f1d00d8e9ee936bcf9043b","modified":1654494481025},{"_id":"themes/keep/source/js/local-search.js","hash":"9509ec6d2d7d4466fe37ad624cf606f6639fb3fe","modified":1654494481025},{"_id":"themes/keep/source/js/main.js","hash":"ca8ed228cc0bc234be74428d029cfd047eec0ed6","modified":1654494481025},{"_id":"themes/keep/source/js/toc.js","hash":"ae69bf65d2b30d299b6ca9e2361d3b6e0db3a077","modified":1654494481025},{"_id":"themes/keep/source/js/utils.js","hash":"a2413711ebf7ffc96eafec2ef45a5d243d3ccdb6","modified":1654494481025},{"_id":"themes/keep/source/webfonts/fa-regular-400.eot","hash":"2baa9a8aa68f1d2d4712b3c7205f9105aaf21879","modified":1654494481033},{"_id":"themes/keep/source/webfonts/fa-regular-400.ttf","hash":"d64e58981a419de52bac110c979887d34e366135","modified":1654494481033},{"_id":"themes/keep/source/webfonts/fa-regular-400.woff","hash":"26afc29d39ab9fac6d0b607be7e76db093ff7c3a","modified":1654494481033},{"_id":"themes/keep/source/webfonts/fa-regular-400.woff2","hash":"fb9648469530a05fa9aac80e47d4d6960472a242","modified":1654494481033},{"_id":"themes/keep/layout/_partial/comment/comment.ejs","hash":"4a7294bbe9aa4be22878e8a638668ed7ade25e2c","modified":1654494481017},{"_id":"themes/keep/layout/_partial/comment/gitalk.ejs","hash":"28a0c8b1da66a9b6863e5444aa0b50c8f6b862f0","modified":1654494481017},{"_id":"themes/keep/layout/_partial/comment/twikoo.ejs","hash":"92d858874543c4ba149acd04374d84e784ba0aaf","modified":1654494481017},{"_id":"themes/keep/layout/_partial/comment/valine.ejs","hash":"467cafd412837af791b4c353646cf44ac4458a3f","modified":1654494481017},{"_id":"themes/keep/layout/_partial/pjax/pjax.ejs","hash":"949d3fdd4bd215cd7d0c95152c4be630ce227e16","modified":1654494481017},{"_id":"themes/keep/source/css/common/animated.styl","hash":"ceb35da27937a5824dea00c0a75de57e10e1dc90","modified":1654494481021},{"_id":"themes/keep/source/css/common/basic.styl","hash":"6d6132527247635f7406d6917cfc8e1cb02d8573","modified":1654494481021},{"_id":"themes/keep/source/css/common/keep-theme.styl","hash":"9b6bf080299102571a6667ca99a62f53c9684246","modified":1654494481021},{"_id":"themes/keep/source/css/common/markdown.styl","hash":"55c6c0f77b608b8e1d9c52bb4fdcee881f55eff8","modified":1654494481021},{"_id":"themes/keep/source/css/common/variables.styl","hash":"8b66a8ae90dbb8ec2e412fcf57ff6c8cee18e949","modified":1654494481021},{"_id":"themes/keep/source/css/layout/archive-content.styl","hash":"515ebe2a251f3b53f0cf130cdc48b8bb1fb85952","modified":1654494481021},{"_id":"themes/keep/source/css/layout/article-content.styl","hash":"5cc7dbdc16afc638deabf8e8c0d8236f395d8305","modified":1654494481021},{"_id":"themes/keep/source/css/layout/category-content.styl","hash":"638c3b50d8203c76106f3010fbfeed9a29bfde5c","modified":1654494481021},{"_id":"themes/keep/source/css/layout/category-list.styl","hash":"bea0a03fe3de16ed08e7b3b541a46d2074561841","modified":1654494481021},{"_id":"themes/keep/source/css/layout/home-content.styl","hash":"2f2ee2f70020cf5e2ffb5612607bd58772e785a4","modified":1654494481021},{"_id":"themes/keep/source/css/layout/page.styl","hash":"b6a12d487b8eb038f057988d4ab85e05ecabced4","modified":1654862495524},{"_id":"themes/keep/source/css/layout/tag-content.styl","hash":"0d1cc0cc0d263f55b9c7245c1dc023abdcfcd69f","modified":1654494481021},{"_id":"themes/keep/source/js/libs/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1654494481025},{"_id":"themes/keep/source/js/libs/pjax.min.js","hash":"57ec40cb4898d7ba74a03603d608af378e5431f8","modified":1654494481025},{"_id":"themes/keep/source/css/common/codeblock/code-theme.styl","hash":"fd81f8a76ae4f55bf5da38116bbc4f0e973daad2","modified":1654494481021},{"_id":"themes/keep/source/css/common/codeblock/copy-code.styl","hash":"1edcb0ece1bf4b9838c1937e98eaa845de7f4b3b","modified":1654494481021},{"_id":"themes/keep/source/css/common/codeblock/highlight.styl","hash":"64ea39fa5503f6c5a21a9ed7c9d3d5103cccad5a","modified":1654494481021},{"_id":"themes/keep/source/css/layout/_partial/archive-list.styl","hash":"95c41684691a849d102c5a30efb365300d3d5c6d","modified":1654494481021},{"_id":"themes/keep/source/css/layout/_partial/article-copyright-info.styl","hash":"6eaa067231bd9e9faa5de2260b8974142faae510","modified":1654494481021},{"_id":"themes/keep/source/css/layout/_partial/article-meta-info.styl","hash":"378cb61cdffc7243dc11950efc6c0a5b50eecec9","modified":1654494481021},{"_id":"themes/keep/source/css/layout/_partial/first-screen.styl","hash":"d73c088e639d2d4e076552ff92e611682ce2380b","modified":1654494481021},{"_id":"themes/keep/source/css/layout/_partial/footer.styl","hash":"19a8fc0a01bf1efed637e90530c412d57137dfc4","modified":1654494481021},{"_id":"themes/keep/source/css/layout/_partial/header.styl","hash":"80cd9c8abd3542c0e521841137e987a658471e05","modified":1654494481021},{"_id":"themes/keep/source/css/layout/_partial/image-viewer.styl","hash":"59525fcc1f88c78abf8c1f0b06e24b16a088698c","modified":1654494481021},{"_id":"themes/keep/source/css/layout/_partial/local-search.styl","hash":"98aa2e22f16b98b2ffdbf36e1ea24363f8e5045b","modified":1654494481021},{"_id":"themes/keep/source/css/layout/_partial/page-template.styl","hash":"27d1e19691867a09283facd2983afb9a3404e999","modified":1654494481021},{"_id":"themes/keep/source/css/layout/_partial/paginator.styl","hash":"da5df38b09138af28cb8b3fe9a05aeda9dae5011","modified":1654494481021},{"_id":"themes/keep/source/css/layout/_partial/post-tools.styl","hash":"f78a13e3b03b19cb72b03db0a5659f8c734e742e","modified":1654494481021},{"_id":"themes/keep/source/css/layout/_partial/progress-bar.styl","hash":"a64df5515c60a3a0993c427dc50facee33215f2b","modified":1654494481021},{"_id":"themes/keep/source/css/layout/_partial/side-tools.styl","hash":"a68a1e3f21da63ee2d387035e91f9f60e956e234","modified":1654494481021},{"_id":"themes/keep/source/css/layout/_partial/tagcloud.styl","hash":"61016e73c8e420c74800b3afdbd6c2f890400e51","modified":1654494481021},{"_id":"themes/keep/source/css/layout/_partial/toc.styl","hash":"029ac31a21203a8b86027e67a3ff3a977579325d","modified":1654494481021},{"_id":"themes/keep/source/css/layout/_partial/comment/comment.styl","hash":"f6d9a37520566e38738fc1184ed76817273c3ee5","modified":1654494481021},{"_id":"themes/keep/source/css/layout/_partial/comment/gitalk.styl","hash":"b8fccd13e2753c9fe891fb88a6413087048ab830","modified":1654494481021},{"_id":"themes/keep/source/css/layout/_partial/comment/twikoo.styl","hash":"5844874c50a93239031e58b23856698ca9af2725","modified":1654494481021},{"_id":"themes/keep/source/css/layout/_partial/comment/valine.styl","hash":"6b0c7d69fc3f819610576b41e987ec655411ca44","modified":1654494481021},{"_id":"themes/keep/source/webfonts/fa-brands-400.woff","hash":"a42ac4a94f4e0e9333cdb1b2fb6c13c0ae690ff2","modified":1654494481033},{"_id":"themes/keep/source/webfonts/fa-brands-400.woff2","hash":"f726c4275bb494a045fde059175f072de06c01df","modified":1654494481033},{"_id":"themes/keep/source/webfonts/fa-solid-900.woff","hash":"3b86a0ce15d8d534b65e98560e321a933d310688","modified":1654494481041},{"_id":"themes/keep/source/webfonts/fa-solid-900.woff2","hash":"9b592048b9062b00f0b2dd782d70a95b7dc69b83","modified":1654494481041},{"_id":"themes/keep/source/webfonts/fa-brands-400.eot","hash":"c719f4375679ee58e156434f9ba9727be669cf07","modified":1654494481025},{"_id":"themes/keep/source/webfonts/fa-brands-400.ttf","hash":"9b49c6c5b0cbdef158ae31b2a4e4814555408389","modified":1654494481033},{"_id":"themes/keep/source/webfonts/fa-regular-400.svg","hash":"c41a688158d577e3a2738137992d49b05b17ab8f","modified":1654494481033},{"_id":"themes/keep/source/webfonts/fa-solid-900.eot","hash":"c39b89f7fa7b66931ab02a54002db5ffcbff206c","modified":1654494481037},{"_id":"themes/keep/source/webfonts/fa-solid-900.ttf","hash":"d537bf4cc7273ddb3fd754d53f2b241aeafaefe7","modified":1654494481041},{"_id":"themes/keep/source/webfonts/fa-brands-400.svg","hash":"69a0ff79a9d93a451e9fa90bd79ae7008d2a9da5","modified":1654494481029},{"_id":"themes/keep/source/webfonts/fa-solid-900.svg","hash":"36de6a298660ed3feaab37900f7b28c3e981d80e","modified":1654494481041},{"_id":"themes/keep/._config.yml.swp","hash":"8e1f3d7ff21ba0e042824655772df92d749053aa","modified":1654503734988},{"_id":"source/images/favicon.ico","hash":"9d89f70ea35d845c5069727f32978116a47d11af","modified":1654504710062},{"_id":"source/images/acm.png","hash":"4ef31e32d70b255241318d1af40315491343a8b9","modified":1654505195233},{"_id":"source/images/pasted-0.png","hash":"b54112cfc8de4a9b1ed3971dcdbf2b668cd9c3f0","modified":1654505946339},{"_id":"source/images/pasted-1.png","hash":"fc1fd519915d3ecd86072ed970c3d8ee0338cf04","modified":1654505968303},{"_id":"source/_discarded/Test.md","hash":"239268073297ddfc42770706705521f33e4c910b","modified":1654510120616},{"_id":"source/_drafts/Test-1.md","hash":"c4654586c9d45399b58a3896f0c3d96c7c659cc4","modified":1654510106985},{"_id":"source/_drafts/来自谭杨艺的题解.md","hash":"e596efeaee3d27b0ef183678470d92fa20eb249a","modified":1654693563284},{"_id":"source/images/pasted-2.png","hash":"72b3b11217f5e500dd634783262a0a55478c1a85","modified":1654692584616},{"_id":"source/_posts/solution.md","hash":"6f91d6a2f3356a8a2c3e18b71464424bc3f8c2cc","modified":1654830097000},{"_id":"source/images/pasted-3.png","hash":"8b96eed69d557d4ccb70c81326903a4d8fab77f9","modified":1654737249000},{"_id":"themes/keep/layout/page.ejs.bak","hash":"4bf34f19bcf18efb5f6e76fcbe7cd36b25ceee6a","modified":1654861712474}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"第二届“计协杯”程序设计大赛暨ACM实验室招新选拔4月赛题解","mathjax":true,"date":"2022-06-06T13:28:00.000Z","_content":"# [第二届“计协杯”程序设计大赛暨ACM实验室招新选拔4月赛](/contest.php?cid=1049)\n>  “计协杯”是由湖南工程学院计算机协会举办的程序设计竞赛，旨在提高同学们激发学生学习计算机领域专业知识与技能的兴趣，鼓励主动灵活地运用计算机知识和技能解决实际问题，有效提升算法设计、逻辑推理、数学建模、编程实现和计算机系统能力，培养团队合作意识、挑战精神和创新能力。\n\n# A：买苹果\n> #### 题目描述\n> LM 是一个有钱的素数狂热爱好者，有一天来到一个苹果摊上看到有 n 个苹果，他想挑选重量为素数的苹果，这可难到他了，你能帮帮他吗\n>#### 输入格式\n>第一行 一个数字 n,\n第二行 n 个数字 w1  w2  w3  ...  wn  其中 wi 代表第 i 个苹果的重量。\n> #### 输出格式\n> 输出一个数 LM 买的所有素数苹果的总重量。\n\n这道题目其实就是一道比较简单的求素数的问题，求素数有两种方法，一种暴力求素数，一种筛法求素数，对于时间复杂度而言，筛法求素数比暴力求素数更加快，而这道题其实不要用到筛法求素数，只需要在暴力求素数的方法上加以改进一下就可以过了。\n### 记得求和的时候用上long long，否则得到的总数会撑爆int，也就是超出int的数据范围从而得到负数的情况。\n\n```c\n#include\"stdio.h\"\n#include\"math.h\"\nint a[100010];\nint main() {\n    int n,j;\n    long long sum = 0;\n    scanf(\"%d\",&n);\n    for(int i = 0;i < n;i ++)\n        scanf(\"%d\",&a[i]);\n    for(int i = 0;i < n;i ++){\n        for(j = 2;j <= sqrt(a[i]); j ++){\n            if(a[i] % j == 0)break;\n        }\n        if(sqrt(a[i]) < j){\n            sum += a[i];\n        }\n    }\n    printf(\"%lld\",sum);\n    return 0;\n}\n```\n\n\n# B：买西瓜\n> #### 题目描述\n> 今天，zj 和他的朋友买了一个西瓜，他们想要把西瓜分成两份。\n>作为数学迷，他们两个人都喜欢偶数，但是他们不知道这个西瓜能不能分成两个偶数重量的西瓜，\n>请你帮一帮他们判断买的西瓜能不能分成两个偶数重量的西瓜。\n> #### 输入格式\n> 输入一行包含整数 w ( 1 ≤  w  ≤ 100 )代表男孩们买的西瓜的重量。\n> #### 输出格式\n> 如果可以将西瓜分成两部分，每部分重偶数公斤则输出YES；\n>如果不能分成两份偶数重量的西瓜则为NO。注：输出都为大写字符\n\n通过分析题目可以快速发现，若西瓜的重量为偶数的话 是必定可以分成两个偶数重量的西瓜的，但是，有一个特殊情况需要排除，这也是本题的唯一坑点，就是当w = 2 时，虽然它也是一个偶数，但是它并不可以分出两个偶数重量的部分。了解这些后就可以开始编写程序了。\n\n\n```c\n#include \"stdio.h\"\n\nint main() {\n    int w;\n    scanf(\"%d\",&w);\n    if(w%2 == 0 && w!=2)\n        printf(\"YES\\n\");\n    else\n        printf(\"NO\\n\");\n\n    return 0;\n}\n```\n# C：比赛\n> #### 题目描述\n>今天学校举办了一场足球比赛，一天一共有 n 场比赛，这次比赛总共有 6 支球队参加，赢一场积 3 分，平一场积 1 分，输则积 0 分。\n>现在我们来写一个简单的程序，根据一个小组所有比赛的结果，输出各队的积分。\n>若没有参赛则视为弃权，按 0 分输出。\n> #### 输入格式\n> 第一行一个整数n，表示有n场比赛。\n>将参赛的 6 个队伍编号为  A ~ F  6个字母， 每行为空格隔开的两个大写字母与两个整数，表示两支队伍比赛对应的进球数，\n>A B 1 2表示AB的比赛比分为A 1 : B 2。\n> #### 输出格式\n> 输出一行 6 个整数分别是A~F的积分。\n\n通过分析题目可知一共有6个球队，他们之间将进行足球比赛，容易分析出每场比赛只有三种情况，胜负和平局。\n我们可以设置一个一维数组用来记录每支球队的分数，用几个临时的变量来存储当前比赛队伍及其得分情况。\n这里建议使用字符串输入队伍编号，避免出现输入错误的问题。不要忘记在使用score数组前对其进行初始化。\n\n\n```c\n#include \"stdio.h\"\n\nint main() {\nint n;\nint score[7];\nchar team1[2],team2[2];\nint shot1, shot2;\n\n    scanf(\"%d\",&n);\n\n    for(int i=0; i<7; i++)\n        score[i] = 0;\n    for(int i=0; i<n; i++){\n        scanf(\"%s%s%d%d\",team1,team2,&shot1,&shot2);\n        if(shot1 < shot2)\n            score[team2[0] - 'A' + 1] += 3;\n        else if(shot1 == shot2){\n            score[team1[0] - 'A' + 1] += 1;\n            score[team2[0] - 'A' + 1] += 1;\n        }\n        else{\n            score[team1[0] - 'A' + 1] += 3;\n        }\n\n    }\n\n    for(int i=1; i<=6; i++)\n        printf(\"%d \",score[i]);\n\n    return 0;\n}\n\n```\n\n\n# D：WA学长的小女友\n> #### 题目描述\n> WA 学长有一个漂亮可爱的女朋友，但是他的女朋友脾气很怪异，看到一些特殊的字符就会发脾气，\n今天，WA 找女朋友有点事需要发微信，WA 为了不让他的女朋友发脾气，\n他希望可以将一条信息里所有让他女朋友生气的字符全部删除再发微信给他女朋友。\n> #### 输入格式\n> 第一行需要发送的信息。\n第二行一个字符串代表需要删除的字符 。\n> #### 输出格式\n> 输出一行处理过的信息。\n\n对于这道题目,如果按照惯性思维来写，肯定是对两个字符串进行遍历，如果有就进行删除等操作，但是这个题目的字符串的数据量很大，所以这个方法行不通。\n那我们应该用什么方法来解决这个问题呢，每一个字母都有对应的ASCII码，而这个ASCII码就是我们解决这道题目的关键。\n我们可以先对需要删除的字符进行打表，确认它需要删除，然后再对原字符串的元素进行判断是否含有这些字符在进行删除。\n### 记得输入的时候一定要用gets函数，而不是scanf(\"%s\",a),这样子当字符串有空格时读入会不完整。\n\n```c\n#include<stdio.h>\nchar a[100010],b[100010];\nint st[310];\n\nint main ()\n{\n    gets(a);\n    gets(b);\n    for (int i = 0;i < sizeof(b);i ++) { //特殊的循环方式\n        st[b[i]] = 1;\n    }\n    for (int i = 0; i < sizeof(a); i ++ ) {\n        if (!st[a[i]])\n            printf (\"%c\", a[i]);\n    }\n    return 0;\n}\n```\n\n# E：扔葡萄皮\n> #### 题目描述\n> 今天，ZJ 吃了很多的葡萄，但是剩下的葡萄皮怎么处理呢？\n刚开始吃葡萄时，他将葡萄皮随意的放在了桌子上，一共有 n 堆，\n但是他作为一个强迫症，他想不改动原有的葡萄皮让每个堆的葡萄皮数量均不相同。\n现在有一个操作，ZJ 可以再吃一个葡萄并将葡萄皮扔在任意一个堆上。他想让这个操作数最少，因为他实在吃不下更多的葡萄了，请你帮一帮他。\n> #### 输入格式\n> 第一行包含一个整数 n；\n第二行包含 n 个数 a1,a2,...,an;\n> #### 输出格式\n>一个整数，表示所需的最少操作次数。\n\n这道题目就考察的是一个贪心的算法，这类算法顾名思义就是要够贪才能AC，如果你不够贪就会错。\n那么对于这道题目我们应该怎么贪心，题目中说要让每一个葡萄皮堆的葡萄皮数量不相同，而且要\n操作数最少，那么我么们就可以对于测试样例进行一次模拟，发现只要对于一个1进行操作就可以达到\n题目的要求，如此我们可以知道，当得到一些葡萄皮堆，我们可以先对他们进行排序，从第二堆葡萄皮堆到\n最后一个葡萄皮堆，每个葡萄皮堆比前面的葡萄皮堆多1个，这样子我们就可以得到这个题目最优解。\n### 记得sum要long long哦\n\n```c\n#include<stdio.h>\nint a[10010];\nint main()\n{\n    int n ;\n    scanf(\"%d\",&n);\n    for(int i = 0;i < n;i ++){\n        scanf(\"%d\",&a[i]);\n    }\n    for(int i = 0;i < n - 1;i ++){//控制比较轮次，一共 n-1 趟\n        for(int j = 0;j < n - 1 - i;j ++){//控制两个挨着的元素进行比较\n            if(a[j] > a[j + 1]){\n                int t = a[j];\n                a[j] = a[j+1];\n                a[j+1] = t;\n            }\n        }\n    }\n    long long sum = 0;\n    for(int i = 1;i < n;i ++){\n        if(a[i] <= a[i - 1]){\n            sum += a[i - 1] - a[i] + 1;\n            a[i] = a[i - 1] + 1;\n        }\n    }\n    printf(\"%lld\",sum);\n}\n```\n\n# F：买南瓜\n> #### 题目描述\n>tyy 买了 n 个南瓜，他有 n 个孩子，每个孩子的年龄都不相同，现在 tyy 的孩子们排成一列，\n>他希望将南瓜按他们年龄大小分给他们，即年龄大的孩子分到的南瓜比年龄小的孩子分到的南瓜大。\n> #### 输入格式\n> 第一行一个数字 n 代表南瓜（孩子）的数量。\n>第二行 n 个数字 a1 a2 a3 ... an 其中 ai 代表孩子的年龄。\n>第三行 n 个数字 b1 b2 b3 ... bn 其中 bi 代表南瓜的重量。\n> #### 输出格式\n> 输出对应孩子所得的南瓜重量。\n\n### 思路分析\n这道题目要按照输入的孩子年龄为序列输出，所以一般来说孩子序列的顺序还是不要修改的好，所以我们对南瓜序列进行修改。\n将南瓜序列进行排序之后，就可以知道南瓜是第几大的，在对每个孩子判断他是第几大的就给第几大的南瓜，这道题目就迎刃而解了。\n### C代码\n```c\n#include<stdio.h>\n\n#define N 10010\nint a[2][N], b[N], n;\nvoid Wsort(int a[], int n)  // 冒泡排序\n{\n    for (int i = 0; i < n - 1; i ++ ) {\n        for (int j = 0; j < n - 1 - i; j ++ ) {\n            if (a[j + 1] < a[j]) {\n                int t = a[j + 1];\n                a[j + 1] = a[j];\n                a[j] = t;\n            } \n        }\n    }\n}\n \nint main()\n{\n    cin >> n;\n    for(int i = 0;i < n;i ++){\n        scanf(\"%d\", a[0][i]);\n    }\n    for(int i = 0;i < n;i ++){\n        scanf(\"%d\", b[i]);\n    }\n    Wsort(b, n);\n    for(int i = 0;i < n;i ++){\n        int count = 0;\n        for(int j = 0;j < n;j ++){\n            if(a[0][i] > a[0][j]){\n                count ++;\n            }\n        }\n        a[1][i] = b[count];\n    }\n    for(int i = 0;i < n;i ++)\n        printf (\"%d \", a[1][i]);\n}\n```\n### C++代码\n```c++\n#include <iostream>\n#include <algorithm>\n#include <cstdio>\n \nusing namespace std;\n \nconst int N = 1e4 + 10;\n \ntypedef pair<int, int> PII;\n \nint n, b[N], c[N];\nPII a[N];\n \nbool cmp(PII a, PII b) {\n    return a.first < b.first;\n}\n \nint main ()\n{\n    scanf(\"%d\", &n);\n    for (int i = 0; i < n; i ++ ) {\n        scanf(\"%d\", &a[i].first);\n        a[i].second = i;\n    }\n    for (int i = 0; i < n; i ++ ) {\n        scanf(\"%d\", &b[i]);\n    }\n \n    sort(a, a + n, cmp);\n    sort(b, b + n);\n \n    for (int i = 0; i < n; i ++ ) {\n        c[a[i].second] = b[i];\n    }\n \n    for (int i = 0; i < n; i ++ ) {\n        printf (\"%d \", c[i]);\n    }\n \n    return 0;\n}\n```\n\n\n# G：城市最短距离\n> #### 题目描述\n> 已知现在有n个城市，城市以1到n进行编号，不同城市之间的距离为两城市编号的最大公约数。\n> 求城市 x 到城市 y 的所需移动的最短距离。\n> #### 输入格式\n> 第一行两个数n，q。表示有n个城市，q组询问。\n> 接下来q行，每行两个数x，y。\n> #### 输出格式\n> 每个询问输出一行，每行一个数字表示答案\n\n首先对于每一个城市$i$都有自己编号，而任意的两个城市$(x,y)$都有一个距离$gcd(x,y)$\n1. 如果给定的两个$x$和$y$有$x=y$，那么他们之间距离为$0$，可以直接到达。\n2. 如果对于任意两个城市$gcd(i,j)=1$,即该两个城市互质，则他们的距离就是$1$\n3. 如果对于任意两个城市$(x,y)\\not=1$,那么他们之间可以从$x$先到$1$，再从$1$到$y$，因为$gcd(1,AnyNumber)=1$,这样就可以走可以保证两步之内到达。\n### 记得使用puts(\"\")，本题的输入输出数据量比较大，如果用printf会超时\n\n```c\n#include \"stdio.h\"\n\nint n,q,x,y;\nint gcd(int a,int b){\n    return b == 0 ? a : gcd(b,a % b);\n}\nint main() {\n    scanf(\"%d%d\",&n,&q);\n    for(int i = 1;i <= q;i++){\n        scanf(\"%d%d\",&x,&y);\n        if(x == y)\n            puts(\"0\");\n        else if(gcd(x,y) == 1)\n            puts(\"1\");\n        else\n            puts(\"2\");\n    }\n    return 0;\n}\n```\n\n# H：扔香蕉皮\n> #### 题目描述\n>TYY 是一个非常坏的男孩，但同时，他也十分爱吃香蕉。 于是，他决定用香蕉皮来惹恼他的朋友 ZJ。\n>ZJ 的房间可以表示为一个 n 行 m 列的网格。 让 ( i , j ) 表示第 i 行和第 j 列的单元格。 ZJ 目前站在他房间里的位置 ( i , j )。 为了惹恼 ZJ，TYY 决定在房间里扔两个香蕉皮（它们可以在同一个单元格里）。\n>因为 ZJ 不喜欢香蕉皮扔在地板上，他必须把他们俩都捡起来，然后回到原来的位置。ZJ 走过的距离是穿过两个香蕉皮的位置并返回 ( i , j ) 的最短路径，走的过程中只能到相邻的单元。也就是说，如果他在房间的位置为( x , y )然后他可以前往房间( x+1 , y ), ( x-1 , y ), ( x , y+1 ), ( x , y-1 )。\n>TYY 想知道他应该把这两个香蕉皮扔在哪里，这样 ZJ 走过的距离就会最大化。但是因为他很忙，他让你告诉他。\n> #### 输入格式\n>第一行包含一个整数 t 代表 t 组测试样例。\n>每个测试用例的唯一行包含四个整数 n, m, i, j  代表房间的尺寸，以及 ZJ 目前站立的位置。\n> #### 输出格式\n> 对于每个测试用例，打印四个整数 x1, y1, x2, y2  代表两个香蕉皮应该扔在哪里的坐标。\n>如果有多个答案，你只需要输出任意一种答案。\n\n### 思路分析:\n容易验证，将两个悠悠球扔在房间对角线的两个角落，Riley 需要移动的总距离一定最长。\n\n以样例中的第 3 组数据（n=3，m=5，i=2，j=2）为例：\n\n其中蓝色点表示 Riley 的初始位置，两个红色点表示悠悠球的位置，绿色箭头表示 Riley 的一种移动的路线。\n\n当把两个悠悠球分别扔在房间的左上角和右下角时，Riley 移动的路线长度相当于在房间的外围走一圈，此时路线最长：\n\n![upload successful](/blog/images/pasted-0.png)\n\n当把两个悠悠球分别扔在房间的左上角和右上角时，Riley 移动的路线长度显然小于上一种情况：\n\n![upload successful](/blog/images/pasted-1.png)\n\n上述结论成立。\n\n可以发现对于初始位置在房间外围的情况，会有其他的最优解，但此时将悠悠球扔在房间对角线的两个角落亦是一种最优解。\n\n所以，你可以输出以下两种答案中的任意一种：\n\n1、左上角和右下角，即 (1,1) 和 (n,m)；\n\n2、右上角和左下角，即 (1,m) 和 (n,1)。\n\n### 代码\n\n```c\n#include <stdio.h>\nint t, n, m, i, j;\nint main()\n{\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tscanf(\"%d%d%d%d\",&n,&m,&i,&j);\n\t\tprintf(\"%d %d %d %d\\n\",1,1,n,m);\n\t}\n\treturn 0;\n}\n```\n\n\n# I：斐波那契数列\n>#### 题目描述\n>这是一道 “简单” 的求斐波那契数列题目。\n>Fn = Fn-1 + Fn-2\n>求出 Fn 的值，答案可能过大，需要将输出的答案对 1000000007 取余。\n>#### 输入格式\n>一行一个正整数 n\n>#### 输出格式\n>输出一行一个整数表示答案。\n\n相信C语言课都讲过递归求斐波那契数列或者循环求斐波那契数列，这道题目可以看到数据范围在2<sup>63</sup>,所以如果用普通的方法只能拿50分，需要另寻他法。\n我们令$f(n)$,$f(n-1)$组成一个列向量，乘以一个$2\\times2$的矩阵可以得到$f(n+1)$,$f(n)$\n$$\n  \\begin{bmatrix}\n  a&b\\\\\n  c&d\n\\end{bmatrix}\n*\n\\begin{bmatrix}\n  f(n)\\\\f(n-1)\n\\end{bmatrix}\n=\n\\begin{bmatrix}\n  f(n+1)\\\\f(n)\n\\end{bmatrix}\n$$\n又线性代数展开可以得到如下式子\n$$\n  \\begin{bmatrix}\n  a&b\\\\\n  c&d\n\\end{bmatrix}\n*\n\\begin{bmatrix}\n  f(n)\\\\f(n-1)\n\\end{bmatrix}\n=\n\\begin{bmatrix}\n  a*f(n) + b*f(n-1)\\\\c*f(n)+d*f(n-1)\n\\end{bmatrix}\n$$\n\n并且$f(n+1)=f(n)+f(n-1)$,对应项相等，可以得到\n$$\n\\begin{bmatrix}\n  f(n+1)\\\\f(n)\n\\end{bmatrix}\n=\n\\begin{bmatrix}\n  a*f(n) + b*f(n-1)\\\\c*f(n)+d*f(n-1)\n\\end{bmatrix}\n$$\n即$a=1$  ,  $b=1$  ,  $c=1$  ,  $d=0$\n如此由矩阵的乘法可得，由$n$个矩阵乘法相乘，我们令矩阵\n$$\n  \\begin{bmatrix}\n  a&b\\\\\n  c&d\n\\end{bmatrix}\n= A\n$$\n那么需要得到$f(n)$就可以列出如下式子。\n$$\n\\begin{bmatrix}\n  1&1\\\\\n  1&0\n\\end{bmatrix}^{n-1}\n* \n\\begin{bmatrix}\n  f(1)\\\\f(0)\n\\end{bmatrix}\n=\n\\begin{bmatrix}\n  f(n)\\\\f(n-1)\n\\end{bmatrix}\n$$\n然后使用矩阵快速幂即可快速算出答案。\n```c\n#include \"stdio.h\"\n#include \"cstring\"\n#define ll long long\n#define MOD 1000000007\nll n;\nll base[2][2] = {{0,1},{1,1}};\nll f[2] = {0,1};\nvoid multi(ll a[2],ll b[2][2]){\n    ll ans[2] = {0,0};\n    for(int i = 0; i < 2; i++)\n        for(int j = 0; j < 2; j++)\n            ans[j] = (ans[j] + a[i] * b[i][j]) % MOD;\n    memcpy(a,ans,sizeof(ans));\n}\nvoid self(ll a[2][2]){\n    ll ans[2][2];\n    memset(ans,0,sizeof(ans));\n    for(int i = 0;i < 2;i++)\n        for(int j = 0;j < 2;j++)\n            for(int k = 0;k < 2;k++)\n                ans[i][j] = (ans[i][j] + a[i][k] * a[k][j]) % MOD;\n    memcpy(a,ans,sizeof(ans));\n}\nint main() {\n    scanf(\"%d\",&n);\n    while(n){\n        if(n & 1)\n            multi(f,base);\n        self(base);\n        n >>= 1;\n    }\n    printf(\"%d\",f[0]);\n    return 0;\n}\n```","source":"_posts/My-New-Post.md","raw":"title: 第二届“计协杯”程序设计大赛暨ACM实验室招新选拔4月赛题解\nmathjax: true\ndate: 2022-06-06 13:28:00\ntags:\n---\n# [第二届“计协杯”程序设计大赛暨ACM实验室招新选拔4月赛](/contest.php?cid=1049)\n>  “计协杯”是由湖南工程学院计算机协会举办的程序设计竞赛，旨在提高同学们激发学生学习计算机领域专业知识与技能的兴趣，鼓励主动灵活地运用计算机知识和技能解决实际问题，有效提升算法设计、逻辑推理、数学建模、编程实现和计算机系统能力，培养团队合作意识、挑战精神和创新能力。\n\n# A：买苹果\n> #### 题目描述\n> LM 是一个有钱的素数狂热爱好者，有一天来到一个苹果摊上看到有 n 个苹果，他想挑选重量为素数的苹果，这可难到他了，你能帮帮他吗\n>#### 输入格式\n>第一行 一个数字 n,\n第二行 n 个数字 w1  w2  w3  ...  wn  其中 wi 代表第 i 个苹果的重量。\n> #### 输出格式\n> 输出一个数 LM 买的所有素数苹果的总重量。\n\n这道题目其实就是一道比较简单的求素数的问题，求素数有两种方法，一种暴力求素数，一种筛法求素数，对于时间复杂度而言，筛法求素数比暴力求素数更加快，而这道题其实不要用到筛法求素数，只需要在暴力求素数的方法上加以改进一下就可以过了。\n### 记得求和的时候用上long long，否则得到的总数会撑爆int，也就是超出int的数据范围从而得到负数的情况。\n\n```c\n#include\"stdio.h\"\n#include\"math.h\"\nint a[100010];\nint main() {\n    int n,j;\n    long long sum = 0;\n    scanf(\"%d\",&n);\n    for(int i = 0;i < n;i ++)\n        scanf(\"%d\",&a[i]);\n    for(int i = 0;i < n;i ++){\n        for(j = 2;j <= sqrt(a[i]); j ++){\n            if(a[i] % j == 0)break;\n        }\n        if(sqrt(a[i]) < j){\n            sum += a[i];\n        }\n    }\n    printf(\"%lld\",sum);\n    return 0;\n}\n```\n\n\n# B：买西瓜\n> #### 题目描述\n> 今天，zj 和他的朋友买了一个西瓜，他们想要把西瓜分成两份。\n>作为数学迷，他们两个人都喜欢偶数，但是他们不知道这个西瓜能不能分成两个偶数重量的西瓜，\n>请你帮一帮他们判断买的西瓜能不能分成两个偶数重量的西瓜。\n> #### 输入格式\n> 输入一行包含整数 w ( 1 ≤  w  ≤ 100 )代表男孩们买的西瓜的重量。\n> #### 输出格式\n> 如果可以将西瓜分成两部分，每部分重偶数公斤则输出YES；\n>如果不能分成两份偶数重量的西瓜则为NO。注：输出都为大写字符\n\n通过分析题目可以快速发现，若西瓜的重量为偶数的话 是必定可以分成两个偶数重量的西瓜的，但是，有一个特殊情况需要排除，这也是本题的唯一坑点，就是当w = 2 时，虽然它也是一个偶数，但是它并不可以分出两个偶数重量的部分。了解这些后就可以开始编写程序了。\n\n\n```c\n#include \"stdio.h\"\n\nint main() {\n    int w;\n    scanf(\"%d\",&w);\n    if(w%2 == 0 && w!=2)\n        printf(\"YES\\n\");\n    else\n        printf(\"NO\\n\");\n\n    return 0;\n}\n```\n# C：比赛\n> #### 题目描述\n>今天学校举办了一场足球比赛，一天一共有 n 场比赛，这次比赛总共有 6 支球队参加，赢一场积 3 分，平一场积 1 分，输则积 0 分。\n>现在我们来写一个简单的程序，根据一个小组所有比赛的结果，输出各队的积分。\n>若没有参赛则视为弃权，按 0 分输出。\n> #### 输入格式\n> 第一行一个整数n，表示有n场比赛。\n>将参赛的 6 个队伍编号为  A ~ F  6个字母， 每行为空格隔开的两个大写字母与两个整数，表示两支队伍比赛对应的进球数，\n>A B 1 2表示AB的比赛比分为A 1 : B 2。\n> #### 输出格式\n> 输出一行 6 个整数分别是A~F的积分。\n\n通过分析题目可知一共有6个球队，他们之间将进行足球比赛，容易分析出每场比赛只有三种情况，胜负和平局。\n我们可以设置一个一维数组用来记录每支球队的分数，用几个临时的变量来存储当前比赛队伍及其得分情况。\n这里建议使用字符串输入队伍编号，避免出现输入错误的问题。不要忘记在使用score数组前对其进行初始化。\n\n\n```c\n#include \"stdio.h\"\n\nint main() {\nint n;\nint score[7];\nchar team1[2],team2[2];\nint shot1, shot2;\n\n    scanf(\"%d\",&n);\n\n    for(int i=0; i<7; i++)\n        score[i] = 0;\n    for(int i=0; i<n; i++){\n        scanf(\"%s%s%d%d\",team1,team2,&shot1,&shot2);\n        if(shot1 < shot2)\n            score[team2[0] - 'A' + 1] += 3;\n        else if(shot1 == shot2){\n            score[team1[0] - 'A' + 1] += 1;\n            score[team2[0] - 'A' + 1] += 1;\n        }\n        else{\n            score[team1[0] - 'A' + 1] += 3;\n        }\n\n    }\n\n    for(int i=1; i<=6; i++)\n        printf(\"%d \",score[i]);\n\n    return 0;\n}\n\n```\n\n\n# D：WA学长的小女友\n> #### 题目描述\n> WA 学长有一个漂亮可爱的女朋友，但是他的女朋友脾气很怪异，看到一些特殊的字符就会发脾气，\n今天，WA 找女朋友有点事需要发微信，WA 为了不让他的女朋友发脾气，\n他希望可以将一条信息里所有让他女朋友生气的字符全部删除再发微信给他女朋友。\n> #### 输入格式\n> 第一行需要发送的信息。\n第二行一个字符串代表需要删除的字符 。\n> #### 输出格式\n> 输出一行处理过的信息。\n\n对于这道题目,如果按照惯性思维来写，肯定是对两个字符串进行遍历，如果有就进行删除等操作，但是这个题目的字符串的数据量很大，所以这个方法行不通。\n那我们应该用什么方法来解决这个问题呢，每一个字母都有对应的ASCII码，而这个ASCII码就是我们解决这道题目的关键。\n我们可以先对需要删除的字符进行打表，确认它需要删除，然后再对原字符串的元素进行判断是否含有这些字符在进行删除。\n### 记得输入的时候一定要用gets函数，而不是scanf(\"%s\",a),这样子当字符串有空格时读入会不完整。\n\n```c\n#include<stdio.h>\nchar a[100010],b[100010];\nint st[310];\n\nint main ()\n{\n    gets(a);\n    gets(b);\n    for (int i = 0;i < sizeof(b);i ++) { //特殊的循环方式\n        st[b[i]] = 1;\n    }\n    for (int i = 0; i < sizeof(a); i ++ ) {\n        if (!st[a[i]])\n            printf (\"%c\", a[i]);\n    }\n    return 0;\n}\n```\n\n# E：扔葡萄皮\n> #### 题目描述\n> 今天，ZJ 吃了很多的葡萄，但是剩下的葡萄皮怎么处理呢？\n刚开始吃葡萄时，他将葡萄皮随意的放在了桌子上，一共有 n 堆，\n但是他作为一个强迫症，他想不改动原有的葡萄皮让每个堆的葡萄皮数量均不相同。\n现在有一个操作，ZJ 可以再吃一个葡萄并将葡萄皮扔在任意一个堆上。他想让这个操作数最少，因为他实在吃不下更多的葡萄了，请你帮一帮他。\n> #### 输入格式\n> 第一行包含一个整数 n；\n第二行包含 n 个数 a1,a2,...,an;\n> #### 输出格式\n>一个整数，表示所需的最少操作次数。\n\n这道题目就考察的是一个贪心的算法，这类算法顾名思义就是要够贪才能AC，如果你不够贪就会错。\n那么对于这道题目我们应该怎么贪心，题目中说要让每一个葡萄皮堆的葡萄皮数量不相同，而且要\n操作数最少，那么我么们就可以对于测试样例进行一次模拟，发现只要对于一个1进行操作就可以达到\n题目的要求，如此我们可以知道，当得到一些葡萄皮堆，我们可以先对他们进行排序，从第二堆葡萄皮堆到\n最后一个葡萄皮堆，每个葡萄皮堆比前面的葡萄皮堆多1个，这样子我们就可以得到这个题目最优解。\n### 记得sum要long long哦\n\n```c\n#include<stdio.h>\nint a[10010];\nint main()\n{\n    int n ;\n    scanf(\"%d\",&n);\n    for(int i = 0;i < n;i ++){\n        scanf(\"%d\",&a[i]);\n    }\n    for(int i = 0;i < n - 1;i ++){//控制比较轮次，一共 n-1 趟\n        for(int j = 0;j < n - 1 - i;j ++){//控制两个挨着的元素进行比较\n            if(a[j] > a[j + 1]){\n                int t = a[j];\n                a[j] = a[j+1];\n                a[j+1] = t;\n            }\n        }\n    }\n    long long sum = 0;\n    for(int i = 1;i < n;i ++){\n        if(a[i] <= a[i - 1]){\n            sum += a[i - 1] - a[i] + 1;\n            a[i] = a[i - 1] + 1;\n        }\n    }\n    printf(\"%lld\",sum);\n}\n```\n\n# F：买南瓜\n> #### 题目描述\n>tyy 买了 n 个南瓜，他有 n 个孩子，每个孩子的年龄都不相同，现在 tyy 的孩子们排成一列，\n>他希望将南瓜按他们年龄大小分给他们，即年龄大的孩子分到的南瓜比年龄小的孩子分到的南瓜大。\n> #### 输入格式\n> 第一行一个数字 n 代表南瓜（孩子）的数量。\n>第二行 n 个数字 a1 a2 a3 ... an 其中 ai 代表孩子的年龄。\n>第三行 n 个数字 b1 b2 b3 ... bn 其中 bi 代表南瓜的重量。\n> #### 输出格式\n> 输出对应孩子所得的南瓜重量。\n\n### 思路分析\n这道题目要按照输入的孩子年龄为序列输出，所以一般来说孩子序列的顺序还是不要修改的好，所以我们对南瓜序列进行修改。\n将南瓜序列进行排序之后，就可以知道南瓜是第几大的，在对每个孩子判断他是第几大的就给第几大的南瓜，这道题目就迎刃而解了。\n### C代码\n```c\n#include<stdio.h>\n\n#define N 10010\nint a[2][N], b[N], n;\nvoid Wsort(int a[], int n)  // 冒泡排序\n{\n    for (int i = 0; i < n - 1; i ++ ) {\n        for (int j = 0; j < n - 1 - i; j ++ ) {\n            if (a[j + 1] < a[j]) {\n                int t = a[j + 1];\n                a[j + 1] = a[j];\n                a[j] = t;\n            } \n        }\n    }\n}\n \nint main()\n{\n    cin >> n;\n    for(int i = 0;i < n;i ++){\n        scanf(\"%d\", a[0][i]);\n    }\n    for(int i = 0;i < n;i ++){\n        scanf(\"%d\", b[i]);\n    }\n    Wsort(b, n);\n    for(int i = 0;i < n;i ++){\n        int count = 0;\n        for(int j = 0;j < n;j ++){\n            if(a[0][i] > a[0][j]){\n                count ++;\n            }\n        }\n        a[1][i] = b[count];\n    }\n    for(int i = 0;i < n;i ++)\n        printf (\"%d \", a[1][i]);\n}\n```\n### C++代码\n```c++\n#include <iostream>\n#include <algorithm>\n#include <cstdio>\n \nusing namespace std;\n \nconst int N = 1e4 + 10;\n \ntypedef pair<int, int> PII;\n \nint n, b[N], c[N];\nPII a[N];\n \nbool cmp(PII a, PII b) {\n    return a.first < b.first;\n}\n \nint main ()\n{\n    scanf(\"%d\", &n);\n    for (int i = 0; i < n; i ++ ) {\n        scanf(\"%d\", &a[i].first);\n        a[i].second = i;\n    }\n    for (int i = 0; i < n; i ++ ) {\n        scanf(\"%d\", &b[i]);\n    }\n \n    sort(a, a + n, cmp);\n    sort(b, b + n);\n \n    for (int i = 0; i < n; i ++ ) {\n        c[a[i].second] = b[i];\n    }\n \n    for (int i = 0; i < n; i ++ ) {\n        printf (\"%d \", c[i]);\n    }\n \n    return 0;\n}\n```\n\n\n# G：城市最短距离\n> #### 题目描述\n> 已知现在有n个城市，城市以1到n进行编号，不同城市之间的距离为两城市编号的最大公约数。\n> 求城市 x 到城市 y 的所需移动的最短距离。\n> #### 输入格式\n> 第一行两个数n，q。表示有n个城市，q组询问。\n> 接下来q行，每行两个数x，y。\n> #### 输出格式\n> 每个询问输出一行，每行一个数字表示答案\n\n首先对于每一个城市$i$都有自己编号，而任意的两个城市$(x,y)$都有一个距离$gcd(x,y)$\n1. 如果给定的两个$x$和$y$有$x=y$，那么他们之间距离为$0$，可以直接到达。\n2. 如果对于任意两个城市$gcd(i,j)=1$,即该两个城市互质，则他们的距离就是$1$\n3. 如果对于任意两个城市$(x,y)\\not=1$,那么他们之间可以从$x$先到$1$，再从$1$到$y$，因为$gcd(1,AnyNumber)=1$,这样就可以走可以保证两步之内到达。\n### 记得使用puts(\"\")，本题的输入输出数据量比较大，如果用printf会超时\n\n```c\n#include \"stdio.h\"\n\nint n,q,x,y;\nint gcd(int a,int b){\n    return b == 0 ? a : gcd(b,a % b);\n}\nint main() {\n    scanf(\"%d%d\",&n,&q);\n    for(int i = 1;i <= q;i++){\n        scanf(\"%d%d\",&x,&y);\n        if(x == y)\n            puts(\"0\");\n        else if(gcd(x,y) == 1)\n            puts(\"1\");\n        else\n            puts(\"2\");\n    }\n    return 0;\n}\n```\n\n# H：扔香蕉皮\n> #### 题目描述\n>TYY 是一个非常坏的男孩，但同时，他也十分爱吃香蕉。 于是，他决定用香蕉皮来惹恼他的朋友 ZJ。\n>ZJ 的房间可以表示为一个 n 行 m 列的网格。 让 ( i , j ) 表示第 i 行和第 j 列的单元格。 ZJ 目前站在他房间里的位置 ( i , j )。 为了惹恼 ZJ，TYY 决定在房间里扔两个香蕉皮（它们可以在同一个单元格里）。\n>因为 ZJ 不喜欢香蕉皮扔在地板上，他必须把他们俩都捡起来，然后回到原来的位置。ZJ 走过的距离是穿过两个香蕉皮的位置并返回 ( i , j ) 的最短路径，走的过程中只能到相邻的单元。也就是说，如果他在房间的位置为( x , y )然后他可以前往房间( x+1 , y ), ( x-1 , y ), ( x , y+1 ), ( x , y-1 )。\n>TYY 想知道他应该把这两个香蕉皮扔在哪里，这样 ZJ 走过的距离就会最大化。但是因为他很忙，他让你告诉他。\n> #### 输入格式\n>第一行包含一个整数 t 代表 t 组测试样例。\n>每个测试用例的唯一行包含四个整数 n, m, i, j  代表房间的尺寸，以及 ZJ 目前站立的位置。\n> #### 输出格式\n> 对于每个测试用例，打印四个整数 x1, y1, x2, y2  代表两个香蕉皮应该扔在哪里的坐标。\n>如果有多个答案，你只需要输出任意一种答案。\n\n### 思路分析:\n容易验证，将两个悠悠球扔在房间对角线的两个角落，Riley 需要移动的总距离一定最长。\n\n以样例中的第 3 组数据（n=3，m=5，i=2，j=2）为例：\n\n其中蓝色点表示 Riley 的初始位置，两个红色点表示悠悠球的位置，绿色箭头表示 Riley 的一种移动的路线。\n\n当把两个悠悠球分别扔在房间的左上角和右下角时，Riley 移动的路线长度相当于在房间的外围走一圈，此时路线最长：\n\n![upload successful](/blog/images/pasted-0.png)\n\n当把两个悠悠球分别扔在房间的左上角和右上角时，Riley 移动的路线长度显然小于上一种情况：\n\n![upload successful](/blog/images/pasted-1.png)\n\n上述结论成立。\n\n可以发现对于初始位置在房间外围的情况，会有其他的最优解，但此时将悠悠球扔在房间对角线的两个角落亦是一种最优解。\n\n所以，你可以输出以下两种答案中的任意一种：\n\n1、左上角和右下角，即 (1,1) 和 (n,m)；\n\n2、右上角和左下角，即 (1,m) 和 (n,1)。\n\n### 代码\n\n```c\n#include <stdio.h>\nint t, n, m, i, j;\nint main()\n{\n\tscanf(\"%d\",&t);\n\twhile(t--)\n\t{\n\t\tscanf(\"%d%d%d%d\",&n,&m,&i,&j);\n\t\tprintf(\"%d %d %d %d\\n\",1,1,n,m);\n\t}\n\treturn 0;\n}\n```\n\n\n# I：斐波那契数列\n>#### 题目描述\n>这是一道 “简单” 的求斐波那契数列题目。\n>Fn = Fn-1 + Fn-2\n>求出 Fn 的值，答案可能过大，需要将输出的答案对 1000000007 取余。\n>#### 输入格式\n>一行一个正整数 n\n>#### 输出格式\n>输出一行一个整数表示答案。\n\n相信C语言课都讲过递归求斐波那契数列或者循环求斐波那契数列，这道题目可以看到数据范围在2<sup>63</sup>,所以如果用普通的方法只能拿50分，需要另寻他法。\n我们令$f(n)$,$f(n-1)$组成一个列向量，乘以一个$2\\times2$的矩阵可以得到$f(n+1)$,$f(n)$\n$$\n  \\begin{bmatrix}\n  a&b\\\\\n  c&d\n\\end{bmatrix}\n*\n\\begin{bmatrix}\n  f(n)\\\\f(n-1)\n\\end{bmatrix}\n=\n\\begin{bmatrix}\n  f(n+1)\\\\f(n)\n\\end{bmatrix}\n$$\n又线性代数展开可以得到如下式子\n$$\n  \\begin{bmatrix}\n  a&b\\\\\n  c&d\n\\end{bmatrix}\n*\n\\begin{bmatrix}\n  f(n)\\\\f(n-1)\n\\end{bmatrix}\n=\n\\begin{bmatrix}\n  a*f(n) + b*f(n-1)\\\\c*f(n)+d*f(n-1)\n\\end{bmatrix}\n$$\n\n并且$f(n+1)=f(n)+f(n-1)$,对应项相等，可以得到\n$$\n\\begin{bmatrix}\n  f(n+1)\\\\f(n)\n\\end{bmatrix}\n=\n\\begin{bmatrix}\n  a*f(n) + b*f(n-1)\\\\c*f(n)+d*f(n-1)\n\\end{bmatrix}\n$$\n即$a=1$  ,  $b=1$  ,  $c=1$  ,  $d=0$\n如此由矩阵的乘法可得，由$n$个矩阵乘法相乘，我们令矩阵\n$$\n  \\begin{bmatrix}\n  a&b\\\\\n  c&d\n\\end{bmatrix}\n= A\n$$\n那么需要得到$f(n)$就可以列出如下式子。\n$$\n\\begin{bmatrix}\n  1&1\\\\\n  1&0\n\\end{bmatrix}^{n-1}\n* \n\\begin{bmatrix}\n  f(1)\\\\f(0)\n\\end{bmatrix}\n=\n\\begin{bmatrix}\n  f(n)\\\\f(n-1)\n\\end{bmatrix}\n$$\n然后使用矩阵快速幂即可快速算出答案。\n```c\n#include \"stdio.h\"\n#include \"cstring\"\n#define ll long long\n#define MOD 1000000007\nll n;\nll base[2][2] = {{0,1},{1,1}};\nll f[2] = {0,1};\nvoid multi(ll a[2],ll b[2][2]){\n    ll ans[2] = {0,0};\n    for(int i = 0; i < 2; i++)\n        for(int j = 0; j < 2; j++)\n            ans[j] = (ans[j] + a[i] * b[i][j]) % MOD;\n    memcpy(a,ans,sizeof(ans));\n}\nvoid self(ll a[2][2]){\n    ll ans[2][2];\n    memset(ans,0,sizeof(ans));\n    for(int i = 0;i < 2;i++)\n        for(int j = 0;j < 2;j++)\n            for(int k = 0;k < 2;k++)\n                ans[i][j] = (ans[i][j] + a[i][k] * a[k][j]) % MOD;\n    memcpy(a,ans,sizeof(ans));\n}\nint main() {\n    scanf(\"%d\",&n);\n    while(n){\n        if(n & 1)\n            multi(f,base);\n        self(base);\n        n >>= 1;\n    }\n    printf(\"%d\",f[0]);\n    return 0;\n}\n```","slug":"My-New-Post","published":1,"updated":"2022-06-07T08:08:23.000Z","_id":"cl42akxov0000e4pgcnyl7jm8","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"第二届“计协杯”程序设计大赛暨ACM实验室招新选拔4月赛\"><a href=\"#第二届“计协杯”程序设计大赛暨ACM实验室招新选拔4月赛\" class=\"headerlink\" title=\"第二届“计协杯”程序设计大赛暨ACM实验室招新选拔4月赛\"></a><a href=\"/contest.php?cid=1049\">第二届“计协杯”程序设计大赛暨ACM实验室招新选拔4月赛</a></h1><blockquote>\n<p> “计协杯”是由湖南工程学院计算机协会举办的程序设计竞赛，旨在提高同学们激发学生学习计算机领域专业知识与技能的兴趣，鼓励主动灵活地运用计算机知识和技能解决实际问题，有效提升算法设计、逻辑推理、数学建模、编程实现和计算机系统能力，培养团队合作意识、挑战精神和创新能力。</p>\n</blockquote>\n<h1 id=\"A：买苹果\"><a href=\"#A：买苹果\" class=\"headerlink\" title=\"A：买苹果\"></a>A：买苹果</h1><blockquote>\n<h4 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h4><p>LM 是一个有钱的素数狂热爱好者，有一天来到一个苹果摊上看到有 n 个苹果，他想挑选重量为素数的苹果，这可难到他了，你能帮帮他吗</p>\n<h4 id=\"输入格式\"><a href=\"#输入格式\" class=\"headerlink\" title=\"输入格式\"></a>输入格式</h4><p>第一行 一个数字 n,<br>第二行 n 个数字 w1  w2  w3  …  wn  其中 wi 代表第 i 个苹果的重量。</p>\n<h4 id=\"输出格式\"><a href=\"#输出格式\" class=\"headerlink\" title=\"输出格式\"></a>输出格式</h4><p>输出一个数 LM 买的所有素数苹果的总重量。</p>\n</blockquote>\n<p>这道题目其实就是一道比较简单的求素数的问题，求素数有两种方法，一种暴力求素数，一种筛法求素数，对于时间复杂度而言，筛法求素数比暴力求素数更加快，而这道题其实不要用到筛法求素数，只需要在暴力求素数的方法上加以改进一下就可以过了。</p>\n<h3 id=\"记得求和的时候用上long-long，否则得到的总数会撑爆int，也就是超出int的数据范围从而得到负数的情况。\"><a href=\"#记得求和的时候用上long-long，否则得到的总数会撑爆int，也就是超出int的数据范围从而得到负数的情况。\" class=\"headerlink\" title=\"记得求和的时候用上long long，否则得到的总数会撑爆int，也就是超出int的数据范围从而得到负数的情况。\"></a>记得求和的时候用上long long，否则得到的总数会撑爆int，也就是超出int的数据范围从而得到负数的情况。</h3><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&quot;stdio.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&quot;math.h&quot;</span></span></span><br><span class=\"line\"><span class=\"type\">int</span> a[<span class=\"number\">100010</span>];</span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> n,j;</span><br><span class=\"line\">    <span class=\"type\">long</span> <span class=\"type\">long</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;n);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>;i &lt; n;i ++)</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>;i &lt; n;i ++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(j = <span class=\"number\">2</span>;j &lt;= <span class=\"built_in\">sqrt</span>(a[i]); j ++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(a[i] % j == <span class=\"number\">0</span>)<span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"built_in\">sqrt</span>(a[i]) &lt; j)&#123;</span><br><span class=\"line\">            sum += a[i];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%lld&quot;</span>,sum);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"B：买西瓜\"><a href=\"#B：买西瓜\" class=\"headerlink\" title=\"B：买西瓜\"></a>B：买西瓜</h1><blockquote>\n<h4 id=\"题目描述-1\"><a href=\"#题目描述-1\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h4><p>今天，zj 和他的朋友买了一个西瓜，他们想要把西瓜分成两份。<br>作为数学迷，他们两个人都喜欢偶数，但是他们不知道这个西瓜能不能分成两个偶数重量的西瓜，<br>请你帮一帮他们判断买的西瓜能不能分成两个偶数重量的西瓜。</p>\n<h4 id=\"输入格式-1\"><a href=\"#输入格式-1\" class=\"headerlink\" title=\"输入格式\"></a>输入格式</h4><p>输入一行包含整数 w ( 1 ≤  w  ≤ 100 )代表男孩们买的西瓜的重量。</p>\n<h4 id=\"输出格式-1\"><a href=\"#输出格式-1\" class=\"headerlink\" title=\"输出格式\"></a>输出格式</h4><p>如果可以将西瓜分成两部分，每部分重偶数公斤则输出YES；<br>如果不能分成两份偶数重量的西瓜则为NO。注：输出都为大写字符</p>\n</blockquote>\n<p>通过分析题目可以快速发现，若西瓜的重量为偶数的话 是必定可以分成两个偶数重量的西瓜的，但是，有一个特殊情况需要排除，这也是本题的唯一坑点，就是当w = 2 时，虽然它也是一个偶数，但是它并不可以分出两个偶数重量的部分。了解这些后就可以开始编写程序了。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;stdio.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> w;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;w);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(w%<span class=\"number\">2</span> == <span class=\"number\">0</span> &amp;&amp; w!=<span class=\"number\">2</span>)</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;YES\\n&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;NO\\n&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"C：比赛\"><a href=\"#C：比赛\" class=\"headerlink\" title=\"C：比赛\"></a>C：比赛</h1><blockquote>\n<h4 id=\"题目描述-2\"><a href=\"#题目描述-2\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h4><p>今天学校举办了一场足球比赛，一天一共有 n 场比赛，这次比赛总共有 6 支球队参加，赢一场积 3 分，平一场积 1 分，输则积 0 分。<br>现在我们来写一个简单的程序，根据一个小组所有比赛的结果，输出各队的积分。<br>若没有参赛则视为弃权，按 0 分输出。</p>\n<h4 id=\"输入格式-2\"><a href=\"#输入格式-2\" class=\"headerlink\" title=\"输入格式\"></a>输入格式</h4><p>第一行一个整数n，表示有n场比赛。<br>将参赛的 6 个队伍编号为  A ~ F  6个字母， 每行为空格隔开的两个大写字母与两个整数，表示两支队伍比赛对应的进球数，<br>A B 1 2表示AB的比赛比分为A 1 : B 2。</p>\n<h4 id=\"输出格式-2\"><a href=\"#输出格式-2\" class=\"headerlink\" title=\"输出格式\"></a>输出格式</h4><p>输出一行 6 个整数分别是A~F的积分。</p>\n</blockquote>\n<p>通过分析题目可知一共有6个球队，他们之间将进行足球比赛，容易分析出每场比赛只有三种情况，胜负和平局。<br>我们可以设置一个一维数组用来记录每支球队的分数，用几个临时的变量来存储当前比赛队伍及其得分情况。<br>这里建议使用字符串输入队伍编号，避免出现输入错误的问题。不要忘记在使用score数组前对其进行初始化。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;stdio.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\"><span class=\"type\">int</span> n;</span><br><span class=\"line\"><span class=\"type\">int</span> score[<span class=\"number\">7</span>];</span><br><span class=\"line\"><span class=\"type\">char</span> team1[<span class=\"number\">2</span>],team2[<span class=\"number\">2</span>];</span><br><span class=\"line\"><span class=\"type\">int</span> shot1, shot2;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;n);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>; i&lt;<span class=\"number\">7</span>; i++)</span><br><span class=\"line\">        score[i] = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>; i&lt;n; i++)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%s%s%d%d&quot;</span>,team1,team2,&amp;shot1,&amp;shot2);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(shot1 &lt; shot2)</span><br><span class=\"line\">            score[team2[<span class=\"number\">0</span>] - <span class=\"string\">&#x27;A&#x27;</span> + <span class=\"number\">1</span>] += <span class=\"number\">3</span>;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(shot1 == shot2)&#123;</span><br><span class=\"line\">            score[team1[<span class=\"number\">0</span>] - <span class=\"string\">&#x27;A&#x27;</span> + <span class=\"number\">1</span>] += <span class=\"number\">1</span>;</span><br><span class=\"line\">            score[team2[<span class=\"number\">0</span>] - <span class=\"string\">&#x27;A&#x27;</span> + <span class=\"number\">1</span>] += <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            score[team1[<span class=\"number\">0</span>] - <span class=\"string\">&#x27;A&#x27;</span> + <span class=\"number\">1</span>] += <span class=\"number\">3</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">1</span>; i&lt;=<span class=\"number\">6</span>; i++)</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d &quot;</span>,score[i]);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h1 id=\"D：WA学长的小女友\"><a href=\"#D：WA学长的小女友\" class=\"headerlink\" title=\"D：WA学长的小女友\"></a>D：WA学长的小女友</h1><blockquote>\n<h4 id=\"题目描述-3\"><a href=\"#题目描述-3\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h4><p>WA 学长有一个漂亮可爱的女朋友，但是他的女朋友脾气很怪异，看到一些特殊的字符就会发脾气，<br>今天，WA 找女朋友有点事需要发微信，WA 为了不让他的女朋友发脾气，<br>他希望可以将一条信息里所有让他女朋友生气的字符全部删除再发微信给他女朋友。</p>\n<h4 id=\"输入格式-3\"><a href=\"#输入格式-3\" class=\"headerlink\" title=\"输入格式\"></a>输入格式</h4><p>第一行需要发送的信息。<br>第二行一个字符串代表需要删除的字符 。</p>\n<h4 id=\"输出格式-3\"><a href=\"#输出格式-3\" class=\"headerlink\" title=\"输出格式\"></a>输出格式</h4><p>输出一行处理过的信息。</p>\n</blockquote>\n<p>对于这道题目,如果按照惯性思维来写，肯定是对两个字符串进行遍历，如果有就进行删除等操作，但是这个题目的字符串的数据量很大，所以这个方法行不通。<br>那我们应该用什么方法来解决这个问题呢，每一个字母都有对应的ASCII码，而这个ASCII码就是我们解决这道题目的关键。<br>我们可以先对需要删除的字符进行打表，确认它需要删除，然后再对原字符串的元素进行判断是否含有这些字符在进行删除。</p>\n<h3 id=\"记得输入的时候一定要用gets函数，而不是scanf-“-s”-a-这样子当字符串有空格时读入会不完整。\"><a href=\"#记得输入的时候一定要用gets函数，而不是scanf-“-s”-a-这样子当字符串有空格时读入会不完整。\" class=\"headerlink\" title=\"记得输入的时候一定要用gets函数，而不是scanf(“%s”,a),这样子当字符串有空格时读入会不完整。\"></a>记得输入的时候一定要用gets函数，而不是scanf(“%s”,a),这样子当字符串有空格时读入会不完整。</h3><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">char</span> a[<span class=\"number\">100010</span>],b[<span class=\"number\">100010</span>];</span><br><span class=\"line\"><span class=\"type\">int</span> st[<span class=\"number\">310</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span> <span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    gets(a);</span><br><span class=\"line\">    gets(b);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>;i &lt; <span class=\"keyword\">sizeof</span>(b);i ++) &#123; <span class=\"comment\">//特殊的循环方式</span></span><br><span class=\"line\">        st[b[i]] = <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"keyword\">sizeof</span>(a); i ++ ) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!st[a[i]])</span><br><span class=\"line\">            <span class=\"built_in\">printf</span> (<span class=\"string\">&quot;%c&quot;</span>, a[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"E：扔葡萄皮\"><a href=\"#E：扔葡萄皮\" class=\"headerlink\" title=\"E：扔葡萄皮\"></a>E：扔葡萄皮</h1><blockquote>\n<h4 id=\"题目描述-4\"><a href=\"#题目描述-4\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h4><p>今天，ZJ 吃了很多的葡萄，但是剩下的葡萄皮怎么处理呢？<br>刚开始吃葡萄时，他将葡萄皮随意的放在了桌子上，一共有 n 堆，<br>但是他作为一个强迫症，他想不改动原有的葡萄皮让每个堆的葡萄皮数量均不相同。<br>现在有一个操作，ZJ 可以再吃一个葡萄并将葡萄皮扔在任意一个堆上。他想让这个操作数最少，因为他实在吃不下更多的葡萄了，请你帮一帮他。</p>\n<h4 id=\"输入格式-4\"><a href=\"#输入格式-4\" class=\"headerlink\" title=\"输入格式\"></a>输入格式</h4><p>第一行包含一个整数 n；<br>第二行包含 n 个数 a1,a2,…,an;</p>\n<h4 id=\"输出格式-4\"><a href=\"#输出格式-4\" class=\"headerlink\" title=\"输出格式\"></a>输出格式</h4><p>一个整数，表示所需的最少操作次数。</p>\n</blockquote>\n<p>这道题目就考察的是一个贪心的算法，这类算法顾名思义就是要够贪才能AC，如果你不够贪就会错。<br>那么对于这道题目我们应该怎么贪心，题目中说要让每一个葡萄皮堆的葡萄皮数量不相同，而且要<br>操作数最少，那么我么们就可以对于测试样例进行一次模拟，发现只要对于一个1进行操作就可以达到<br>题目的要求，如此我们可以知道，当得到一些葡萄皮堆，我们可以先对他们进行排序，从第二堆葡萄皮堆到<br>最后一个葡萄皮堆，每个葡萄皮堆比前面的葡萄皮堆多1个，这样子我们就可以得到这个题目最优解。</p>\n<h3 id=\"记得sum要long-long哦\"><a href=\"#记得sum要long-long哦\" class=\"headerlink\" title=\"记得sum要long long哦\"></a>记得sum要long long哦</h3><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">int</span> a[<span class=\"number\">10010</span>];</span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> n ;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;n);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>;i &lt; n;i ++)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>;i &lt; n - <span class=\"number\">1</span>;i ++)&#123;<span class=\"comment\">//控制比较轮次，一共 n-1 趟</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> j = <span class=\"number\">0</span>;j &lt; n - <span class=\"number\">1</span> - i;j ++)&#123;<span class=\"comment\">//控制两个挨着的元素进行比较</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(a[j] &gt; a[j + <span class=\"number\">1</span>])&#123;</span><br><span class=\"line\">                <span class=\"type\">int</span> t = a[j];</span><br><span class=\"line\">                a[j] = a[j+<span class=\"number\">1</span>];</span><br><span class=\"line\">                a[j+<span class=\"number\">1</span>] = t;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"type\">long</span> <span class=\"type\">long</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">1</span>;i &lt; n;i ++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(a[i] &lt;= a[i - <span class=\"number\">1</span>])&#123;</span><br><span class=\"line\">            sum += a[i - <span class=\"number\">1</span>] - a[i] + <span class=\"number\">1</span>;</span><br><span class=\"line\">            a[i] = a[i - <span class=\"number\">1</span>] + <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%lld&quot;</span>,sum);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"F：买南瓜\"><a href=\"#F：买南瓜\" class=\"headerlink\" title=\"F：买南瓜\"></a>F：买南瓜</h1><blockquote>\n<h4 id=\"题目描述-5\"><a href=\"#题目描述-5\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h4><p>tyy 买了 n 个南瓜，他有 n 个孩子，每个孩子的年龄都不相同，现在 tyy 的孩子们排成一列，<br>他希望将南瓜按他们年龄大小分给他们，即年龄大的孩子分到的南瓜比年龄小的孩子分到的南瓜大。</p>\n<h4 id=\"输入格式-5\"><a href=\"#输入格式-5\" class=\"headerlink\" title=\"输入格式\"></a>输入格式</h4><p>第一行一个数字 n 代表南瓜（孩子）的数量。<br>第二行 n 个数字 a1 a2 a3 … an 其中 ai 代表孩子的年龄。<br>第三行 n 个数字 b1 b2 b3 … bn 其中 bi 代表南瓜的重量。</p>\n<h4 id=\"输出格式-5\"><a href=\"#输出格式-5\" class=\"headerlink\" title=\"输出格式\"></a>输出格式</h4><p>输出对应孩子所得的南瓜重量。</p>\n</blockquote>\n<h3 id=\"思路分析\"><a href=\"#思路分析\" class=\"headerlink\" title=\"思路分析\"></a>思路分析</h3><p>这道题目要按照输入的孩子年龄为序列输出，所以一般来说孩子序列的顺序还是不要修改的好，所以我们对南瓜序列进行修改。<br>将南瓜序列进行排序之后，就可以知道南瓜是第几大的，在对每个孩子判断他是第几大的就给第几大的南瓜，这道题目就迎刃而解了。</p>\n<h3 id=\"C代码\"><a href=\"#C代码\" class=\"headerlink\" title=\"C代码\"></a>C代码</h3><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> N 10010</span></span><br><span class=\"line\"><span class=\"type\">int</span> a[<span class=\"number\">2</span>][N], b[N], n;</span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">Wsort</span><span class=\"params\">(<span class=\"type\">int</span> a[], <span class=\"type\">int</span> n)</span>  <span class=\"comment\">// 冒泡排序</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n - <span class=\"number\">1</span>; i ++ ) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; n - <span class=\"number\">1</span> - i; j ++ ) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (a[j + <span class=\"number\">1</span>] &lt; a[j]) &#123;</span><br><span class=\"line\">                <span class=\"type\">int</span> t = a[j + <span class=\"number\">1</span>];</span><br><span class=\"line\">                a[j + <span class=\"number\">1</span>] = a[j];</span><br><span class=\"line\">                a[j] = t;</span><br><span class=\"line\">            &#125; </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span> &gt;&gt; n;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>;i &lt; n;i ++)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>, a[<span class=\"number\">0</span>][i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>;i &lt; n;i ++)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>, b[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    Wsort(b, n);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>;i &lt; n;i ++)&#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> count = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> j = <span class=\"number\">0</span>;j &lt; n;j ++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(a[<span class=\"number\">0</span>][i] &gt; a[<span class=\"number\">0</span>][j])&#123;</span><br><span class=\"line\">                count ++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        a[<span class=\"number\">1</span>][i] = b[count];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>;i &lt; n;i ++)</span><br><span class=\"line\">        <span class=\"built_in\">printf</span> (<span class=\"string\">&quot;%d &quot;</span>, a[<span class=\"number\">1</span>][i]);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"C-代码\"><a href=\"#C-代码\" class=\"headerlink\" title=\"C++代码\"></a>C++代码</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">1e4</span> + <span class=\"number\">10</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">typedef</span> pair&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt; PII;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"type\">int</span> n, b[N], c[N];</span><br><span class=\"line\">PII a[N];</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">cmp</span><span class=\"params\">(PII a, PII b)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a.first &lt; b.first;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span> <span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>, &amp;n);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i ++ ) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>, &amp;a[i].first);</span><br><span class=\"line\">        a[i].second = i;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i ++ ) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>, &amp;b[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"built_in\">sort</span>(a, a + n, cmp);</span><br><span class=\"line\">    <span class=\"built_in\">sort</span>(b, b + n);</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i ++ ) &#123;</span><br><span class=\"line\">        c[a[i].second] = b[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i ++ ) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span> (<span class=\"string\">&quot;%d &quot;</span>, c[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"G：城市最短距离\"><a href=\"#G：城市最短距离\" class=\"headerlink\" title=\"G：城市最短距离\"></a>G：城市最短距离</h1><blockquote>\n<h4 id=\"题目描述-6\"><a href=\"#题目描述-6\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h4><p>已知现在有n个城市，城市以1到n进行编号，不同城市之间的距离为两城市编号的最大公约数。<br>求城市 x 到城市 y 的所需移动的最短距离。</p>\n<h4 id=\"输入格式-6\"><a href=\"#输入格式-6\" class=\"headerlink\" title=\"输入格式\"></a>输入格式</h4><p>第一行两个数n，q。表示有n个城市，q组询问。<br>接下来q行，每行两个数x，y。</p>\n<h4 id=\"输出格式-6\"><a href=\"#输出格式-6\" class=\"headerlink\" title=\"输出格式\"></a>输出格式</h4><p>每个询问输出一行，每行一个数字表示答案</p>\n</blockquote>\n<p>首先对于每一个城市$i$都有自己编号，而任意的两个城市$(x,y)$都有一个距离$gcd(x,y)$</p>\n<ol>\n<li>如果给定的两个$x$和$y$有$x=y$，那么他们之间距离为$0$，可以直接到达。</li>\n<li>如果对于任意两个城市$gcd(i,j)=1$,即该两个城市互质，则他们的距离就是$1$</li>\n<li>如果对于任意两个城市$(x,y)\\not=1$,那么他们之间可以从$x$先到$1$，再从$1$到$y$，因为$gcd(1,AnyNumber)=1$,这样就可以走可以保证两步之内到达。<h3 id=\"记得使用puts-“”-，本题的输入输出数据量比较大，如果用printf会超时\"><a href=\"#记得使用puts-“”-，本题的输入输出数据量比较大，如果用printf会超时\" class=\"headerlink\" title=\"记得使用puts(“”)，本题的输入输出数据量比较大，如果用printf会超时\"></a>记得使用puts(“”)，本题的输入输出数据量比较大，如果用printf会超时</h3></li>\n</ol>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;stdio.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> n,q,x,y;</span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">gcd</span><span class=\"params\">(<span class=\"type\">int</span> a,<span class=\"type\">int</span> b)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> b == <span class=\"number\">0</span> ? a : gcd(b,a % b);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d%d&quot;</span>,&amp;n,&amp;q);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">1</span>;i &lt;= q;i++)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d%d&quot;</span>,&amp;x,&amp;y);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(x == y)</span><br><span class=\"line\">            <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;0&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(gcd(x,y) == <span class=\"number\">1</span>)</span><br><span class=\"line\">            <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;1&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;2&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"H：扔香蕉皮\"><a href=\"#H：扔香蕉皮\" class=\"headerlink\" title=\"H：扔香蕉皮\"></a>H：扔香蕉皮</h1><blockquote>\n<h4 id=\"题目描述-7\"><a href=\"#题目描述-7\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h4><p>TYY 是一个非常坏的男孩，但同时，他也十分爱吃香蕉。 于是，他决定用香蕉皮来惹恼他的朋友 ZJ。<br>ZJ 的房间可以表示为一个 n 行 m 列的网格。 让 ( i , j ) 表示第 i 行和第 j 列的单元格。 ZJ 目前站在他房间里的位置 ( i , j )。 为了惹恼 ZJ，TYY 决定在房间里扔两个香蕉皮（它们可以在同一个单元格里）。<br>因为 ZJ 不喜欢香蕉皮扔在地板上，他必须把他们俩都捡起来，然后回到原来的位置。ZJ 走过的距离是穿过两个香蕉皮的位置并返回 ( i , j ) 的最短路径，走的过程中只能到相邻的单元。也就是说，如果他在房间的位置为( x , y )然后他可以前往房间( x+1 , y ), ( x-1 , y ), ( x , y+1 ), ( x , y-1 )。<br>TYY 想知道他应该把这两个香蕉皮扔在哪里，这样 ZJ 走过的距离就会最大化。但是因为他很忙，他让你告诉他。</p>\n<h4 id=\"输入格式-7\"><a href=\"#输入格式-7\" class=\"headerlink\" title=\"输入格式\"></a>输入格式</h4><p>第一行包含一个整数 t 代表 t 组测试样例。<br>每个测试用例的唯一行包含四个整数 n, m, i, j  代表房间的尺寸，以及 ZJ 目前站立的位置。</p>\n<h4 id=\"输出格式-7\"><a href=\"#输出格式-7\" class=\"headerlink\" title=\"输出格式\"></a>输出格式</h4><p>对于每个测试用例，打印四个整数 x1, y1, x2, y2  代表两个香蕉皮应该扔在哪里的坐标。<br>如果有多个答案，你只需要输出任意一种答案。</p>\n</blockquote>\n<h3 id=\"思路分析-1\"><a href=\"#思路分析-1\" class=\"headerlink\" title=\"思路分析:\"></a>思路分析:</h3><p>容易验证，将两个悠悠球扔在房间对角线的两个角落，Riley 需要移动的总距离一定最长。</p>\n<p>以样例中的第 3 组数据（n=3，m=5，i=2，j=2）为例：</p>\n<p>其中蓝色点表示 Riley 的初始位置，两个红色点表示悠悠球的位置，绿色箭头表示 Riley 的一种移动的路线。</p>\n<p>当把两个悠悠球分别扔在房间的左上角和右下角时，Riley 移动的路线长度相当于在房间的外围走一圈，此时路线最长：</p>\n<p><img src=\"/blog/images/pasted-0.png\" alt=\"upload successful\"></p>\n<p>当把两个悠悠球分别扔在房间的左上角和右上角时，Riley 移动的路线长度显然小于上一种情况：</p>\n<p><img src=\"/blog/images/pasted-1.png\" alt=\"upload successful\"></p>\n<p>上述结论成立。</p>\n<p>可以发现对于初始位置在房间外围的情况，会有其他的最优解，但此时将悠悠球扔在房间对角线的两个角落亦是一种最优解。</p>\n<p>所以，你可以输出以下两种答案中的任意一种：</p>\n<p>1、左上角和右下角，即 (1,1) 和 (n,m)；</p>\n<p>2、右上角和左下角，即 (1,m) 和 (n,1)。</p>\n<h3 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h3><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">int</span> t, n, m, i, j;</span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;t);</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(t--)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d%d%d%d&quot;</span>,&amp;n,&amp;m,&amp;i,&amp;j);</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d %d %d %d\\n&quot;</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>,n,m);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"I：斐波那契数列\"><a href=\"#I：斐波那契数列\" class=\"headerlink\" title=\"I：斐波那契数列\"></a>I：斐波那契数列</h1><blockquote>\n<h4 id=\"题目描述-8\"><a href=\"#题目描述-8\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h4><p>这是一道 “简单” 的求斐波那契数列题目。<br>Fn = Fn-1 + Fn-2<br>求出 Fn 的值，答案可能过大，需要将输出的答案对 1000000007 取余。</p>\n<h4 id=\"输入格式-8\"><a href=\"#输入格式-8\" class=\"headerlink\" title=\"输入格式\"></a>输入格式</h4><p>一行一个正整数 n</p>\n<h4 id=\"输出格式-8\"><a href=\"#输出格式-8\" class=\"headerlink\" title=\"输出格式\"></a>输出格式</h4><p>输出一行一个整数表示答案。</p>\n</blockquote>\n<p>相信C语言课都讲过递归求斐波那契数列或者循环求斐波那契数列，这道题目可以看到数据范围在2<sup>63</sup>,所以如果用普通的方法只能拿50分，需要另寻他法。<br>我们令$f(n)$,$f(n-1)$组成一个列向量，乘以一个$2\\times2$的矩阵可以得到$f(n+1)$,$f(n)$</p>\n<script type=\"math/tex; mode=display\">\n  \\begin{bmatrix}\n  a&b\\\\\n  c&d\n\\end{bmatrix}\n*\n\\begin{bmatrix}\n  f(n)\\\\f(n-1)\n\\end{bmatrix}\n=\n\\begin{bmatrix}\n  f(n+1)\\\\f(n)\n\\end{bmatrix}</script><p>又线性代数展开可以得到如下式子</p>\n<script type=\"math/tex; mode=display\">\n  \\begin{bmatrix}\n  a&b\\\\\n  c&d\n\\end{bmatrix}\n*\n\\begin{bmatrix}\n  f(n)\\\\f(n-1)\n\\end{bmatrix}\n=\n\\begin{bmatrix}\n  a*f(n) + b*f(n-1)\\\\c*f(n)+d*f(n-1)\n\\end{bmatrix}</script><p>并且$f(n+1)=f(n)+f(n-1)$,对应项相等，可以得到</p>\n<script type=\"math/tex; mode=display\">\n\\begin{bmatrix}\n  f(n+1)\\\\f(n)\n\\end{bmatrix}\n=\n\\begin{bmatrix}\n  a*f(n) + b*f(n-1)\\\\c*f(n)+d*f(n-1)\n\\end{bmatrix}</script><p>即$a=1$  ,  $b=1$  ,  $c=1$  ,  $d=0$<br>如此由矩阵的乘法可得，由$n$个矩阵乘法相乘，我们令矩阵</p>\n<script type=\"math/tex; mode=display\">\n  \\begin{bmatrix}\n  a&b\\\\\n  c&d\n\\end{bmatrix}\n= A</script><p>那么需要得到$f(n)$就可以列出如下式子。</p>\n<script type=\"math/tex; mode=display\">\n\\begin{bmatrix}\n  1&1\\\\\n  1&0\n\\end{bmatrix}^{n-1}\n* \n\\begin{bmatrix}\n  f(1)\\\\f(0)\n\\end{bmatrix}\n=\n\\begin{bmatrix}\n  f(n)\\\\f(n-1)\n\\end{bmatrix}</script><p>然后使用矩阵快速幂即可快速算出答案。<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;stdio.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;cstring&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> ll long long</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> MOD 1000000007</span></span><br><span class=\"line\">ll n;</span><br><span class=\"line\">ll base[<span class=\"number\">2</span>][<span class=\"number\">2</span>] = &#123;&#123;<span class=\"number\">0</span>,<span class=\"number\">1</span>&#125;,&#123;<span class=\"number\">1</span>,<span class=\"number\">1</span>&#125;&#125;;</span><br><span class=\"line\">ll f[<span class=\"number\">2</span>] = &#123;<span class=\"number\">0</span>,<span class=\"number\">1</span>&#125;;</span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">multi</span><span class=\"params\">(ll a[<span class=\"number\">2</span>],ll b[<span class=\"number\">2</span>][<span class=\"number\">2</span>])</span>&#123;</span><br><span class=\"line\">    ll ans[<span class=\"number\">2</span>] = &#123;<span class=\"number\">0</span>,<span class=\"number\">0</span>&#125;;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">2</span>; i++)</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; <span class=\"number\">2</span>; j++)</span><br><span class=\"line\">            ans[j] = (ans[j] + a[i] * b[i][j]) % MOD;</span><br><span class=\"line\">    <span class=\"built_in\">memcpy</span>(a,ans,<span class=\"keyword\">sizeof</span>(ans));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">self</span><span class=\"params\">(ll a[<span class=\"number\">2</span>][<span class=\"number\">2</span>])</span>&#123;</span><br><span class=\"line\">    ll ans[<span class=\"number\">2</span>][<span class=\"number\">2</span>];</span><br><span class=\"line\">    <span class=\"built_in\">memset</span>(ans,<span class=\"number\">0</span>,<span class=\"keyword\">sizeof</span>(ans));</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>;i &lt; <span class=\"number\">2</span>;i++)</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> j = <span class=\"number\">0</span>;j &lt; <span class=\"number\">2</span>;j++)</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"type\">int</span> k = <span class=\"number\">0</span>;k &lt; <span class=\"number\">2</span>;k++)</span><br><span class=\"line\">                ans[i][j] = (ans[i][j] + a[i][k] * a[k][j]) % MOD;</span><br><span class=\"line\">    <span class=\"built_in\">memcpy</span>(a,ans,<span class=\"keyword\">sizeof</span>(ans));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;n);</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(n)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(n &amp; <span class=\"number\">1</span>)</span><br><span class=\"line\">            multi(f,base);</span><br><span class=\"line\">        self(base);</span><br><span class=\"line\">        n &gt;&gt;= <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d&quot;</span>,f[<span class=\"number\">0</span>]);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"第二届“计协杯”程序设计大赛暨ACM实验室招新选拔4月赛\"><a href=\"#第二届“计协杯”程序设计大赛暨ACM实验室招新选拔4月赛\" class=\"headerlink\" title=\"第二届“计协杯”程序设计大赛暨ACM实验室招新选拔4月赛\"></a><a href=\"/contest.php?cid=1049\">第二届“计协杯”程序设计大赛暨ACM实验室招新选拔4月赛</a></h1><blockquote>\n<p> “计协杯”是由湖南工程学院计算机协会举办的程序设计竞赛，旨在提高同学们激发学生学习计算机领域专业知识与技能的兴趣，鼓励主动灵活地运用计算机知识和技能解决实际问题，有效提升算法设计、逻辑推理、数学建模、编程实现和计算机系统能力，培养团队合作意识、挑战精神和创新能力。</p>\n</blockquote>\n<h1 id=\"A：买苹果\"><a href=\"#A：买苹果\" class=\"headerlink\" title=\"A：买苹果\"></a>A：买苹果</h1><blockquote>\n<h4 id=\"题目描述\"><a href=\"#题目描述\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h4><p>LM 是一个有钱的素数狂热爱好者，有一天来到一个苹果摊上看到有 n 个苹果，他想挑选重量为素数的苹果，这可难到他了，你能帮帮他吗</p>\n<h4 id=\"输入格式\"><a href=\"#输入格式\" class=\"headerlink\" title=\"输入格式\"></a>输入格式</h4><p>第一行 一个数字 n,<br>第二行 n 个数字 w1  w2  w3  …  wn  其中 wi 代表第 i 个苹果的重量。</p>\n<h4 id=\"输出格式\"><a href=\"#输出格式\" class=\"headerlink\" title=\"输出格式\"></a>输出格式</h4><p>输出一个数 LM 买的所有素数苹果的总重量。</p>\n</blockquote>\n<p>这道题目其实就是一道比较简单的求素数的问题，求素数有两种方法，一种暴力求素数，一种筛法求素数，对于时间复杂度而言，筛法求素数比暴力求素数更加快，而这道题其实不要用到筛法求素数，只需要在暴力求素数的方法上加以改进一下就可以过了。</p>\n<h3 id=\"记得求和的时候用上long-long，否则得到的总数会撑爆int，也就是超出int的数据范围从而得到负数的情况。\"><a href=\"#记得求和的时候用上long-long，否则得到的总数会撑爆int，也就是超出int的数据范围从而得到负数的情况。\" class=\"headerlink\" title=\"记得求和的时候用上long long，否则得到的总数会撑爆int，也就是超出int的数据范围从而得到负数的情况。\"></a>记得求和的时候用上long long，否则得到的总数会撑爆int，也就是超出int的数据范围从而得到负数的情况。</h3><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&quot;stdio.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&quot;math.h&quot;</span></span></span><br><span class=\"line\"><span class=\"type\">int</span> a[<span class=\"number\">100010</span>];</span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> n,j;</span><br><span class=\"line\">    <span class=\"type\">long</span> <span class=\"type\">long</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;n);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>;i &lt; n;i ++)</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>;i &lt; n;i ++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(j = <span class=\"number\">2</span>;j &lt;= <span class=\"built_in\">sqrt</span>(a[i]); j ++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(a[i] % j == <span class=\"number\">0</span>)<span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"built_in\">sqrt</span>(a[i]) &lt; j)&#123;</span><br><span class=\"line\">            sum += a[i];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%lld&quot;</span>,sum);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"B：买西瓜\"><a href=\"#B：买西瓜\" class=\"headerlink\" title=\"B：买西瓜\"></a>B：买西瓜</h1><blockquote>\n<h4 id=\"题目描述-1\"><a href=\"#题目描述-1\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h4><p>今天，zj 和他的朋友买了一个西瓜，他们想要把西瓜分成两份。<br>作为数学迷，他们两个人都喜欢偶数，但是他们不知道这个西瓜能不能分成两个偶数重量的西瓜，<br>请你帮一帮他们判断买的西瓜能不能分成两个偶数重量的西瓜。</p>\n<h4 id=\"输入格式-1\"><a href=\"#输入格式-1\" class=\"headerlink\" title=\"输入格式\"></a>输入格式</h4><p>输入一行包含整数 w ( 1 ≤  w  ≤ 100 )代表男孩们买的西瓜的重量。</p>\n<h4 id=\"输出格式-1\"><a href=\"#输出格式-1\" class=\"headerlink\" title=\"输出格式\"></a>输出格式</h4><p>如果可以将西瓜分成两部分，每部分重偶数公斤则输出YES；<br>如果不能分成两份偶数重量的西瓜则为NO。注：输出都为大写字符</p>\n</blockquote>\n<p>通过分析题目可以快速发现，若西瓜的重量为偶数的话 是必定可以分成两个偶数重量的西瓜的，但是，有一个特殊情况需要排除，这也是本题的唯一坑点，就是当w = 2 时，虽然它也是一个偶数，但是它并不可以分出两个偶数重量的部分。了解这些后就可以开始编写程序了。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;stdio.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> w;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;w);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(w%<span class=\"number\">2</span> == <span class=\"number\">0</span> &amp;&amp; w!=<span class=\"number\">2</span>)</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;YES\\n&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;NO\\n&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"C：比赛\"><a href=\"#C：比赛\" class=\"headerlink\" title=\"C：比赛\"></a>C：比赛</h1><blockquote>\n<h4 id=\"题目描述-2\"><a href=\"#题目描述-2\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h4><p>今天学校举办了一场足球比赛，一天一共有 n 场比赛，这次比赛总共有 6 支球队参加，赢一场积 3 分，平一场积 1 分，输则积 0 分。<br>现在我们来写一个简单的程序，根据一个小组所有比赛的结果，输出各队的积分。<br>若没有参赛则视为弃权，按 0 分输出。</p>\n<h4 id=\"输入格式-2\"><a href=\"#输入格式-2\" class=\"headerlink\" title=\"输入格式\"></a>输入格式</h4><p>第一行一个整数n，表示有n场比赛。<br>将参赛的 6 个队伍编号为  A ~ F  6个字母， 每行为空格隔开的两个大写字母与两个整数，表示两支队伍比赛对应的进球数，<br>A B 1 2表示AB的比赛比分为A 1 : B 2。</p>\n<h4 id=\"输出格式-2\"><a href=\"#输出格式-2\" class=\"headerlink\" title=\"输出格式\"></a>输出格式</h4><p>输出一行 6 个整数分别是A~F的积分。</p>\n</blockquote>\n<p>通过分析题目可知一共有6个球队，他们之间将进行足球比赛，容易分析出每场比赛只有三种情况，胜负和平局。<br>我们可以设置一个一维数组用来记录每支球队的分数，用几个临时的变量来存储当前比赛队伍及其得分情况。<br>这里建议使用字符串输入队伍编号，避免出现输入错误的问题。不要忘记在使用score数组前对其进行初始化。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;stdio.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\"><span class=\"type\">int</span> n;</span><br><span class=\"line\"><span class=\"type\">int</span> score[<span class=\"number\">7</span>];</span><br><span class=\"line\"><span class=\"type\">char</span> team1[<span class=\"number\">2</span>],team2[<span class=\"number\">2</span>];</span><br><span class=\"line\"><span class=\"type\">int</span> shot1, shot2;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;n);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>; i&lt;<span class=\"number\">7</span>; i++)</span><br><span class=\"line\">        score[i] = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>; i&lt;n; i++)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%s%s%d%d&quot;</span>,team1,team2,&amp;shot1,&amp;shot2);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(shot1 &lt; shot2)</span><br><span class=\"line\">            score[team2[<span class=\"number\">0</span>] - <span class=\"string\">&#x27;A&#x27;</span> + <span class=\"number\">1</span>] += <span class=\"number\">3</span>;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(shot1 == shot2)&#123;</span><br><span class=\"line\">            score[team1[<span class=\"number\">0</span>] - <span class=\"string\">&#x27;A&#x27;</span> + <span class=\"number\">1</span>] += <span class=\"number\">1</span>;</span><br><span class=\"line\">            score[team2[<span class=\"number\">0</span>] - <span class=\"string\">&#x27;A&#x27;</span> + <span class=\"number\">1</span>] += <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            score[team1[<span class=\"number\">0</span>] - <span class=\"string\">&#x27;A&#x27;</span> + <span class=\"number\">1</span>] += <span class=\"number\">3</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">1</span>; i&lt;=<span class=\"number\">6</span>; i++)</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d &quot;</span>,score[i]);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h1 id=\"D：WA学长的小女友\"><a href=\"#D：WA学长的小女友\" class=\"headerlink\" title=\"D：WA学长的小女友\"></a>D：WA学长的小女友</h1><blockquote>\n<h4 id=\"题目描述-3\"><a href=\"#题目描述-3\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h4><p>WA 学长有一个漂亮可爱的女朋友，但是他的女朋友脾气很怪异，看到一些特殊的字符就会发脾气，<br>今天，WA 找女朋友有点事需要发微信，WA 为了不让他的女朋友发脾气，<br>他希望可以将一条信息里所有让他女朋友生气的字符全部删除再发微信给他女朋友。</p>\n<h4 id=\"输入格式-3\"><a href=\"#输入格式-3\" class=\"headerlink\" title=\"输入格式\"></a>输入格式</h4><p>第一行需要发送的信息。<br>第二行一个字符串代表需要删除的字符 。</p>\n<h4 id=\"输出格式-3\"><a href=\"#输出格式-3\" class=\"headerlink\" title=\"输出格式\"></a>输出格式</h4><p>输出一行处理过的信息。</p>\n</blockquote>\n<p>对于这道题目,如果按照惯性思维来写，肯定是对两个字符串进行遍历，如果有就进行删除等操作，但是这个题目的字符串的数据量很大，所以这个方法行不通。<br>那我们应该用什么方法来解决这个问题呢，每一个字母都有对应的ASCII码，而这个ASCII码就是我们解决这道题目的关键。<br>我们可以先对需要删除的字符进行打表，确认它需要删除，然后再对原字符串的元素进行判断是否含有这些字符在进行删除。</p>\n<h3 id=\"记得输入的时候一定要用gets函数，而不是scanf-“-s”-a-这样子当字符串有空格时读入会不完整。\"><a href=\"#记得输入的时候一定要用gets函数，而不是scanf-“-s”-a-这样子当字符串有空格时读入会不完整。\" class=\"headerlink\" title=\"记得输入的时候一定要用gets函数，而不是scanf(“%s”,a),这样子当字符串有空格时读入会不完整。\"></a>记得输入的时候一定要用gets函数，而不是scanf(“%s”,a),这样子当字符串有空格时读入会不完整。</h3><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">char</span> a[<span class=\"number\">100010</span>],b[<span class=\"number\">100010</span>];</span><br><span class=\"line\"><span class=\"type\">int</span> st[<span class=\"number\">310</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span> <span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    gets(a);</span><br><span class=\"line\">    gets(b);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>;i &lt; <span class=\"keyword\">sizeof</span>(b);i ++) &#123; <span class=\"comment\">//特殊的循环方式</span></span><br><span class=\"line\">        st[b[i]] = <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"keyword\">sizeof</span>(a); i ++ ) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!st[a[i]])</span><br><span class=\"line\">            <span class=\"built_in\">printf</span> (<span class=\"string\">&quot;%c&quot;</span>, a[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"E：扔葡萄皮\"><a href=\"#E：扔葡萄皮\" class=\"headerlink\" title=\"E：扔葡萄皮\"></a>E：扔葡萄皮</h1><blockquote>\n<h4 id=\"题目描述-4\"><a href=\"#题目描述-4\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h4><p>今天，ZJ 吃了很多的葡萄，但是剩下的葡萄皮怎么处理呢？<br>刚开始吃葡萄时，他将葡萄皮随意的放在了桌子上，一共有 n 堆，<br>但是他作为一个强迫症，他想不改动原有的葡萄皮让每个堆的葡萄皮数量均不相同。<br>现在有一个操作，ZJ 可以再吃一个葡萄并将葡萄皮扔在任意一个堆上。他想让这个操作数最少，因为他实在吃不下更多的葡萄了，请你帮一帮他。</p>\n<h4 id=\"输入格式-4\"><a href=\"#输入格式-4\" class=\"headerlink\" title=\"输入格式\"></a>输入格式</h4><p>第一行包含一个整数 n；<br>第二行包含 n 个数 a1,a2,…,an;</p>\n<h4 id=\"输出格式-4\"><a href=\"#输出格式-4\" class=\"headerlink\" title=\"输出格式\"></a>输出格式</h4><p>一个整数，表示所需的最少操作次数。</p>\n</blockquote>\n<p>这道题目就考察的是一个贪心的算法，这类算法顾名思义就是要够贪才能AC，如果你不够贪就会错。<br>那么对于这道题目我们应该怎么贪心，题目中说要让每一个葡萄皮堆的葡萄皮数量不相同，而且要<br>操作数最少，那么我么们就可以对于测试样例进行一次模拟，发现只要对于一个1进行操作就可以达到<br>题目的要求，如此我们可以知道，当得到一些葡萄皮堆，我们可以先对他们进行排序，从第二堆葡萄皮堆到<br>最后一个葡萄皮堆，每个葡萄皮堆比前面的葡萄皮堆多1个，这样子我们就可以得到这个题目最优解。</p>\n<h3 id=\"记得sum要long-long哦\"><a href=\"#记得sum要long-long哦\" class=\"headerlink\" title=\"记得sum要long long哦\"></a>记得sum要long long哦</h3><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">int</span> a[<span class=\"number\">10010</span>];</span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> n ;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;n);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>;i &lt; n;i ++)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>;i &lt; n - <span class=\"number\">1</span>;i ++)&#123;<span class=\"comment\">//控制比较轮次，一共 n-1 趟</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> j = <span class=\"number\">0</span>;j &lt; n - <span class=\"number\">1</span> - i;j ++)&#123;<span class=\"comment\">//控制两个挨着的元素进行比较</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(a[j] &gt; a[j + <span class=\"number\">1</span>])&#123;</span><br><span class=\"line\">                <span class=\"type\">int</span> t = a[j];</span><br><span class=\"line\">                a[j] = a[j+<span class=\"number\">1</span>];</span><br><span class=\"line\">                a[j+<span class=\"number\">1</span>] = t;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"type\">long</span> <span class=\"type\">long</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">1</span>;i &lt; n;i ++)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(a[i] &lt;= a[i - <span class=\"number\">1</span>])&#123;</span><br><span class=\"line\">            sum += a[i - <span class=\"number\">1</span>] - a[i] + <span class=\"number\">1</span>;</span><br><span class=\"line\">            a[i] = a[i - <span class=\"number\">1</span>] + <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%lld&quot;</span>,sum);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"F：买南瓜\"><a href=\"#F：买南瓜\" class=\"headerlink\" title=\"F：买南瓜\"></a>F：买南瓜</h1><blockquote>\n<h4 id=\"题目描述-5\"><a href=\"#题目描述-5\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h4><p>tyy 买了 n 个南瓜，他有 n 个孩子，每个孩子的年龄都不相同，现在 tyy 的孩子们排成一列，<br>他希望将南瓜按他们年龄大小分给他们，即年龄大的孩子分到的南瓜比年龄小的孩子分到的南瓜大。</p>\n<h4 id=\"输入格式-5\"><a href=\"#输入格式-5\" class=\"headerlink\" title=\"输入格式\"></a>输入格式</h4><p>第一行一个数字 n 代表南瓜（孩子）的数量。<br>第二行 n 个数字 a1 a2 a3 … an 其中 ai 代表孩子的年龄。<br>第三行 n 个数字 b1 b2 b3 … bn 其中 bi 代表南瓜的重量。</p>\n<h4 id=\"输出格式-5\"><a href=\"#输出格式-5\" class=\"headerlink\" title=\"输出格式\"></a>输出格式</h4><p>输出对应孩子所得的南瓜重量。</p>\n</blockquote>\n<h3 id=\"思路分析\"><a href=\"#思路分析\" class=\"headerlink\" title=\"思路分析\"></a>思路分析</h3><p>这道题目要按照输入的孩子年龄为序列输出，所以一般来说孩子序列的顺序还是不要修改的好，所以我们对南瓜序列进行修改。<br>将南瓜序列进行排序之后，就可以知道南瓜是第几大的，在对每个孩子判断他是第几大的就给第几大的南瓜，这道题目就迎刃而解了。</p>\n<h3 id=\"C代码\"><a href=\"#C代码\" class=\"headerlink\" title=\"C代码\"></a>C代码</h3><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> N 10010</span></span><br><span class=\"line\"><span class=\"type\">int</span> a[<span class=\"number\">2</span>][N], b[N], n;</span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">Wsort</span><span class=\"params\">(<span class=\"type\">int</span> a[], <span class=\"type\">int</span> n)</span>  <span class=\"comment\">// 冒泡排序</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n - <span class=\"number\">1</span>; i ++ ) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; n - <span class=\"number\">1</span> - i; j ++ ) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (a[j + <span class=\"number\">1</span>] &lt; a[j]) &#123;</span><br><span class=\"line\">                <span class=\"type\">int</span> t = a[j + <span class=\"number\">1</span>];</span><br><span class=\"line\">                a[j + <span class=\"number\">1</span>] = a[j];</span><br><span class=\"line\">                a[j] = t;</span><br><span class=\"line\">            &#125; </span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"built_in\">cin</span> &gt;&gt; n;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>;i &lt; n;i ++)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>, a[<span class=\"number\">0</span>][i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>;i &lt; n;i ++)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>, b[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    Wsort(b, n);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>;i &lt; n;i ++)&#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> count = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> j = <span class=\"number\">0</span>;j &lt; n;j ++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(a[<span class=\"number\">0</span>][i] &gt; a[<span class=\"number\">0</span>][j])&#123;</span><br><span class=\"line\">                count ++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        a[<span class=\"number\">1</span>][i] = b[count];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>;i &lt; n;i ++)</span><br><span class=\"line\">        <span class=\"built_in\">printf</span> (<span class=\"string\">&quot;%d &quot;</span>, a[<span class=\"number\">1</span>][i]);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"C-代码\"><a href=\"#C-代码\" class=\"headerlink\" title=\"C++代码\"></a>C++代码</h3><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;cstdio&gt;</span></span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">1e4</span> + <span class=\"number\">10</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">typedef</span> pair&lt;<span class=\"type\">int</span>, <span class=\"type\">int</span>&gt; PII;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"type\">int</span> n, b[N], c[N];</span><br><span class=\"line\">PII a[N];</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">bool</span> <span class=\"title\">cmp</span><span class=\"params\">(PII a, PII b)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a.first &lt; b.first;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span> <span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>, &amp;n);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i ++ ) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>, &amp;a[i].first);</span><br><span class=\"line\">        a[i].second = i;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i ++ ) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>, &amp;b[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"built_in\">sort</span>(a, a + n, cmp);</span><br><span class=\"line\">    <span class=\"built_in\">sort</span>(b, b + n);</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i ++ ) &#123;</span><br><span class=\"line\">        c[a[i].second] = b[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i ++ ) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span> (<span class=\"string\">&quot;%d &quot;</span>, c[i]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"G：城市最短距离\"><a href=\"#G：城市最短距离\" class=\"headerlink\" title=\"G：城市最短距离\"></a>G：城市最短距离</h1><blockquote>\n<h4 id=\"题目描述-6\"><a href=\"#题目描述-6\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h4><p>已知现在有n个城市，城市以1到n进行编号，不同城市之间的距离为两城市编号的最大公约数。<br>求城市 x 到城市 y 的所需移动的最短距离。</p>\n<h4 id=\"输入格式-6\"><a href=\"#输入格式-6\" class=\"headerlink\" title=\"输入格式\"></a>输入格式</h4><p>第一行两个数n，q。表示有n个城市，q组询问。<br>接下来q行，每行两个数x，y。</p>\n<h4 id=\"输出格式-6\"><a href=\"#输出格式-6\" class=\"headerlink\" title=\"输出格式\"></a>输出格式</h4><p>每个询问输出一行，每行一个数字表示答案</p>\n</blockquote>\n<p>首先对于每一个城市$i$都有自己编号，而任意的两个城市$(x,y)$都有一个距离$gcd(x,y)$</p>\n<ol>\n<li>如果给定的两个$x$和$y$有$x=y$，那么他们之间距离为$0$，可以直接到达。</li>\n<li>如果对于任意两个城市$gcd(i,j)=1$,即该两个城市互质，则他们的距离就是$1$</li>\n<li>如果对于任意两个城市$(x,y)\\not=1$,那么他们之间可以从$x$先到$1$，再从$1$到$y$，因为$gcd(1,AnyNumber)=1$,这样就可以走可以保证两步之内到达。<h3 id=\"记得使用puts-“”-，本题的输入输出数据量比较大，如果用printf会超时\"><a href=\"#记得使用puts-“”-，本题的输入输出数据量比较大，如果用printf会超时\" class=\"headerlink\" title=\"记得使用puts(“”)，本题的输入输出数据量比较大，如果用printf会超时\"></a>记得使用puts(“”)，本题的输入输出数据量比较大，如果用printf会超时</h3></li>\n</ol>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;stdio.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> n,q,x,y;</span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">gcd</span><span class=\"params\">(<span class=\"type\">int</span> a,<span class=\"type\">int</span> b)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> b == <span class=\"number\">0</span> ? a : gcd(b,a % b);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d%d&quot;</span>,&amp;n,&amp;q);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">1</span>;i &lt;= q;i++)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d%d&quot;</span>,&amp;x,&amp;y);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(x == y)</span><br><span class=\"line\">            <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;0&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(gcd(x,y) == <span class=\"number\">1</span>)</span><br><span class=\"line\">            <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;1&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;2&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"H：扔香蕉皮\"><a href=\"#H：扔香蕉皮\" class=\"headerlink\" title=\"H：扔香蕉皮\"></a>H：扔香蕉皮</h1><blockquote>\n<h4 id=\"题目描述-7\"><a href=\"#题目描述-7\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h4><p>TYY 是一个非常坏的男孩，但同时，他也十分爱吃香蕉。 于是，他决定用香蕉皮来惹恼他的朋友 ZJ。<br>ZJ 的房间可以表示为一个 n 行 m 列的网格。 让 ( i , j ) 表示第 i 行和第 j 列的单元格。 ZJ 目前站在他房间里的位置 ( i , j )。 为了惹恼 ZJ，TYY 决定在房间里扔两个香蕉皮（它们可以在同一个单元格里）。<br>因为 ZJ 不喜欢香蕉皮扔在地板上，他必须把他们俩都捡起来，然后回到原来的位置。ZJ 走过的距离是穿过两个香蕉皮的位置并返回 ( i , j ) 的最短路径，走的过程中只能到相邻的单元。也就是说，如果他在房间的位置为( x , y )然后他可以前往房间( x+1 , y ), ( x-1 , y ), ( x , y+1 ), ( x , y-1 )。<br>TYY 想知道他应该把这两个香蕉皮扔在哪里，这样 ZJ 走过的距离就会最大化。但是因为他很忙，他让你告诉他。</p>\n<h4 id=\"输入格式-7\"><a href=\"#输入格式-7\" class=\"headerlink\" title=\"输入格式\"></a>输入格式</h4><p>第一行包含一个整数 t 代表 t 组测试样例。<br>每个测试用例的唯一行包含四个整数 n, m, i, j  代表房间的尺寸，以及 ZJ 目前站立的位置。</p>\n<h4 id=\"输出格式-7\"><a href=\"#输出格式-7\" class=\"headerlink\" title=\"输出格式\"></a>输出格式</h4><p>对于每个测试用例，打印四个整数 x1, y1, x2, y2  代表两个香蕉皮应该扔在哪里的坐标。<br>如果有多个答案，你只需要输出任意一种答案。</p>\n</blockquote>\n<h3 id=\"思路分析-1\"><a href=\"#思路分析-1\" class=\"headerlink\" title=\"思路分析:\"></a>思路分析:</h3><p>容易验证，将两个悠悠球扔在房间对角线的两个角落，Riley 需要移动的总距离一定最长。</p>\n<p>以样例中的第 3 组数据（n=3，m=5，i=2，j=2）为例：</p>\n<p>其中蓝色点表示 Riley 的初始位置，两个红色点表示悠悠球的位置，绿色箭头表示 Riley 的一种移动的路线。</p>\n<p>当把两个悠悠球分别扔在房间的左上角和右下角时，Riley 移动的路线长度相当于在房间的外围走一圈，此时路线最长：</p>\n<p><img src=\"/blog/images/pasted-0.png\" alt=\"upload successful\"></p>\n<p>当把两个悠悠球分别扔在房间的左上角和右上角时，Riley 移动的路线长度显然小于上一种情况：</p>\n<p><img src=\"/blog/images/pasted-1.png\" alt=\"upload successful\"></p>\n<p>上述结论成立。</p>\n<p>可以发现对于初始位置在房间外围的情况，会有其他的最优解，但此时将悠悠球扔在房间对角线的两个角落亦是一种最优解。</p>\n<p>所以，你可以输出以下两种答案中的任意一种：</p>\n<p>1、左上角和右下角，即 (1,1) 和 (n,m)；</p>\n<p>2、右上角和左下角，即 (1,m) 和 (n,1)。</p>\n<h3 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h3><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">int</span> t, n, m, i, j;</span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;t);</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(t--)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d%d%d%d&quot;</span>,&amp;n,&amp;m,&amp;i,&amp;j);</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d %d %d %d\\n&quot;</span>,<span class=\"number\">1</span>,<span class=\"number\">1</span>,n,m);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"I：斐波那契数列\"><a href=\"#I：斐波那契数列\" class=\"headerlink\" title=\"I：斐波那契数列\"></a>I：斐波那契数列</h1><blockquote>\n<h4 id=\"题目描述-8\"><a href=\"#题目描述-8\" class=\"headerlink\" title=\"题目描述\"></a>题目描述</h4><p>这是一道 “简单” 的求斐波那契数列题目。<br>Fn = Fn-1 + Fn-2<br>求出 Fn 的值，答案可能过大，需要将输出的答案对 1000000007 取余。</p>\n<h4 id=\"输入格式-8\"><a href=\"#输入格式-8\" class=\"headerlink\" title=\"输入格式\"></a>输入格式</h4><p>一行一个正整数 n</p>\n<h4 id=\"输出格式-8\"><a href=\"#输出格式-8\" class=\"headerlink\" title=\"输出格式\"></a>输出格式</h4><p>输出一行一个整数表示答案。</p>\n</blockquote>\n<p>相信C语言课都讲过递归求斐波那契数列或者循环求斐波那契数列，这道题目可以看到数据范围在2<sup>63</sup>,所以如果用普通的方法只能拿50分，需要另寻他法。<br>我们令$f(n)$,$f(n-1)$组成一个列向量，乘以一个$2\\times2$的矩阵可以得到$f(n+1)$,$f(n)$</p>\n<script type=\"math/tex; mode=display\">\n  \\begin{bmatrix}\n  a&b\\\\\n  c&d\n\\end{bmatrix}\n*\n\\begin{bmatrix}\n  f(n)\\\\f(n-1)\n\\end{bmatrix}\n=\n\\begin{bmatrix}\n  f(n+1)\\\\f(n)\n\\end{bmatrix}</script><p>又线性代数展开可以得到如下式子</p>\n<script type=\"math/tex; mode=display\">\n  \\begin{bmatrix}\n  a&b\\\\\n  c&d\n\\end{bmatrix}\n*\n\\begin{bmatrix}\n  f(n)\\\\f(n-1)\n\\end{bmatrix}\n=\n\\begin{bmatrix}\n  a*f(n) + b*f(n-1)\\\\c*f(n)+d*f(n-1)\n\\end{bmatrix}</script><p>并且$f(n+1)=f(n)+f(n-1)$,对应项相等，可以得到</p>\n<script type=\"math/tex; mode=display\">\n\\begin{bmatrix}\n  f(n+1)\\\\f(n)\n\\end{bmatrix}\n=\n\\begin{bmatrix}\n  a*f(n) + b*f(n-1)\\\\c*f(n)+d*f(n-1)\n\\end{bmatrix}</script><p>即$a=1$  ,  $b=1$  ,  $c=1$  ,  $d=0$<br>如此由矩阵的乘法可得，由$n$个矩阵乘法相乘，我们令矩阵</p>\n<script type=\"math/tex; mode=display\">\n  \\begin{bmatrix}\n  a&b\\\\\n  c&d\n\\end{bmatrix}\n= A</script><p>那么需要得到$f(n)$就可以列出如下式子。</p>\n<script type=\"math/tex; mode=display\">\n\\begin{bmatrix}\n  1&1\\\\\n  1&0\n\\end{bmatrix}^{n-1}\n* \n\\begin{bmatrix}\n  f(1)\\\\f(0)\n\\end{bmatrix}\n=\n\\begin{bmatrix}\n  f(n)\\\\f(n-1)\n\\end{bmatrix}</script><p>然后使用矩阵快速幂即可快速算出答案。<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;stdio.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;cstring&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> ll long long</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> MOD 1000000007</span></span><br><span class=\"line\">ll n;</span><br><span class=\"line\">ll base[<span class=\"number\">2</span>][<span class=\"number\">2</span>] = &#123;&#123;<span class=\"number\">0</span>,<span class=\"number\">1</span>&#125;,&#123;<span class=\"number\">1</span>,<span class=\"number\">1</span>&#125;&#125;;</span><br><span class=\"line\">ll f[<span class=\"number\">2</span>] = &#123;<span class=\"number\">0</span>,<span class=\"number\">1</span>&#125;;</span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">multi</span><span class=\"params\">(ll a[<span class=\"number\">2</span>],ll b[<span class=\"number\">2</span>][<span class=\"number\">2</span>])</span>&#123;</span><br><span class=\"line\">    ll ans[<span class=\"number\">2</span>] = &#123;<span class=\"number\">0</span>,<span class=\"number\">0</span>&#125;;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">2</span>; i++)</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; <span class=\"number\">2</span>; j++)</span><br><span class=\"line\">            ans[j] = (ans[j] + a[i] * b[i][j]) % MOD;</span><br><span class=\"line\">    <span class=\"built_in\">memcpy</span>(a,ans,<span class=\"keyword\">sizeof</span>(ans));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">self</span><span class=\"params\">(ll a[<span class=\"number\">2</span>][<span class=\"number\">2</span>])</span>&#123;</span><br><span class=\"line\">    ll ans[<span class=\"number\">2</span>][<span class=\"number\">2</span>];</span><br><span class=\"line\">    <span class=\"built_in\">memset</span>(ans,<span class=\"number\">0</span>,<span class=\"keyword\">sizeof</span>(ans));</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>;i &lt; <span class=\"number\">2</span>;i++)</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> j = <span class=\"number\">0</span>;j &lt; <span class=\"number\">2</span>;j++)</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"type\">int</span> k = <span class=\"number\">0</span>;k &lt; <span class=\"number\">2</span>;k++)</span><br><span class=\"line\">                ans[i][j] = (ans[i][j] + a[i][k] * a[k][j]) % MOD;</span><br><span class=\"line\">    <span class=\"built_in\">memcpy</span>(a,ans,<span class=\"keyword\">sizeof</span>(ans));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;n);</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(n)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(n &amp; <span class=\"number\">1</span>)</span><br><span class=\"line\">            multi(f,base);</span><br><span class=\"line\">        self(base);</span><br><span class=\"line\">        n &gt;&gt;= <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d&quot;</span>,f[<span class=\"number\">0</span>]);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n"},{"title":"Test","author":"John Doe","date":"2022-06-06T10:07:46.000Z","_content":"\n# Test\n## Test\n### Test\n#### Test\n##### Test\n###### Test","source":"_drafts/Test-1.md","raw":"title: Test\nauthor: John Doe\ndate: 2022-06-06 10:07:46\ntags:\n---\n\n# Test\n## Test\n### Test\n#### Test\n##### Test\n###### Test","slug":"Test-1","published":0,"updated":"2022-06-06T10:08:26.985Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl4339eh300000stfew90edki","content":"<h1 id=\"Test\"><a href=\"#Test\" class=\"headerlink\" title=\"Test\"></a>Test</h1><h2 id=\"Test-1\"><a href=\"#Test-1\" class=\"headerlink\" title=\"Test\"></a>Test</h2><h3 id=\"Test-2\"><a href=\"#Test-2\" class=\"headerlink\" title=\"Test\"></a>Test</h3><h4 id=\"Test-3\"><a href=\"#Test-3\" class=\"headerlink\" title=\"Test\"></a>Test</h4><h5 id=\"Test-4\"><a href=\"#Test-4\" class=\"headerlink\" title=\"Test\"></a>Test</h5><h6 id=\"Test-5\"><a href=\"#Test-5\" class=\"headerlink\" title=\"Test\"></a>Test</h6>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Test\"><a href=\"#Test\" class=\"headerlink\" title=\"Test\"></a>Test</h1><h2 id=\"Test-1\"><a href=\"#Test-1\" class=\"headerlink\" title=\"Test\"></a>Test</h2><h3 id=\"Test-2\"><a href=\"#Test-2\" class=\"headerlink\" title=\"Test\"></a>Test</h3><h4 id=\"Test-3\"><a href=\"#Test-3\" class=\"headerlink\" title=\"Test\"></a>Test</h4><h5 id=\"Test-4\"><a href=\"#Test-4\" class=\"headerlink\" title=\"Test\"></a>Test</h5><h6 id=\"Test-5\"><a href=\"#Test-5\" class=\"headerlink\" title=\"Test\"></a>Test</h6>"},{"title":"湖南工程学院2021-2022年度算法设计与编程挑战赛题解","author":"tyy","mathjax":true,"date":"2022-06-08T12:44:00.000Z","_content":"# A:计算平均绩点 \n##### [题目链接](/problem.php?id=4353)\n\n### 思路分析\n由题意得，要计算平均学分绩点只需要计算总的课程学分绩点和总课程学分即可，我们用数组$a$,$b$来存储有效数据，$a[i]$记录第$i$门课程的学分，$b[i]$记录第i门课程的成绩。$score$存学分总数，$ans$存学分绩点。最后输出$ans$和$score$的比值。注意在多组数据输入中，重复使用的$score$和$ans$要记得在循环中置零。\n\n#### c代码\n```c\n#include\"stdio.h\"\n\nint main() {\n    int t,n;\n    double a[110],b[110];\n    scanf(\"%d\",&t);\n\n    while(t--) {\n        double score = 0;\n        scanf(\"%d\",&n);\n        for(int i=0; i<n; i++) {\n            scanf(\"%lf\", &a[i]);\n            score += a[i];\n        }\n        for(int i=0; i<n; i++)\n            scanf(\"%lf\",&b[i]);\n        double ans = 0;\n        for(int i=0; i<n; i++)\n            if(b[i] >= 60)\n                ans += (b[i] - 50) / 10 * a[i];\n\n        printf(\"%.2lf\\n\",ans/score);\n    }\n    return 0;\n\n}\n```\n# B：矩阵对换\n##### [题目链接](/problem.php?id=4354)\n\n#### 思路分析\n![upload successful](/blog/images/pasted-3.png)\n>如上图在对称线右上方的红色元素满足：$i<=j-k$，其中$i$为行号$j$为列号$k$为对称线向上平移的单位长度。\n>将满足上式的元素$a[i][j]$与对应元素$a[j][i]$交换即可。\n\n#### c/c++代码\n\n```c\n#include <stdio.h>\n\nint a[110][110], n, k;\n\nvoid swap(int* a, int* b)\n{\n    int t = *a;\n    *a = *b;\n    *b = t;\n}\n\nint main ()\n{\n    scanf(\"%d%d\", &n, &k);\n    for (int i = 0; i < n; i ++ )\n        for (int j = 0; j < n; j ++ )\n            scanf(\"%d\", &a[i][j]);\n    for (int i = 0; i < n; i ++ )\n        for (int j = 0; j < n; j ++ )\n            if (i <= j - k)\n                swap(&a[i][j], &a[j][i]);\n    for (int i = 0; i < n; i ++ ) {\n        for (int j = 0; j < n; j ++ )\n            printf(\"%d \", a[i][j]);\n        puts(\"\");\n    }\n\n    return 0;\n}\n```\n\n# C:二进制小发现\n##### [题目链接](/problem.php?id=4356)\n\n### 思路分析\n这道题目是一个二进制题.<br>\n对于偶数与奇数的二进制观察,我们可以发现偶数的二进制末尾都是 0,奇数的二进制末尾都是 1.<br>\n二进制中除以 2 的操作可以看为右移一位,在字符串中就是去除最后一位. 而加 1 的操作就是直接在二进制末尾加上一,在判断一下要不要进位,逢二进一.\n#### c/c++代码\n```c++\n#include<bits/stdc++.h>\nusing namespace std;\nint main()\n{\n    string a;\n    cin >> a;\n    long long ans = 0,r = a.size();\n    while(r != 1){\n        ans ++;\n        if(a[r - 1] == '0'){\n            r --;\n        }else{\n            for(int i = r - 1;i >= 0;i --){\n                if(a[i] - '0' + 1 > 1){\n                    a[i] = '0';\n                }else{\n                    a[i] = '1';\n                    break;\n                }\n            }\n        }\n    }\n    if(a[0] == '0'){ // 如果高位为 0 则逢二进一时让其等于 0 ，这样的话还需要进行除以二的操作\n        cout << ans + 1 << endl;\n    }else{\n        cout << ans << endl;\n    }\n}\n```\n\n# D：三重\n##### [题目链接](/problem.php?id=4348)\n\n### 思路分析\n这个题目意思很简单，就是输出所有出现次数超过3次的数，我们利用一个table数组存储每个数字出现的次数，输入结束后遍历一遍table数组进行判断输出即可。\n\n#### c代码 \n```c\n#include\"stdio.h\"\n\nint main(){\n    int t,n;\n    int x,table[200010];\n    scanf(\"%d\",&t);\n\n    while(t--){\n        int flag = 1;\n        scanf(\"%d\",&n);\n        for(int i=0; i<n; i++) {\n            scanf(\"%d\", &x);\n            table[x]++;\n        }\n        for(int i=0; i<=n; i++)\n            if(table[i] >= 3) {\n                printf(\"%d \",i);\n                flag = 0;\n            }\n        if(flag)\n            printf(\"-1\\n\");\n        else\n            puts(\"\");\n\n        for(int i=0; i<=n; i++)\n            table[i] = 0;\n    }\n    return 0;\n\n}\n```\n# E：找出01数\n##### [题目链接](/problem.php?id=4355)\n\n### 解法一：二进制枚举\n\n#### 思路分析\n>分析题目可以知道每一位要么是$0$要么是$1$，$n$最大是 $10^9$，所以最多有$10$位，而实际上在填的时候只有$9$位数字，\n>$n=10^9$最高位是$1$其余位全为$0$是固定的，所以最多的方案数目为$2^9-1+1=512$ 种，\n>其中需要加上$1000000000$这个数字和减去$0$这个数字，所以总共的状态数目是非常少的，\n>所以我们可以从$1$枚举到$2^{10}-1$，然后计算每一个二进制状态对应的十进制数字$x$，判断是否小于等于$n$即可，\n>如果小于等于$n$说明符合要求。\n\n#### c/c++代码\n\n```c\n#include <stdio.h>\n\nint main()\n{\n    int n;\n    scanf(\"%d\", &n);\n    int res = 0;\n    for(int i = 1; i < (1 << 10); i ++ ) {\n        int x = 0;\n        for(int j = 0; j < 10; j ++ ) {\n            x = x * 10 + (i >> j & 1);\n        }\n        if(x <= n){\n            res ++;\n        }\n    }\n    printf(\"%d\", res);\n    return 0;\n}\n```\n#### python代码\n\n```python\nclass Solution:\n    def process(self):\n        n = int(input())\n        res = 0\n        # 枚举的相当于是每一位是0或者1对应的所有二进制状态, 然后将其转为十进制数字判断是否小于等于n即可\n        for i in range(1, 1 << 10):\n            x = 0\n            for j in range(10):\n                # x为当前的二进制状态对应的十进制数字\n                x = x * 10 + (i >> j & 1)\n            # 判断当前对应的十进制数字是否小于等于n\n            if x <= n: res += 1\n        return res\n \nif __name__ == '__main__':\n    print(Solution().process())\n```\n#### java代码 \n\n```javascript\nimport java.util.Scanner;\n\nclass Main {\n    int solve() {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt(), res = 0;\n\n        for (int i = 1; i < (1 << 10); i ++ ) {\n            int x = 0;\n            for (int j = 0; j < 10; j ++ ) {\n                x = x * 10 + (i >> j & 1);\n            }\n            if(x <= n){\n                res ++;\n            }\n        }\n        return res;\n    }\n\n    public static void main(String[] args) {\n        Main main = new Main();\n        System.out.println(main.solve());\n    }\n}\n```\n### 解法二：DFS\n#### 思路分析\n\n> 代码很简洁看了就懂了。\n\n#### c/c++代码\n\n```c++\n#include <iostream>\nusing namespace std;\n\nint res, n;\n\nvoid dfs(int u) {\n    if (u > n) return;\n    dfs(u * 10);\n    dfs(u * 10 + 1);\n    res ++;\n}\n\nint main ()\n{\n    cin >> n;\n    dfs(1);\n    cout << res << endl;\n    return 0;\n}\n```\n\n# F：元素加一\n##### [题目链接](/problem.php?id=4349)\n\n### 思路分析\n>这个题目经分析可得，为了让所有的元素彼此相等，我们只能选择元素加一，所以最后变成的数一定是最大的那个数，因为它不能变小，只能通过让其他的小于它的数变大和它相等。最多进行的操作就是从最小的数变成最大的数，在 * min < x < max *\n的范围之间的数 x 小于 max 则跟着加一，等于 max 则不进行操作。所以最终的最小\n操作数应该是 * max - min * 的值.\n\n#### c代码\n```c\n#include\"stdio.h\"\n\nint main(){\n    int a;\n    int t,n;\n    scanf(\"%d\",&t);\n\n    while(t--){\n        int max = 0, min = 1e9;\n        scanf(\"%d\",&n);\n        for(int i=0; i<n; i++){\n            scanf(\"%d\",&a);\n            if(a > max)\n                max = a;\n            if(a < min)\n                min = a;\n        }\n        printf(\"%d\\n\",max - min);\n    }\n\n    return 0;\n}\n\n```\n# G：词排列\n##### [题目链接](/problem.php?id=4346)\n\n### 思路分析\n>这道题目就是一道分析题\n>依题目的词 1 和词 25 可得如果第一个字符小于第二个字符时它的索引就是\n\n>$$(a[0] - a) * 25 + (a[1] - a) + 1$$\n\n>再根据词 649 和词 650 以及词 27 可以发现如果第二个字符小于第一个字符时它的索引就是\n>$$(a[0] - a) * 26 + (a[1] - a[0])$$\n\n#### c/c++代码\n\n```c++\n#include<bits/stdc++.h>\nusing namespace std;\nint main()\n{\n    int t;\n    cin >> t;\n    while(t --){\n        string a;\n        cin >> a;\n        int sum = 0;\n        if(a[1] - 'a' < a[0] - 'a' ){\n            sum += (a[0] - 'a') * 25 + (a[1] - 'a') + 1;\n        }else {\n            sum += (a[0] - 'a') * 26 + (a[1] - a[0]);\n        }\n        cout << sum << endl;\n    }\n}\n```\n# H: 奇数/偶数增量\n##### [题目链接](/problem.php?id=4352)\n\n### 思路分析\n通过题目我们可以知道,我们只能对奇索引单独操作或者对偶索引单独操作,这样的话我们就得到一个信息:<br>\n* 如果奇索引的元素中存在一个和其他奇索引的奇偶性不同,则这个数组里的元素不能全部变为偶数或奇数<br>\n* 同理，如果偶索引的元素中存在一个和其他偶索引的奇偶性不同,则为 \"NO\"<br>\n\n例:有一个长度为四的数组 a ,a[0] = 1,a[1] = 1,a[2] = 2,a[3] = 2,因为 a[1] 与 a[3]的奇偶性不同,这个数组不能全部变为偶数或奇数；同理 a[0] 与 a[2] 奇偶性也不同\n#### c/c++代码\n```c++\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N = 51;\nint a[N],even[N],odd[N];\nint main()\n{\n    int t;\n    cin >> t;\n    while(t --){\n        int n;\n        cin >> n;\n        int p = 0,p1 = 0;\n        for(int i = 1;i <= n;i ++){\n            cin >> a[i];\n            if(i % 2 == 0){\n                even[p] = a[i];\n                p ++;\n            }else{\n                odd[p1] = a[i];\n                p1 ++;\n            }\n        }\n        int sum = 0,sum1 = 0;\n        for(int i = 0;i < p;i ++){\n            if(even[i] % 2 == 0){\n                sum ++;\n            }\n        }\n        for(int i = 0;i < p1;i ++){\n            if(odd[i] % 2 == 0){\n                sum1 ++;\n            }\n        }\n        if((sum == p || sum == 0) && (sum1 == p1 || sum1 == 0)){\n            cout << \"YES\" << endl;\n        }else{\n            cout << \"NO\" << endl;\n        }\n    }\n    return 0;\n}\n```\n\n# I：奖学金评定\n##### [题目链接](/problem.php?id=4343)\n\n### 思路分析\n>这个题目只需要根据输入的n来进入分支结构即可。\n>唯一一点要注意边界是大于等于而不是大于。\n\n#### c代码\n```c\n#include\"stdio.h\"\n\nint main(){\n    int t;\n    double n;\n    scanf(\"%d\",&t);\n\n    while(t--){\n        scanf(\"%lf\",&n);\n        if(n >= 4.0)\n            puts(\"special scholarship\");\n        else if(n >= 3.5)\n            puts(\"first-class scholarship\");\n        else if(n >= 3.0)\n            puts(\"second-class scholarship\");\n        else if(n >= 2.5)\n            puts(\"third-class scholarship\");\n        else\n            puts(\"none\");\n        }\n\n    return 0;\n}\n\n```\n# J：数字转换\n##### [题目链接](/problem.php?id=4344)\n\n### 思路分析\n这是一个思维题，当你看到题目输出格式上加粗的字时，\n就应该迅速联想到一些东西。那就是给你们的提示。\n题目要求 两个数 a 和 b 使得输入的 x 和 y 满足等式\nx * b^a = y 。因为符合条件的 a b 取值情况可能有\n很多种，所以我们可以取一个特殊值，就是让 a 等于 1。\n然后只需要判断 y 是否能除尽 x 就行。能除尽就输出 1\n和 y/x，不能除尽就输出 0 0。\n\n#### c代码\n```c\n#include\"stdio.h\"\n\nint main(){\n    int x,y,a,b;\n    int t;\n    scanf(\"%d\",&t);\n    while(t--) {\n        scanf(\"%d %d\",&x,&y);\n        if(y % x == 0)\n            printf(\"%d %d\\n\",1,y/x);\n        else\n            printf(\"0 0\\n\");\n    }\n\n    return 0;\n}\n\n\n```\n# K: 无限替换\n##### [题目链接](/problem.php?id=4347)\n\n### 思路分析\n\n对于题目的分析我们可以得到三点信息<br>\n* t 串中含有 a 字符时而且 t 串长度大于一,替换的时候一直循环下去得到的答案是无限大的.\n* t 串中含有 a 字符时而且 t 串长度等于一,替换的时候只有一种结果也就是其本身.\n* t 串中不含 a 字符,替换之后得到不同的串的数量只能是 2 的 t.size() 次方.\n\n#### c/c++代码\n```c++\n#include<bits/stdc++.h>\nusing namespace std;\nint main()\n{\n    int t;\n    cin >> t;\n    while(t --){\n        string a,b;\n        cin >> a >> b;\n        bool flag = false;\n        for(int i = 0;i < b.size();i ++){\n            if(b[i] == 'a'){\n                flag = true;\n            }\n        }\n        if(flag && b.size() > 1){\n            cout << \"-1\" << endl;\n        }else if(flag && b.size() == 1){\n            cout << \"1\" << endl;\n        }else if(!flag){\n            cout << (long long)pow(2,a.size()) << endl;\n        }\n    }\n}\n```","source":"_posts/solution.md","raw":"title: 湖南工程学院2021-2022年度算法设计与编程挑战赛题解\nauthor: tyy\nmathjax: true\ntags: []\ncategories: []\ndate: 2022-06-08 12:44:00\n---\n# A:计算平均绩点 \n##### [题目链接](/problem.php?id=4353)\n\n### 思路分析\n由题意得，要计算平均学分绩点只需要计算总的课程学分绩点和总课程学分即可，我们用数组$a$,$b$来存储有效数据，$a[i]$记录第$i$门课程的学分，$b[i]$记录第i门课程的成绩。$score$存学分总数，$ans$存学分绩点。最后输出$ans$和$score$的比值。注意在多组数据输入中，重复使用的$score$和$ans$要记得在循环中置零。\n\n#### c代码\n```c\n#include\"stdio.h\"\n\nint main() {\n    int t,n;\n    double a[110],b[110];\n    scanf(\"%d\",&t);\n\n    while(t--) {\n        double score = 0;\n        scanf(\"%d\",&n);\n        for(int i=0; i<n; i++) {\n            scanf(\"%lf\", &a[i]);\n            score += a[i];\n        }\n        for(int i=0; i<n; i++)\n            scanf(\"%lf\",&b[i]);\n        double ans = 0;\n        for(int i=0; i<n; i++)\n            if(b[i] >= 60)\n                ans += (b[i] - 50) / 10 * a[i];\n\n        printf(\"%.2lf\\n\",ans/score);\n    }\n    return 0;\n\n}\n```\n# B：矩阵对换\n##### [题目链接](/problem.php?id=4354)\n\n#### 思路分析\n![upload successful](/blog/images/pasted-3.png)\n>如上图在对称线右上方的红色元素满足：$i<=j-k$，其中$i$为行号$j$为列号$k$为对称线向上平移的单位长度。\n>将满足上式的元素$a[i][j]$与对应元素$a[j][i]$交换即可。\n\n#### c/c++代码\n\n```c\n#include <stdio.h>\n\nint a[110][110], n, k;\n\nvoid swap(int* a, int* b)\n{\n    int t = *a;\n    *a = *b;\n    *b = t;\n}\n\nint main ()\n{\n    scanf(\"%d%d\", &n, &k);\n    for (int i = 0; i < n; i ++ )\n        for (int j = 0; j < n; j ++ )\n            scanf(\"%d\", &a[i][j]);\n    for (int i = 0; i < n; i ++ )\n        for (int j = 0; j < n; j ++ )\n            if (i <= j - k)\n                swap(&a[i][j], &a[j][i]);\n    for (int i = 0; i < n; i ++ ) {\n        for (int j = 0; j < n; j ++ )\n            printf(\"%d \", a[i][j]);\n        puts(\"\");\n    }\n\n    return 0;\n}\n```\n\n# C:二进制小发现\n##### [题目链接](/problem.php?id=4356)\n\n### 思路分析\n这道题目是一个二进制题.<br>\n对于偶数与奇数的二进制观察,我们可以发现偶数的二进制末尾都是 0,奇数的二进制末尾都是 1.<br>\n二进制中除以 2 的操作可以看为右移一位,在字符串中就是去除最后一位. 而加 1 的操作就是直接在二进制末尾加上一,在判断一下要不要进位,逢二进一.\n#### c/c++代码\n```c++\n#include<bits/stdc++.h>\nusing namespace std;\nint main()\n{\n    string a;\n    cin >> a;\n    long long ans = 0,r = a.size();\n    while(r != 1){\n        ans ++;\n        if(a[r - 1] == '0'){\n            r --;\n        }else{\n            for(int i = r - 1;i >= 0;i --){\n                if(a[i] - '0' + 1 > 1){\n                    a[i] = '0';\n                }else{\n                    a[i] = '1';\n                    break;\n                }\n            }\n        }\n    }\n    if(a[0] == '0'){ // 如果高位为 0 则逢二进一时让其等于 0 ，这样的话还需要进行除以二的操作\n        cout << ans + 1 << endl;\n    }else{\n        cout << ans << endl;\n    }\n}\n```\n\n# D：三重\n##### [题目链接](/problem.php?id=4348)\n\n### 思路分析\n这个题目意思很简单，就是输出所有出现次数超过3次的数，我们利用一个table数组存储每个数字出现的次数，输入结束后遍历一遍table数组进行判断输出即可。\n\n#### c代码 \n```c\n#include\"stdio.h\"\n\nint main(){\n    int t,n;\n    int x,table[200010];\n    scanf(\"%d\",&t);\n\n    while(t--){\n        int flag = 1;\n        scanf(\"%d\",&n);\n        for(int i=0; i<n; i++) {\n            scanf(\"%d\", &x);\n            table[x]++;\n        }\n        for(int i=0; i<=n; i++)\n            if(table[i] >= 3) {\n                printf(\"%d \",i);\n                flag = 0;\n            }\n        if(flag)\n            printf(\"-1\\n\");\n        else\n            puts(\"\");\n\n        for(int i=0; i<=n; i++)\n            table[i] = 0;\n    }\n    return 0;\n\n}\n```\n# E：找出01数\n##### [题目链接](/problem.php?id=4355)\n\n### 解法一：二进制枚举\n\n#### 思路分析\n>分析题目可以知道每一位要么是$0$要么是$1$，$n$最大是 $10^9$，所以最多有$10$位，而实际上在填的时候只有$9$位数字，\n>$n=10^9$最高位是$1$其余位全为$0$是固定的，所以最多的方案数目为$2^9-1+1=512$ 种，\n>其中需要加上$1000000000$这个数字和减去$0$这个数字，所以总共的状态数目是非常少的，\n>所以我们可以从$1$枚举到$2^{10}-1$，然后计算每一个二进制状态对应的十进制数字$x$，判断是否小于等于$n$即可，\n>如果小于等于$n$说明符合要求。\n\n#### c/c++代码\n\n```c\n#include <stdio.h>\n\nint main()\n{\n    int n;\n    scanf(\"%d\", &n);\n    int res = 0;\n    for(int i = 1; i < (1 << 10); i ++ ) {\n        int x = 0;\n        for(int j = 0; j < 10; j ++ ) {\n            x = x * 10 + (i >> j & 1);\n        }\n        if(x <= n){\n            res ++;\n        }\n    }\n    printf(\"%d\", res);\n    return 0;\n}\n```\n#### python代码\n\n```python\nclass Solution:\n    def process(self):\n        n = int(input())\n        res = 0\n        # 枚举的相当于是每一位是0或者1对应的所有二进制状态, 然后将其转为十进制数字判断是否小于等于n即可\n        for i in range(1, 1 << 10):\n            x = 0\n            for j in range(10):\n                # x为当前的二进制状态对应的十进制数字\n                x = x * 10 + (i >> j & 1)\n            # 判断当前对应的十进制数字是否小于等于n\n            if x <= n: res += 1\n        return res\n \nif __name__ == '__main__':\n    print(Solution().process())\n```\n#### java代码 \n\n```javascript\nimport java.util.Scanner;\n\nclass Main {\n    int solve() {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt(), res = 0;\n\n        for (int i = 1; i < (1 << 10); i ++ ) {\n            int x = 0;\n            for (int j = 0; j < 10; j ++ ) {\n                x = x * 10 + (i >> j & 1);\n            }\n            if(x <= n){\n                res ++;\n            }\n        }\n        return res;\n    }\n\n    public static void main(String[] args) {\n        Main main = new Main();\n        System.out.println(main.solve());\n    }\n}\n```\n### 解法二：DFS\n#### 思路分析\n\n> 代码很简洁看了就懂了。\n\n#### c/c++代码\n\n```c++\n#include <iostream>\nusing namespace std;\n\nint res, n;\n\nvoid dfs(int u) {\n    if (u > n) return;\n    dfs(u * 10);\n    dfs(u * 10 + 1);\n    res ++;\n}\n\nint main ()\n{\n    cin >> n;\n    dfs(1);\n    cout << res << endl;\n    return 0;\n}\n```\n\n# F：元素加一\n##### [题目链接](/problem.php?id=4349)\n\n### 思路分析\n>这个题目经分析可得，为了让所有的元素彼此相等，我们只能选择元素加一，所以最后变成的数一定是最大的那个数，因为它不能变小，只能通过让其他的小于它的数变大和它相等。最多进行的操作就是从最小的数变成最大的数，在 * min < x < max *\n的范围之间的数 x 小于 max 则跟着加一，等于 max 则不进行操作。所以最终的最小\n操作数应该是 * max - min * 的值.\n\n#### c代码\n```c\n#include\"stdio.h\"\n\nint main(){\n    int a;\n    int t,n;\n    scanf(\"%d\",&t);\n\n    while(t--){\n        int max = 0, min = 1e9;\n        scanf(\"%d\",&n);\n        for(int i=0; i<n; i++){\n            scanf(\"%d\",&a);\n            if(a > max)\n                max = a;\n            if(a < min)\n                min = a;\n        }\n        printf(\"%d\\n\",max - min);\n    }\n\n    return 0;\n}\n\n```\n# G：词排列\n##### [题目链接](/problem.php?id=4346)\n\n### 思路分析\n>这道题目就是一道分析题\n>依题目的词 1 和词 25 可得如果第一个字符小于第二个字符时它的索引就是\n\n>$$(a[0] - a) * 25 + (a[1] - a) + 1$$\n\n>再根据词 649 和词 650 以及词 27 可以发现如果第二个字符小于第一个字符时它的索引就是\n>$$(a[0] - a) * 26 + (a[1] - a[0])$$\n\n#### c/c++代码\n\n```c++\n#include<bits/stdc++.h>\nusing namespace std;\nint main()\n{\n    int t;\n    cin >> t;\n    while(t --){\n        string a;\n        cin >> a;\n        int sum = 0;\n        if(a[1] - 'a' < a[0] - 'a' ){\n            sum += (a[0] - 'a') * 25 + (a[1] - 'a') + 1;\n        }else {\n            sum += (a[0] - 'a') * 26 + (a[1] - a[0]);\n        }\n        cout << sum << endl;\n    }\n}\n```\n# H: 奇数/偶数增量\n##### [题目链接](/problem.php?id=4352)\n\n### 思路分析\n通过题目我们可以知道,我们只能对奇索引单独操作或者对偶索引单独操作,这样的话我们就得到一个信息:<br>\n* 如果奇索引的元素中存在一个和其他奇索引的奇偶性不同,则这个数组里的元素不能全部变为偶数或奇数<br>\n* 同理，如果偶索引的元素中存在一个和其他偶索引的奇偶性不同,则为 \"NO\"<br>\n\n例:有一个长度为四的数组 a ,a[0] = 1,a[1] = 1,a[2] = 2,a[3] = 2,因为 a[1] 与 a[3]的奇偶性不同,这个数组不能全部变为偶数或奇数；同理 a[0] 与 a[2] 奇偶性也不同\n#### c/c++代码\n```c++\n#include<bits/stdc++.h>\nusing namespace std;\nconst int N = 51;\nint a[N],even[N],odd[N];\nint main()\n{\n    int t;\n    cin >> t;\n    while(t --){\n        int n;\n        cin >> n;\n        int p = 0,p1 = 0;\n        for(int i = 1;i <= n;i ++){\n            cin >> a[i];\n            if(i % 2 == 0){\n                even[p] = a[i];\n                p ++;\n            }else{\n                odd[p1] = a[i];\n                p1 ++;\n            }\n        }\n        int sum = 0,sum1 = 0;\n        for(int i = 0;i < p;i ++){\n            if(even[i] % 2 == 0){\n                sum ++;\n            }\n        }\n        for(int i = 0;i < p1;i ++){\n            if(odd[i] % 2 == 0){\n                sum1 ++;\n            }\n        }\n        if((sum == p || sum == 0) && (sum1 == p1 || sum1 == 0)){\n            cout << \"YES\" << endl;\n        }else{\n            cout << \"NO\" << endl;\n        }\n    }\n    return 0;\n}\n```\n\n# I：奖学金评定\n##### [题目链接](/problem.php?id=4343)\n\n### 思路分析\n>这个题目只需要根据输入的n来进入分支结构即可。\n>唯一一点要注意边界是大于等于而不是大于。\n\n#### c代码\n```c\n#include\"stdio.h\"\n\nint main(){\n    int t;\n    double n;\n    scanf(\"%d\",&t);\n\n    while(t--){\n        scanf(\"%lf\",&n);\n        if(n >= 4.0)\n            puts(\"special scholarship\");\n        else if(n >= 3.5)\n            puts(\"first-class scholarship\");\n        else if(n >= 3.0)\n            puts(\"second-class scholarship\");\n        else if(n >= 2.5)\n            puts(\"third-class scholarship\");\n        else\n            puts(\"none\");\n        }\n\n    return 0;\n}\n\n```\n# J：数字转换\n##### [题目链接](/problem.php?id=4344)\n\n### 思路分析\n这是一个思维题，当你看到题目输出格式上加粗的字时，\n就应该迅速联想到一些东西。那就是给你们的提示。\n题目要求 两个数 a 和 b 使得输入的 x 和 y 满足等式\nx * b^a = y 。因为符合条件的 a b 取值情况可能有\n很多种，所以我们可以取一个特殊值，就是让 a 等于 1。\n然后只需要判断 y 是否能除尽 x 就行。能除尽就输出 1\n和 y/x，不能除尽就输出 0 0。\n\n#### c代码\n```c\n#include\"stdio.h\"\n\nint main(){\n    int x,y,a,b;\n    int t;\n    scanf(\"%d\",&t);\n    while(t--) {\n        scanf(\"%d %d\",&x,&y);\n        if(y % x == 0)\n            printf(\"%d %d\\n\",1,y/x);\n        else\n            printf(\"0 0\\n\");\n    }\n\n    return 0;\n}\n\n\n```\n# K: 无限替换\n##### [题目链接](/problem.php?id=4347)\n\n### 思路分析\n\n对于题目的分析我们可以得到三点信息<br>\n* t 串中含有 a 字符时而且 t 串长度大于一,替换的时候一直循环下去得到的答案是无限大的.\n* t 串中含有 a 字符时而且 t 串长度等于一,替换的时候只有一种结果也就是其本身.\n* t 串中不含 a 字符,替换之后得到不同的串的数量只能是 2 的 t.size() 次方.\n\n#### c/c++代码\n```c++\n#include<bits/stdc++.h>\nusing namespace std;\nint main()\n{\n    int t;\n    cin >> t;\n    while(t --){\n        string a,b;\n        cin >> a >> b;\n        bool flag = false;\n        for(int i = 0;i < b.size();i ++){\n            if(b[i] == 'a'){\n                flag = true;\n            }\n        }\n        if(flag && b.size() > 1){\n            cout << \"-1\" << endl;\n        }else if(flag && b.size() == 1){\n            cout << \"1\" << endl;\n        }else if(!flag){\n            cout << (long long)pow(2,a.size()) << endl;\n        }\n    }\n}\n```","slug":"solution","published":1,"updated":"2022-06-10T03:01:37.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl48dmwlt000001k6a6ztgz62","content":"<h1 id=\"A-计算平均绩点\"><a href=\"#A-计算平均绩点\" class=\"headerlink\" title=\"A:计算平均绩点\"></a>A:计算平均绩点</h1><h5 id=\"题目链接\"><a href=\"#题目链接\" class=\"headerlink\" title=\"题目链接\"></a><a href=\"/problem.php?id=4353\">题目链接</a></h5><h3 id=\"思路分析\"><a href=\"#思路分析\" class=\"headerlink\" title=\"思路分析\"></a>思路分析</h3><p>由题意得，要计算平均学分绩点只需要计算总的课程学分绩点和总课程学分即可，我们用数组$a$,$b$来存储有效数据，$a[i]$记录第$i$门课程的学分，$b[i]$记录第i门课程的成绩。$score$存学分总数，$ans$存学分绩点。最后输出$ans$和$score$的比值。注意在多组数据输入中，重复使用的$score$和$ans$要记得在循环中置零。</p>\n<h4 id=\"c代码\"><a href=\"#c代码\" class=\"headerlink\" title=\"c代码\"></a>c代码</h4><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&quot;stdio.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> t,n;</span><br><span class=\"line\">    <span class=\"type\">double</span> a[<span class=\"number\">110</span>],b[<span class=\"number\">110</span>];</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;t);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span>(t--) &#123;</span><br><span class=\"line\">        <span class=\"type\">double</span> score = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;n);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>; i&lt;n; i++) &#123;</span><br><span class=\"line\">            <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%lf&quot;</span>, &amp;a[i]);</span><br><span class=\"line\">            score += a[i];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>; i&lt;n; i++)</span><br><span class=\"line\">            <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%lf&quot;</span>,&amp;b[i]);</span><br><span class=\"line\">        <span class=\"type\">double</span> ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>; i&lt;n; i++)</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(b[i] &gt;= <span class=\"number\">60</span>)</span><br><span class=\"line\">                ans += (b[i] - <span class=\"number\">50</span>) / <span class=\"number\">10</span> * a[i];</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%.2lf\\n&quot;</span>,ans/score);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"B：矩阵对换\"><a href=\"#B：矩阵对换\" class=\"headerlink\" title=\"B：矩阵对换\"></a>B：矩阵对换</h1><h5 id=\"题目链接-1\"><a href=\"#题目链接-1\" class=\"headerlink\" title=\"题目链接\"></a><a href=\"/problem.php?id=4354\">题目链接</a></h5><h4 id=\"思路分析-1\"><a href=\"#思路分析-1\" class=\"headerlink\" title=\"思路分析\"></a>思路分析</h4><p><img src=\"/blog/images/pasted-3.png\" alt=\"upload successful\"></p>\n<blockquote>\n<p>如上图在对称线右上方的红色元素满足：$i&lt;=j-k$，其中$i$为行号$j$为列号$k$为对称线向上平移的单位长度。<br>将满足上式的元素$a[i][j]$与对应元素$a[j][i]$交换即可。</p>\n</blockquote>\n<h4 id=\"c-c-代码\"><a href=\"#c-c-代码\" class=\"headerlink\" title=\"c/c++代码\"></a>c/c++代码</h4><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> a[<span class=\"number\">110</span>][<span class=\"number\">110</span>], n, k;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">swap</span><span class=\"params\">(<span class=\"type\">int</span>* a, <span class=\"type\">int</span>* b)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> t = *a;</span><br><span class=\"line\">    *a = *b;</span><br><span class=\"line\">    *b = t;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span> <span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d%d&quot;</span>, &amp;n, &amp;k);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i ++ )</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; n; j ++ )</span><br><span class=\"line\">            <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>, &amp;a[i][j]);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i ++ )</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; n; j ++ )</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i &lt;= j - k)</span><br><span class=\"line\">                swap(&amp;a[i][j], &amp;a[j][i]);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i ++ ) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; n; j ++ )</span><br><span class=\"line\">            <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d &quot;</span>, a[i][j]);</span><br><span class=\"line\">        <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"C-二进制小发现\"><a href=\"#C-二进制小发现\" class=\"headerlink\" title=\"C:二进制小发现\"></a>C:二进制小发现</h1><h5 id=\"题目链接-2\"><a href=\"#题目链接-2\" class=\"headerlink\" title=\"题目链接\"></a><a href=\"/problem.php?id=4356\">题目链接</a></h5><h3 id=\"思路分析-2\"><a href=\"#思路分析-2\" class=\"headerlink\" title=\"思路分析\"></a>思路分析</h3><p>这道题目是一个二进制题.<br><br>对于偶数与奇数的二进制观察,我们可以发现偶数的二进制末尾都是 0,奇数的二进制末尾都是 1.<br><br>二进制中除以 2 的操作可以看为右移一位,在字符串中就是去除最后一位. 而加 1 的操作就是直接在二进制末尾加上一,在判断一下要不要进位,逢二进一.</p>\n<h4 id=\"c-c-代码-1\"><a href=\"#c-c-代码-1\" class=\"headerlink\" title=\"c/c++代码\"></a>c/c++代码</h4><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    string a;</span><br><span class=\"line\">    cin &gt;&gt; a;</span><br><span class=\"line\">    <span class=\"type\">long</span> <span class=\"type\">long</span> ans = <span class=\"number\">0</span>,r = a.<span class=\"built_in\">size</span>();</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(r != <span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">        ans ++;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(a[r - <span class=\"number\">1</span>] == <span class=\"string\">&#x27;0&#x27;</span>)&#123;</span><br><span class=\"line\">            r --;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = r - <span class=\"number\">1</span>;i &gt;= <span class=\"number\">0</span>;i --)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(a[i] - <span class=\"string\">&#x27;0&#x27;</span> + <span class=\"number\">1</span> &gt; <span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">                    a[i] = <span class=\"string\">&#x27;0&#x27;</span>;</span><br><span class=\"line\">                &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                    a[i] = <span class=\"string\">&#x27;1&#x27;</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(a[<span class=\"number\">0</span>] == <span class=\"string\">&#x27;0&#x27;</span>)&#123; <span class=\"comment\">// 如果高位为 0 则逢二进一时让其等于 0 ，这样的话还需要进行除以二的操作</span></span><br><span class=\"line\">        cout &lt;&lt; ans + <span class=\"number\">1</span> &lt;&lt; endl;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"D：三重\"><a href=\"#D：三重\" class=\"headerlink\" title=\"D：三重\"></a>D：三重</h1><h5 id=\"题目链接-3\"><a href=\"#题目链接-3\" class=\"headerlink\" title=\"题目链接\"></a><a href=\"/problem.php?id=4348\">题目链接</a></h5><h3 id=\"思路分析-3\"><a href=\"#思路分析-3\" class=\"headerlink\" title=\"思路分析\"></a>思路分析</h3><p>这个题目意思很简单，就是输出所有出现次数超过3次的数，我们利用一个table数组存储每个数字出现的次数，输入结束后遍历一遍table数组进行判断输出即可。</p>\n<h4 id=\"c代码-1\"><a href=\"#c代码-1\" class=\"headerlink\" title=\"c代码\"></a>c代码</h4><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&quot;stdio.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> t,n;</span><br><span class=\"line\">    <span class=\"type\">int</span> x,table[<span class=\"number\">200010</span>];</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;t);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span>(t--)&#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> flag = <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;n);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>; i&lt;n; i++) &#123;</span><br><span class=\"line\">            <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>, &amp;x);</span><br><span class=\"line\">            table[x]++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>; i&lt;=n; i++)</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(table[i] &gt;= <span class=\"number\">3</span>) &#123;</span><br><span class=\"line\">                <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d &quot;</span>,i);</span><br><span class=\"line\">                flag = <span class=\"number\">0</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(flag)</span><br><span class=\"line\">            <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;-1\\n&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>; i&lt;=n; i++)</span><br><span class=\"line\">            table[i] = <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"E：找出01数\"><a href=\"#E：找出01数\" class=\"headerlink\" title=\"E：找出01数\"></a>E：找出01数</h1><h5 id=\"题目链接-4\"><a href=\"#题目链接-4\" class=\"headerlink\" title=\"题目链接\"></a><a href=\"/problem.php?id=4355\">题目链接</a></h5><h3 id=\"解法一：二进制枚举\"><a href=\"#解法一：二进制枚举\" class=\"headerlink\" title=\"解法一：二进制枚举\"></a>解法一：二进制枚举</h3><h4 id=\"思路分析-4\"><a href=\"#思路分析-4\" class=\"headerlink\" title=\"思路分析\"></a>思路分析</h4><blockquote>\n<p>分析题目可以知道每一位要么是$0$要么是$1$，$n$最大是 $10^9$，所以最多有$10$位，而实际上在填的时候只有$9$位数字，<br>$n=10^9$最高位是$1$其余位全为$0$是固定的，所以最多的方案数目为$2^9-1+1=512$ 种，<br>其中需要加上$1000000000$这个数字和减去$0$这个数字，所以总共的状态数目是非常少的，<br>所以我们可以从$1$枚举到$2^{10}-1$，然后计算每一个二进制状态对应的十进制数字$x$，判断是否小于等于$n$即可，<br>如果小于等于$n$说明符合要求。</p>\n</blockquote>\n<h4 id=\"c-c-代码-2\"><a href=\"#c-c-代码-2\" class=\"headerlink\" title=\"c/c++代码\"></a>c/c++代码</h4><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> n;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>, &amp;n);</span><br><span class=\"line\">    <span class=\"type\">int</span> res = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt; (<span class=\"number\">1</span> &lt;&lt; <span class=\"number\">10</span>); i ++ ) &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> x = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; <span class=\"number\">10</span>; j ++ ) &#123;</span><br><span class=\"line\">            x = x * <span class=\"number\">10</span> + (i &gt;&gt; j &amp; <span class=\"number\">1</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(x &lt;= n)&#123;</span><br><span class=\"line\">            res ++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d&quot;</span>, res);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"python代码\"><a href=\"#python代码\" class=\"headerlink\" title=\"python代码\"></a>python代码</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span>:</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">process</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        n = <span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>())</span><br><span class=\"line\">        res = <span class=\"number\">0</span></span><br><span class=\"line\">        <span class=\"comment\"># 枚举的相当于是每一位是0或者1对应的所有二进制状态, 然后将其转为十进制数字判断是否小于等于n即可</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, <span class=\"number\">1</span> &lt;&lt; <span class=\"number\">10</span>):</span><br><span class=\"line\">            x = <span class=\"number\">0</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">10</span>):</span><br><span class=\"line\">                <span class=\"comment\"># x为当前的二进制状态对应的十进制数字</span></span><br><span class=\"line\">                x = x * <span class=\"number\">10</span> + (i &gt;&gt; j &amp; <span class=\"number\">1</span>)</span><br><span class=\"line\">            <span class=\"comment\"># 判断当前对应的十进制数字是否小于等于n</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> x &lt;= n: res += <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> res</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(Solution().process())</span><br></pre></td></tr></table></figure>\n<h4 id=\"java代码\"><a href=\"#java代码\" class=\"headerlink\" title=\"java代码\"></a>java代码</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.<span class=\"property\">util</span>.<span class=\"property\">Scanner</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Main</span> &#123;</span><br><span class=\"line\">    int <span class=\"title function_\">solve</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"title class_\">Scanner</span> sc = <span class=\"keyword\">new</span> <span class=\"title class_\">Scanner</span>(<span class=\"title class_\">System</span>.<span class=\"property\">in</span>);</span><br><span class=\"line\">        int n = sc.<span class=\"title function_\">nextInt</span>(), res = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (int i = <span class=\"number\">1</span>; i &lt; (<span class=\"number\">1</span> &lt;&lt; <span class=\"number\">10</span>); i ++ ) &#123;</span><br><span class=\"line\">            int x = <span class=\"number\">0</span>;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (int j = <span class=\"number\">0</span>; j &lt; <span class=\"number\">10</span>; j ++ ) &#123;</span><br><span class=\"line\">                x = x * <span class=\"number\">10</span> + (i &gt;&gt; j &amp; <span class=\"number\">1</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(x &lt;= n)&#123;</span><br><span class=\"line\">                res ++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span>(<span class=\"params\"><span class=\"built_in\">String</span>[] args</span>) &#123;</span><br><span class=\"line\">        <span class=\"title class_\">Main</span> main = <span class=\"keyword\">new</span> <span class=\"title class_\">Main</span>();</span><br><span class=\"line\">        <span class=\"title class_\">System</span>.<span class=\"property\">out</span>.<span class=\"title function_\">println</span>(main.<span class=\"title function_\">solve</span>());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"解法二：DFS\"><a href=\"#解法二：DFS\" class=\"headerlink\" title=\"解法二：DFS\"></a>解法二：DFS</h3><h4 id=\"思路分析-5\"><a href=\"#思路分析-5\" class=\"headerlink\" title=\"思路分析\"></a>思路分析</h4><blockquote>\n<p>代码很简洁看了就懂了。</p>\n</blockquote>\n<h4 id=\"c-c-代码-3\"><a href=\"#c-c-代码-3\" class=\"headerlink\" title=\"c/c++代码\"></a>c/c++代码</h4><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> res, n;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">dfs</span><span class=\"params\">(<span class=\"type\">int</span> u)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (u &gt; n) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    <span class=\"built_in\">dfs</span>(u * <span class=\"number\">10</span>);</span><br><span class=\"line\">    <span class=\"built_in\">dfs</span>(u * <span class=\"number\">10</span> + <span class=\"number\">1</span>);</span><br><span class=\"line\">    res ++;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span> <span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    cin &gt;&gt; n;</span><br><span class=\"line\">    <span class=\"built_in\">dfs</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\">    cout &lt;&lt; res &lt;&lt; endl;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"F：元素加一\"><a href=\"#F：元素加一\" class=\"headerlink\" title=\"F：元素加一\"></a>F：元素加一</h1><h5 id=\"题目链接-5\"><a href=\"#题目链接-5\" class=\"headerlink\" title=\"题目链接\"></a><a href=\"/problem.php?id=4349\">题目链接</a></h5><h3 id=\"思路分析-6\"><a href=\"#思路分析-6\" class=\"headerlink\" title=\"思路分析\"></a>思路分析</h3><blockquote>\n<p>这个题目经分析可得，为了让所有的元素彼此相等，我们只能选择元素加一，所以最后变成的数一定是最大的那个数，因为它不能变小，只能通过让其他的小于它的数变大和它相等。最多进行的操作就是从最小的数变成最大的数，在 <em> min &lt; x &lt; max </em><br>的范围之间的数 x 小于 max 则跟着加一，等于 max 则不进行操作。所以最终的最小<br>操作数应该是 <em> max - min </em> 的值.</p>\n</blockquote>\n<h4 id=\"c代码-2\"><a href=\"#c代码-2\" class=\"headerlink\" title=\"c代码\"></a>c代码</h4><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&quot;stdio.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> a;</span><br><span class=\"line\">    <span class=\"type\">int</span> t,n;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;t);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span>(t--)&#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> max = <span class=\"number\">0</span>, min = <span class=\"number\">1e9</span>;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;n);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>; i&lt;n; i++)&#123;</span><br><span class=\"line\">            <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;a);</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(a &gt; max)</span><br><span class=\"line\">                max = a;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(a &lt; min)</span><br><span class=\"line\">                min = a;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d\\n&quot;</span>,max - min);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h1 id=\"G：词排列\"><a href=\"#G：词排列\" class=\"headerlink\" title=\"G：词排列\"></a>G：词排列</h1><h5 id=\"题目链接-6\"><a href=\"#题目链接-6\" class=\"headerlink\" title=\"题目链接\"></a><a href=\"/problem.php?id=4346\">题目链接</a></h5><h3 id=\"思路分析-7\"><a href=\"#思路分析-7\" class=\"headerlink\" title=\"思路分析\"></a>思路分析</h3><blockquote>\n<p>这道题目就是一道分析题<br>依题目的词 1 和词 25 可得如果第一个字符小于第二个字符时它的索引就是</p>\n<script type=\"math/tex; mode=display\">(a[0] - a) * 25 + (a[1] - a) + 1</script><p>再根据词 649 和词 650 以及词 27 可以发现如果第二个字符小于第一个字符时它的索引就是</p>\n<script type=\"math/tex; mode=display\">(a[0] - a) * 26 + (a[1] - a[0])</script></blockquote>\n<h4 id=\"c-c-代码-4\"><a href=\"#c-c-代码-4\" class=\"headerlink\" title=\"c/c++代码\"></a>c/c++代码</h4><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> t;</span><br><span class=\"line\">    cin &gt;&gt; t;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(t --)&#123;</span><br><span class=\"line\">        string a;</span><br><span class=\"line\">        cin &gt;&gt; a;</span><br><span class=\"line\">        <span class=\"type\">int</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(a[<span class=\"number\">1</span>] - <span class=\"string\">&#x27;a&#x27;</span> &lt; a[<span class=\"number\">0</span>] - <span class=\"string\">&#x27;a&#x27;</span> )&#123;</span><br><span class=\"line\">            sum += (a[<span class=\"number\">0</span>] - <span class=\"string\">&#x27;a&#x27;</span>) * <span class=\"number\">25</span> + (a[<span class=\"number\">1</span>] - <span class=\"string\">&#x27;a&#x27;</span>) + <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            sum += (a[<span class=\"number\">0</span>] - <span class=\"string\">&#x27;a&#x27;</span>) * <span class=\"number\">26</span> + (a[<span class=\"number\">1</span>] - a[<span class=\"number\">0</span>]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        cout &lt;&lt; sum &lt;&lt; endl;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"H-奇数-偶数增量\"><a href=\"#H-奇数-偶数增量\" class=\"headerlink\" title=\"H: 奇数/偶数增量\"></a>H: 奇数/偶数增量</h1><h5 id=\"题目链接-7\"><a href=\"#题目链接-7\" class=\"headerlink\" title=\"题目链接\"></a><a href=\"/problem.php?id=4352\">题目链接</a></h5><h3 id=\"思路分析-8\"><a href=\"#思路分析-8\" class=\"headerlink\" title=\"思路分析\"></a>思路分析</h3><p>通过题目我们可以知道,我们只能对奇索引单独操作或者对偶索引单独操作,这样的话我们就得到一个信息:<br></p>\n<ul>\n<li>如果奇索引的元素中存在一个和其他奇索引的奇偶性不同,则这个数组里的元素不能全部变为偶数或奇数<br></li>\n<li>同理，如果偶索引的元素中存在一个和其他偶索引的奇偶性不同,则为 “NO”<br></li>\n</ul>\n<p>例:有一个长度为四的数组 a ,a[0] = 1,a[1] = 1,a[2] = 2,a[3] = 2,因为 a[1] 与 a[3]的奇偶性不同,这个数组不能全部变为偶数或奇数；同理 a[0] 与 a[2] 奇偶性也不同</p>\n<h4 id=\"c-c-代码-5\"><a href=\"#c-c-代码-5\" class=\"headerlink\" title=\"c/c++代码\"></a>c/c++代码</h4><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">51</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> a[N],even[N],odd[N];</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> t;</span><br><span class=\"line\">    cin &gt;&gt; t;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(t --)&#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> n;</span><br><span class=\"line\">        cin &gt;&gt; n;</span><br><span class=\"line\">        <span class=\"type\">int</span> p = <span class=\"number\">0</span>,p1 = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">1</span>;i &lt;= n;i ++)&#123;</span><br><span class=\"line\">            cin &gt;&gt; a[i];</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(i % <span class=\"number\">2</span> == <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">                even[p] = a[i];</span><br><span class=\"line\">                p ++;</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                odd[p1] = a[i];</span><br><span class=\"line\">                p1 ++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"type\">int</span> sum = <span class=\"number\">0</span>,sum1 = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>;i &lt; p;i ++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(even[i] % <span class=\"number\">2</span> == <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">                sum ++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>;i &lt; p1;i ++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(odd[i] % <span class=\"number\">2</span> == <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">                sum1 ++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>((sum == p || sum == <span class=\"number\">0</span>) &amp;&amp; (sum1 == p1 || sum1 == <span class=\"number\">0</span>))&#123;</span><br><span class=\"line\">            cout &lt;&lt; <span class=\"string\">&quot;YES&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            cout &lt;&lt; <span class=\"string\">&quot;NO&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"I：奖学金评定\"><a href=\"#I：奖学金评定\" class=\"headerlink\" title=\"I：奖学金评定\"></a>I：奖学金评定</h1><h5 id=\"题目链接-8\"><a href=\"#题目链接-8\" class=\"headerlink\" title=\"题目链接\"></a><a href=\"/problem.php?id=4343\">题目链接</a></h5><h3 id=\"思路分析-9\"><a href=\"#思路分析-9\" class=\"headerlink\" title=\"思路分析\"></a>思路分析</h3><blockquote>\n<p>这个题目只需要根据输入的n来进入分支结构即可。<br>唯一一点要注意边界是大于等于而不是大于。</p>\n</blockquote>\n<h4 id=\"c代码-3\"><a href=\"#c代码-3\" class=\"headerlink\" title=\"c代码\"></a>c代码</h4><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&quot;stdio.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> t;</span><br><span class=\"line\">    <span class=\"type\">double</span> n;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;t);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span>(t--)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%lf&quot;</span>,&amp;n);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(n &gt;= <span class=\"number\">4.0</span>)</span><br><span class=\"line\">            <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;special scholarship&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(n &gt;= <span class=\"number\">3.5</span>)</span><br><span class=\"line\">            <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;first-class scholarship&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(n &gt;= <span class=\"number\">3.0</span>)</span><br><span class=\"line\">            <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;second-class scholarship&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(n &gt;= <span class=\"number\">2.5</span>)</span><br><span class=\"line\">            <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;third-class scholarship&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;none&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h1 id=\"J：数字转换\"><a href=\"#J：数字转换\" class=\"headerlink\" title=\"J：数字转换\"></a>J：数字转换</h1><h5 id=\"题目链接-9\"><a href=\"#题目链接-9\" class=\"headerlink\" title=\"题目链接\"></a><a href=\"/problem.php?id=4344\">题目链接</a></h5><h3 id=\"思路分析-10\"><a href=\"#思路分析-10\" class=\"headerlink\" title=\"思路分析\"></a>思路分析</h3><p>这是一个思维题，当你看到题目输出格式上加粗的字时，<br>就应该迅速联想到一些东西。那就是给你们的提示。<br>题目要求 两个数 a 和 b 使得输入的 x 和 y 满足等式<br>x * b^a = y 。因为符合条件的 a b 取值情况可能有<br>很多种，所以我们可以取一个特殊值，就是让 a 等于 1。<br>然后只需要判断 y 是否能除尽 x 就行。能除尽就输出 1<br>和 y/x，不能除尽就输出 0 0。</p>\n<h4 id=\"c代码-4\"><a href=\"#c代码-4\" class=\"headerlink\" title=\"c代码\"></a>c代码</h4><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&quot;stdio.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> x,y,a,b;</span><br><span class=\"line\">    <span class=\"type\">int</span> t;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;t);</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(t--) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d %d&quot;</span>,&amp;x,&amp;y);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(y % x == <span class=\"number\">0</span>)</span><br><span class=\"line\">            <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d %d\\n&quot;</span>,<span class=\"number\">1</span>,y/x);</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;0 0\\n&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h1 id=\"K-无限替换\"><a href=\"#K-无限替换\" class=\"headerlink\" title=\"K: 无限替换\"></a>K: 无限替换</h1><h5 id=\"题目链接-10\"><a href=\"#题目链接-10\" class=\"headerlink\" title=\"题目链接\"></a><a href=\"/problem.php?id=4347\">题目链接</a></h5><h3 id=\"思路分析-11\"><a href=\"#思路分析-11\" class=\"headerlink\" title=\"思路分析\"></a>思路分析</h3><p>对于题目的分析我们可以得到三点信息<br></p>\n<ul>\n<li>t 串中含有 a 字符时而且 t 串长度大于一,替换的时候一直循环下去得到的答案是无限大的.</li>\n<li>t 串中含有 a 字符时而且 t 串长度等于一,替换的时候只有一种结果也就是其本身.</li>\n<li>t 串中不含 a 字符,替换之后得到不同的串的数量只能是 2 的 t.size() 次方.</li>\n</ul>\n<h4 id=\"c-c-代码-6\"><a href=\"#c-c-代码-6\" class=\"headerlink\" title=\"c/c++代码\"></a>c/c++代码</h4><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> t;</span><br><span class=\"line\">    cin &gt;&gt; t;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(t --)&#123;</span><br><span class=\"line\">        string a,b;</span><br><span class=\"line\">        cin &gt;&gt; a &gt;&gt; b;</span><br><span class=\"line\">        <span class=\"type\">bool</span> flag = <span class=\"literal\">false</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>;i &lt; b.<span class=\"built_in\">size</span>();i ++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(b[i] == <span class=\"string\">&#x27;a&#x27;</span>)&#123;</span><br><span class=\"line\">                flag = <span class=\"literal\">true</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(flag &amp;&amp; b.<span class=\"built_in\">size</span>() &gt; <span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">            cout &lt;&lt; <span class=\"string\">&quot;-1&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(flag &amp;&amp; b.<span class=\"built_in\">size</span>() == <span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">            cout &lt;&lt; <span class=\"string\">&quot;1&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(!flag)&#123;</span><br><span class=\"line\">            cout &lt;&lt; (<span class=\"type\">long</span> <span class=\"type\">long</span>)<span class=\"built_in\">pow</span>(<span class=\"number\">2</span>,a.<span class=\"built_in\">size</span>()) &lt;&lt; endl;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<h1 id=\"A-计算平均绩点\"><a href=\"#A-计算平均绩点\" class=\"headerlink\" title=\"A:计算平均绩点\"></a>A:计算平均绩点</h1><h5 id=\"题目链接\"><a href=\"#题目链接\" class=\"headerlink\" title=\"题目链接\"></a><a href=\"/problem.php?id=4353\">题目链接</a></h5><h3 id=\"思路分析\"><a href=\"#思路分析\" class=\"headerlink\" title=\"思路分析\"></a>思路分析</h3><p>由题意得，要计算平均学分绩点只需要计算总的课程学分绩点和总课程学分即可，我们用数组$a$,$b$来存储有效数据，$a[i]$记录第$i$门课程的学分，$b[i]$记录第i门课程的成绩。$score$存学分总数，$ans$存学分绩点。最后输出$ans$和$score$的比值。注意在多组数据输入中，重复使用的$score$和$ans$要记得在循环中置零。</p>\n<h4 id=\"c代码\"><a href=\"#c代码\" class=\"headerlink\" title=\"c代码\"></a>c代码</h4><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&quot;stdio.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> t,n;</span><br><span class=\"line\">    <span class=\"type\">double</span> a[<span class=\"number\">110</span>],b[<span class=\"number\">110</span>];</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;t);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span>(t--) &#123;</span><br><span class=\"line\">        <span class=\"type\">double</span> score = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;n);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>; i&lt;n; i++) &#123;</span><br><span class=\"line\">            <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%lf&quot;</span>, &amp;a[i]);</span><br><span class=\"line\">            score += a[i];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>; i&lt;n; i++)</span><br><span class=\"line\">            <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%lf&quot;</span>,&amp;b[i]);</span><br><span class=\"line\">        <span class=\"type\">double</span> ans = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>; i&lt;n; i++)</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(b[i] &gt;= <span class=\"number\">60</span>)</span><br><span class=\"line\">                ans += (b[i] - <span class=\"number\">50</span>) / <span class=\"number\">10</span> * a[i];</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%.2lf\\n&quot;</span>,ans/score);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"B：矩阵对换\"><a href=\"#B：矩阵对换\" class=\"headerlink\" title=\"B：矩阵对换\"></a>B：矩阵对换</h1><h5 id=\"题目链接-1\"><a href=\"#题目链接-1\" class=\"headerlink\" title=\"题目链接\"></a><a href=\"/problem.php?id=4354\">题目链接</a></h5><h4 id=\"思路分析-1\"><a href=\"#思路分析-1\" class=\"headerlink\" title=\"思路分析\"></a>思路分析</h4><p><img src=\"/blog/images/pasted-3.png\" alt=\"upload successful\"></p>\n<blockquote>\n<p>如上图在对称线右上方的红色元素满足：$i&lt;=j-k$，其中$i$为行号$j$为列号$k$为对称线向上平移的单位长度。<br>将满足上式的元素$a[i][j]$与对应元素$a[j][i]$交换即可。</p>\n</blockquote>\n<h4 id=\"c-c-代码\"><a href=\"#c-c-代码\" class=\"headerlink\" title=\"c/c++代码\"></a>c/c++代码</h4><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> a[<span class=\"number\">110</span>][<span class=\"number\">110</span>], n, k;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">swap</span><span class=\"params\">(<span class=\"type\">int</span>* a, <span class=\"type\">int</span>* b)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> t = *a;</span><br><span class=\"line\">    *a = *b;</span><br><span class=\"line\">    *b = t;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span> <span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d%d&quot;</span>, &amp;n, &amp;k);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i ++ )</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; n; j ++ )</span><br><span class=\"line\">            <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>, &amp;a[i][j]);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i ++ )</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; n; j ++ )</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i &lt;= j - k)</span><br><span class=\"line\">                swap(&amp;a[i][j], &amp;a[j][i]);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; n; i ++ ) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; n; j ++ )</span><br><span class=\"line\">            <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d &quot;</span>, a[i][j]);</span><br><span class=\"line\">        <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"C-二进制小发现\"><a href=\"#C-二进制小发现\" class=\"headerlink\" title=\"C:二进制小发现\"></a>C:二进制小发现</h1><h5 id=\"题目链接-2\"><a href=\"#题目链接-2\" class=\"headerlink\" title=\"题目链接\"></a><a href=\"/problem.php?id=4356\">题目链接</a></h5><h3 id=\"思路分析-2\"><a href=\"#思路分析-2\" class=\"headerlink\" title=\"思路分析\"></a>思路分析</h3><p>这道题目是一个二进制题.<br><br>对于偶数与奇数的二进制观察,我们可以发现偶数的二进制末尾都是 0,奇数的二进制末尾都是 1.<br><br>二进制中除以 2 的操作可以看为右移一位,在字符串中就是去除最后一位. 而加 1 的操作就是直接在二进制末尾加上一,在判断一下要不要进位,逢二进一.</p>\n<h4 id=\"c-c-代码-1\"><a href=\"#c-c-代码-1\" class=\"headerlink\" title=\"c/c++代码\"></a>c/c++代码</h4><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    string a;</span><br><span class=\"line\">    cin &gt;&gt; a;</span><br><span class=\"line\">    <span class=\"type\">long</span> <span class=\"type\">long</span> ans = <span class=\"number\">0</span>,r = a.<span class=\"built_in\">size</span>();</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(r != <span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">        ans ++;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(a[r - <span class=\"number\">1</span>] == <span class=\"string\">&#x27;0&#x27;</span>)&#123;</span><br><span class=\"line\">            r --;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = r - <span class=\"number\">1</span>;i &gt;= <span class=\"number\">0</span>;i --)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span>(a[i] - <span class=\"string\">&#x27;0&#x27;</span> + <span class=\"number\">1</span> &gt; <span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">                    a[i] = <span class=\"string\">&#x27;0&#x27;</span>;</span><br><span class=\"line\">                &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                    a[i] = <span class=\"string\">&#x27;1&#x27;</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(a[<span class=\"number\">0</span>] == <span class=\"string\">&#x27;0&#x27;</span>)&#123; <span class=\"comment\">// 如果高位为 0 则逢二进一时让其等于 0 ，这样的话还需要进行除以二的操作</span></span><br><span class=\"line\">        cout &lt;&lt; ans + <span class=\"number\">1</span> &lt;&lt; endl;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"D：三重\"><a href=\"#D：三重\" class=\"headerlink\" title=\"D：三重\"></a>D：三重</h1><h5 id=\"题目链接-3\"><a href=\"#题目链接-3\" class=\"headerlink\" title=\"题目链接\"></a><a href=\"/problem.php?id=4348\">题目链接</a></h5><h3 id=\"思路分析-3\"><a href=\"#思路分析-3\" class=\"headerlink\" title=\"思路分析\"></a>思路分析</h3><p>这个题目意思很简单，就是输出所有出现次数超过3次的数，我们利用一个table数组存储每个数字出现的次数，输入结束后遍历一遍table数组进行判断输出即可。</p>\n<h4 id=\"c代码-1\"><a href=\"#c代码-1\" class=\"headerlink\" title=\"c代码\"></a>c代码</h4><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&quot;stdio.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> t,n;</span><br><span class=\"line\">    <span class=\"type\">int</span> x,table[<span class=\"number\">200010</span>];</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;t);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span>(t--)&#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> flag = <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;n);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>; i&lt;n; i++) &#123;</span><br><span class=\"line\">            <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>, &amp;x);</span><br><span class=\"line\">            table[x]++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>; i&lt;=n; i++)</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(table[i] &gt;= <span class=\"number\">3</span>) &#123;</span><br><span class=\"line\">                <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d &quot;</span>,i);</span><br><span class=\"line\">                flag = <span class=\"number\">0</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(flag)</span><br><span class=\"line\">            <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;-1\\n&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>; i&lt;=n; i++)</span><br><span class=\"line\">            table[i] = <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"E：找出01数\"><a href=\"#E：找出01数\" class=\"headerlink\" title=\"E：找出01数\"></a>E：找出01数</h1><h5 id=\"题目链接-4\"><a href=\"#题目链接-4\" class=\"headerlink\" title=\"题目链接\"></a><a href=\"/problem.php?id=4355\">题目链接</a></h5><h3 id=\"解法一：二进制枚举\"><a href=\"#解法一：二进制枚举\" class=\"headerlink\" title=\"解法一：二进制枚举\"></a>解法一：二进制枚举</h3><h4 id=\"思路分析-4\"><a href=\"#思路分析-4\" class=\"headerlink\" title=\"思路分析\"></a>思路分析</h4><blockquote>\n<p>分析题目可以知道每一位要么是$0$要么是$1$，$n$最大是 $10^9$，所以最多有$10$位，而实际上在填的时候只有$9$位数字，<br>$n=10^9$最高位是$1$其余位全为$0$是固定的，所以最多的方案数目为$2^9-1+1=512$ 种，<br>其中需要加上$1000000000$这个数字和减去$0$这个数字，所以总共的状态数目是非常少的，<br>所以我们可以从$1$枚举到$2^{10}-1$，然后计算每一个二进制状态对应的十进制数字$x$，判断是否小于等于$n$即可，<br>如果小于等于$n$说明符合要求。</p>\n</blockquote>\n<h4 id=\"c-c-代码-2\"><a href=\"#c-c-代码-2\" class=\"headerlink\" title=\"c/c++代码\"></a>c/c++代码</h4><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> n;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>, &amp;n);</span><br><span class=\"line\">    <span class=\"type\">int</span> res = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">1</span>; i &lt; (<span class=\"number\">1</span> &lt;&lt; <span class=\"number\">10</span>); i ++ ) &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> x = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> j = <span class=\"number\">0</span>; j &lt; <span class=\"number\">10</span>; j ++ ) &#123;</span><br><span class=\"line\">            x = x * <span class=\"number\">10</span> + (i &gt;&gt; j &amp; <span class=\"number\">1</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(x &lt;= n)&#123;</span><br><span class=\"line\">            res ++;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d&quot;</span>, res);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"python代码\"><a href=\"#python代码\" class=\"headerlink\" title=\"python代码\"></a>python代码</h4><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Solution</span>:</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">process</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        n = <span class=\"built_in\">int</span>(<span class=\"built_in\">input</span>())</span><br><span class=\"line\">        res = <span class=\"number\">0</span></span><br><span class=\"line\">        <span class=\"comment\"># 枚举的相当于是每一位是0或者1对应的所有二进制状态, 然后将其转为十进制数字判断是否小于等于n即可</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, <span class=\"number\">1</span> &lt;&lt; <span class=\"number\">10</span>):</span><br><span class=\"line\">            x = <span class=\"number\">0</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">10</span>):</span><br><span class=\"line\">                <span class=\"comment\"># x为当前的二进制状态对应的十进制数字</span></span><br><span class=\"line\">                x = x * <span class=\"number\">10</span> + (i &gt;&gt; j &amp; <span class=\"number\">1</span>)</span><br><span class=\"line\">            <span class=\"comment\"># 判断当前对应的十进制数字是否小于等于n</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> x &lt;= n: res += <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> res</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(Solution().process())</span><br></pre></td></tr></table></figure>\n<h4 id=\"java代码\"><a href=\"#java代码\" class=\"headerlink\" title=\"java代码\"></a>java代码</h4><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.<span class=\"property\">util</span>.<span class=\"property\">Scanner</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Main</span> &#123;</span><br><span class=\"line\">    int <span class=\"title function_\">solve</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"title class_\">Scanner</span> sc = <span class=\"keyword\">new</span> <span class=\"title class_\">Scanner</span>(<span class=\"title class_\">System</span>.<span class=\"property\">in</span>);</span><br><span class=\"line\">        int n = sc.<span class=\"title function_\">nextInt</span>(), res = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (int i = <span class=\"number\">1</span>; i &lt; (<span class=\"number\">1</span> &lt;&lt; <span class=\"number\">10</span>); i ++ ) &#123;</span><br><span class=\"line\">            int x = <span class=\"number\">0</span>;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (int j = <span class=\"number\">0</span>; j &lt; <span class=\"number\">10</span>; j ++ ) &#123;</span><br><span class=\"line\">                x = x * <span class=\"number\">10</span> + (i &gt;&gt; j &amp; <span class=\"number\">1</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(x &lt;= n)&#123;</span><br><span class=\"line\">                res ++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span>(<span class=\"params\"><span class=\"built_in\">String</span>[] args</span>) &#123;</span><br><span class=\"line\">        <span class=\"title class_\">Main</span> main = <span class=\"keyword\">new</span> <span class=\"title class_\">Main</span>();</span><br><span class=\"line\">        <span class=\"title class_\">System</span>.<span class=\"property\">out</span>.<span class=\"title function_\">println</span>(main.<span class=\"title function_\">solve</span>());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"解法二：DFS\"><a href=\"#解法二：DFS\" class=\"headerlink\" title=\"解法二：DFS\"></a>解法二：DFS</h3><h4 id=\"思路分析-5\"><a href=\"#思路分析-5\" class=\"headerlink\" title=\"思路分析\"></a>思路分析</h4><blockquote>\n<p>代码很简洁看了就懂了。</p>\n</blockquote>\n<h4 id=\"c-c-代码-3\"><a href=\"#c-c-代码-3\" class=\"headerlink\" title=\"c/c++代码\"></a>c/c++代码</h4><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> res, n;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">dfs</span><span class=\"params\">(<span class=\"type\">int</span> u)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (u &gt; n) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">    <span class=\"built_in\">dfs</span>(u * <span class=\"number\">10</span>);</span><br><span class=\"line\">    <span class=\"built_in\">dfs</span>(u * <span class=\"number\">10</span> + <span class=\"number\">1</span>);</span><br><span class=\"line\">    res ++;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span> <span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    cin &gt;&gt; n;</span><br><span class=\"line\">    <span class=\"built_in\">dfs</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\">    cout &lt;&lt; res &lt;&lt; endl;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"F：元素加一\"><a href=\"#F：元素加一\" class=\"headerlink\" title=\"F：元素加一\"></a>F：元素加一</h1><h5 id=\"题目链接-5\"><a href=\"#题目链接-5\" class=\"headerlink\" title=\"题目链接\"></a><a href=\"/problem.php?id=4349\">题目链接</a></h5><h3 id=\"思路分析-6\"><a href=\"#思路分析-6\" class=\"headerlink\" title=\"思路分析\"></a>思路分析</h3><blockquote>\n<p>这个题目经分析可得，为了让所有的元素彼此相等，我们只能选择元素加一，所以最后变成的数一定是最大的那个数，因为它不能变小，只能通过让其他的小于它的数变大和它相等。最多进行的操作就是从最小的数变成最大的数，在 <em> min &lt; x &lt; max </em><br>的范围之间的数 x 小于 max 则跟着加一，等于 max 则不进行操作。所以最终的最小<br>操作数应该是 <em> max - min </em> 的值.</p>\n</blockquote>\n<h4 id=\"c代码-2\"><a href=\"#c代码-2\" class=\"headerlink\" title=\"c代码\"></a>c代码</h4><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&quot;stdio.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> a;</span><br><span class=\"line\">    <span class=\"type\">int</span> t,n;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;t);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span>(t--)&#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> max = <span class=\"number\">0</span>, min = <span class=\"number\">1e9</span>;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;n);</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">0</span>; i&lt;n; i++)&#123;</span><br><span class=\"line\">            <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;a);</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(a &gt; max)</span><br><span class=\"line\">                max = a;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(a &lt; min)</span><br><span class=\"line\">                min = a;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d\\n&quot;</span>,max - min);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h1 id=\"G：词排列\"><a href=\"#G：词排列\" class=\"headerlink\" title=\"G：词排列\"></a>G：词排列</h1><h5 id=\"题目链接-6\"><a href=\"#题目链接-6\" class=\"headerlink\" title=\"题目链接\"></a><a href=\"/problem.php?id=4346\">题目链接</a></h5><h3 id=\"思路分析-7\"><a href=\"#思路分析-7\" class=\"headerlink\" title=\"思路分析\"></a>思路分析</h3><blockquote>\n<p>这道题目就是一道分析题<br>依题目的词 1 和词 25 可得如果第一个字符小于第二个字符时它的索引就是</p>\n<script type=\"math/tex; mode=display\">(a[0] - a) * 25 + (a[1] - a) + 1</script><p>再根据词 649 和词 650 以及词 27 可以发现如果第二个字符小于第一个字符时它的索引就是</p>\n<script type=\"math/tex; mode=display\">(a[0] - a) * 26 + (a[1] - a[0])</script></blockquote>\n<h4 id=\"c-c-代码-4\"><a href=\"#c-c-代码-4\" class=\"headerlink\" title=\"c/c++代码\"></a>c/c++代码</h4><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> t;</span><br><span class=\"line\">    cin &gt;&gt; t;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(t --)&#123;</span><br><span class=\"line\">        string a;</span><br><span class=\"line\">        cin &gt;&gt; a;</span><br><span class=\"line\">        <span class=\"type\">int</span> sum = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(a[<span class=\"number\">1</span>] - <span class=\"string\">&#x27;a&#x27;</span> &lt; a[<span class=\"number\">0</span>] - <span class=\"string\">&#x27;a&#x27;</span> )&#123;</span><br><span class=\"line\">            sum += (a[<span class=\"number\">0</span>] - <span class=\"string\">&#x27;a&#x27;</span>) * <span class=\"number\">25</span> + (a[<span class=\"number\">1</span>] - <span class=\"string\">&#x27;a&#x27;</span>) + <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            sum += (a[<span class=\"number\">0</span>] - <span class=\"string\">&#x27;a&#x27;</span>) * <span class=\"number\">26</span> + (a[<span class=\"number\">1</span>] - a[<span class=\"number\">0</span>]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        cout &lt;&lt; sum &lt;&lt; endl;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"H-奇数-偶数增量\"><a href=\"#H-奇数-偶数增量\" class=\"headerlink\" title=\"H: 奇数/偶数增量\"></a>H: 奇数/偶数增量</h1><h5 id=\"题目链接-7\"><a href=\"#题目链接-7\" class=\"headerlink\" title=\"题目链接\"></a><a href=\"/problem.php?id=4352\">题目链接</a></h5><h3 id=\"思路分析-8\"><a href=\"#思路分析-8\" class=\"headerlink\" title=\"思路分析\"></a>思路分析</h3><p>通过题目我们可以知道,我们只能对奇索引单独操作或者对偶索引单独操作,这样的话我们就得到一个信息:<br></p>\n<ul>\n<li>如果奇索引的元素中存在一个和其他奇索引的奇偶性不同,则这个数组里的元素不能全部变为偶数或奇数<br></li>\n<li>同理，如果偶索引的元素中存在一个和其他偶索引的奇偶性不同,则为 “NO”<br></li>\n</ul>\n<p>例:有一个长度为四的数组 a ,a[0] = 1,a[1] = 1,a[2] = 2,a[3] = 2,因为 a[1] 与 a[3]的奇偶性不同,这个数组不能全部变为偶数或奇数；同理 a[0] 与 a[2] 奇偶性也不同</p>\n<h4 id=\"c-c-代码-5\"><a href=\"#c-c-代码-5\" class=\"headerlink\" title=\"c/c++代码\"></a>c/c++代码</h4><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"type\">const</span> <span class=\"type\">int</span> N = <span class=\"number\">51</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> a[N],even[N],odd[N];</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> t;</span><br><span class=\"line\">    cin &gt;&gt; t;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(t --)&#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> n;</span><br><span class=\"line\">        cin &gt;&gt; n;</span><br><span class=\"line\">        <span class=\"type\">int</span> p = <span class=\"number\">0</span>,p1 = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">1</span>;i &lt;= n;i ++)&#123;</span><br><span class=\"line\">            cin &gt;&gt; a[i];</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(i % <span class=\"number\">2</span> == <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">                even[p] = a[i];</span><br><span class=\"line\">                p ++;</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                odd[p1] = a[i];</span><br><span class=\"line\">                p1 ++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"type\">int</span> sum = <span class=\"number\">0</span>,sum1 = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>;i &lt; p;i ++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(even[i] % <span class=\"number\">2</span> == <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">                sum ++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>;i &lt; p1;i ++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(odd[i] % <span class=\"number\">2</span> == <span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">                sum1 ++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>((sum == p || sum == <span class=\"number\">0</span>) &amp;&amp; (sum1 == p1 || sum1 == <span class=\"number\">0</span>))&#123;</span><br><span class=\"line\">            cout &lt;&lt; <span class=\"string\">&quot;YES&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            cout &lt;&lt; <span class=\"string\">&quot;NO&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"I：奖学金评定\"><a href=\"#I：奖学金评定\" class=\"headerlink\" title=\"I：奖学金评定\"></a>I：奖学金评定</h1><h5 id=\"题目链接-8\"><a href=\"#题目链接-8\" class=\"headerlink\" title=\"题目链接\"></a><a href=\"/problem.php?id=4343\">题目链接</a></h5><h3 id=\"思路分析-9\"><a href=\"#思路分析-9\" class=\"headerlink\" title=\"思路分析\"></a>思路分析</h3><blockquote>\n<p>这个题目只需要根据输入的n来进入分支结构即可。<br>唯一一点要注意边界是大于等于而不是大于。</p>\n</blockquote>\n<h4 id=\"c代码-3\"><a href=\"#c代码-3\" class=\"headerlink\" title=\"c代码\"></a>c代码</h4><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&quot;stdio.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> t;</span><br><span class=\"line\">    <span class=\"type\">double</span> n;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;t);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span>(t--)&#123;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%lf&quot;</span>,&amp;n);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(n &gt;= <span class=\"number\">4.0</span>)</span><br><span class=\"line\">            <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;special scholarship&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(n &gt;= <span class=\"number\">3.5</span>)</span><br><span class=\"line\">            <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;first-class scholarship&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(n &gt;= <span class=\"number\">3.0</span>)</span><br><span class=\"line\">            <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;second-class scholarship&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(n &gt;= <span class=\"number\">2.5</span>)</span><br><span class=\"line\">            <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;third-class scholarship&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;none&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h1 id=\"J：数字转换\"><a href=\"#J：数字转换\" class=\"headerlink\" title=\"J：数字转换\"></a>J：数字转换</h1><h5 id=\"题目链接-9\"><a href=\"#题目链接-9\" class=\"headerlink\" title=\"题目链接\"></a><a href=\"/problem.php?id=4344\">题目链接</a></h5><h3 id=\"思路分析-10\"><a href=\"#思路分析-10\" class=\"headerlink\" title=\"思路分析\"></a>思路分析</h3><p>这是一个思维题，当你看到题目输出格式上加粗的字时，<br>就应该迅速联想到一些东西。那就是给你们的提示。<br>题目要求 两个数 a 和 b 使得输入的 x 和 y 满足等式<br>x * b^a = y 。因为符合条件的 a b 取值情况可能有<br>很多种，所以我们可以取一个特殊值，就是让 a 等于 1。<br>然后只需要判断 y 是否能除尽 x 就行。能除尽就输出 1<br>和 y/x，不能除尽就输出 0 0。</p>\n<h4 id=\"c代码-4\"><a href=\"#c代码-4\" class=\"headerlink\" title=\"c代码\"></a>c代码</h4><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&quot;stdio.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> x,y,a,b;</span><br><span class=\"line\">    <span class=\"type\">int</span> t;</span><br><span class=\"line\">    <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>,&amp;t);</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(t--) &#123;</span><br><span class=\"line\">        <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d %d&quot;</span>,&amp;x,&amp;y);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(y % x == <span class=\"number\">0</span>)</span><br><span class=\"line\">            <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d %d\\n&quot;</span>,<span class=\"number\">1</span>,y/x);</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;0 0\\n&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h1 id=\"K-无限替换\"><a href=\"#K-无限替换\" class=\"headerlink\" title=\"K: 无限替换\"></a>K: 无限替换</h1><h5 id=\"题目链接-10\"><a href=\"#题目链接-10\" class=\"headerlink\" title=\"题目链接\"></a><a href=\"/problem.php?id=4347\">题目链接</a></h5><h3 id=\"思路分析-11\"><a href=\"#思路分析-11\" class=\"headerlink\" title=\"思路分析\"></a>思路分析</h3><p>对于题目的分析我们可以得到三点信息<br></p>\n<ul>\n<li>t 串中含有 a 字符时而且 t 串长度大于一,替换的时候一直循环下去得到的答案是无限大的.</li>\n<li>t 串中含有 a 字符时而且 t 串长度等于一,替换的时候只有一种结果也就是其本身.</li>\n<li>t 串中不含 a 字符,替换之后得到不同的串的数量只能是 2 的 t.size() 次方.</li>\n</ul>\n<h4 id=\"c-c-代码-6\"><a href=\"#c-c-代码-6\" class=\"headerlink\" title=\"c/c++代码\"></a>c/c++代码</h4><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;bits/stdc++.h&gt;</span></span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> std;</span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> t;</span><br><span class=\"line\">    cin &gt;&gt; t;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(t --)&#123;</span><br><span class=\"line\">        string a,b;</span><br><span class=\"line\">        cin &gt;&gt; a &gt;&gt; b;</span><br><span class=\"line\">        <span class=\"type\">bool</span> flag = <span class=\"literal\">false</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i = <span class=\"number\">0</span>;i &lt; b.<span class=\"built_in\">size</span>();i ++)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(b[i] == <span class=\"string\">&#x27;a&#x27;</span>)&#123;</span><br><span class=\"line\">                flag = <span class=\"literal\">true</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(flag &amp;&amp; b.<span class=\"built_in\">size</span>() &gt; <span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">            cout &lt;&lt; <span class=\"string\">&quot;-1&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(flag &amp;&amp; b.<span class=\"built_in\">size</span>() == <span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">            cout &lt;&lt; <span class=\"string\">&quot;1&quot;</span> &lt;&lt; endl;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(!flag)&#123;</span><br><span class=\"line\">            cout &lt;&lt; (<span class=\"type\">long</span> <span class=\"type\">long</span>)<span class=\"built_in\">pow</span>(<span class=\"number\">2</span>,a.<span class=\"built_in\">size</span>()) &lt;&lt; endl;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"}],"PostAsset":[],"PostCategory":[],"PostTag":[],"Tag":[]}}